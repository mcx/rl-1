Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.Specs", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.CSVLogger", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.MLFlowLogger", "reference/generated/torchrl.record.loggers.TensorboardLogger", "reference/generated/torchrl.record.loggers.WandbLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.Specs.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.CSVLogger.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.WandbLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips and Debugging", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "Specs", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "CSVLogger", "Logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "generate_exp_name", "get_logger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Tutos", "Task-specific policy in multi-task environments", "Using pretrained models", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 41, 44, 46, 47, 48, 66, 69, 75, 78, 81, 83, 86, 90, 93, 101, 103, 104, 105, 106, 112, 114, 115, 117, 118, 122, 123, 128, 129, 135, 136, 138, 139, 141, 142, 143, 148, 152, 153, 154, 156, 157, 158, 160, 164, 169, 170, 171, 172, 182, 184, 185, 186, 189, 193, 217, 219, 220, 227, 229, 233, 235, 236, 237, 238], "tensordict": [0, 1, 3, 11, 12, 14, 15, 16, 19, 20, 21, 23, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 112, 114, 115, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 180, 189, 193, 196, 197, 202, 205, 207, 210, 212, 215, 223, 227, 229, 230, 231, 232, 233, 234, 235, 237], "class": [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 219, 220, 221, 227, 229, 230, 235, 236, 237], "ha": [0, 4, 6, 7, 9, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 46, 47, 48, 63, 86, 90, 132, 134, 139, 160, 229, 230, 232, 233, 235, 236, 237, 238], "been": [0, 4, 6, 7, 11, 12, 15, 41, 44, 46, 47, 48, 89, 230, 232, 237], "move": [0, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 94, 113, 138, 195, 230, 237, 238], "out": [0, 3, 4, 23, 41, 44, 46, 47, 48, 116, 117, 135, 138, 139, 167, 168, 227, 235, 236, 237, 238], "dedic": [0, 129, 130, 131, 229, 232], "librari": [0, 4, 5, 6, 7, 8, 9, 46, 98, 223, 224, 228, 229, 237], "take": [0, 1, 3, 7, 16, 41, 44, 46, 47, 48, 66, 84, 85, 87, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 150, 173, 174, 175, 176, 177, 178, 179, 189, 198, 227, 229, 230, 235, 237], "look": [0, 4, 6, 7, 23, 41, 44, 46, 47, 48, 78, 139, 140, 141, 230, 233, 235, 237, 238], "find": [0, 5, 132, 134, 235], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 229, 230, 231, 232, 233, 235, 236, 237, 238], "code": [0, 3, 4, 6, 7, 78, 141, 231, 232, 233, 234, 235, 237, 238], "github": [0, 2, 4, 5, 6, 9, 230, 233, 238], "i": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 52, 62, 63, 64, 65, 66, 67, 69, 74, 75, 78, 81, 82, 83, 85, 86, 88, 89, 90, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 123, 124, 125, 126, 128, 129, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 189, 191, 192, 193, 194, 195, 197, 199, 200, 202, 205, 210, 212, 215, 217, 221, 224, 227, 229, 230, 232, 233, 235, 237, 238], "an": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 65, 70, 74, 75, 78, 79, 88, 89, 90, 94, 96, 102, 103, 104, 105, 106, 112, 113, 114, 116, 120, 129, 130, 131, 135, 138, 139, 140, 143, 146, 147, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 181, 187, 193, 194, 197, 200, 205, 218, 219, 220, 221, 224, 229, 230, 232, 233, 235, 236, 237, 238], "open": [0, 4, 6, 10, 238], "reinforc": [0, 2, 3, 8, 63, 103, 104, 105, 106, 135, 144, 151, 155, 159, 163, 164, 165, 205, 223, 230, 238], "learn": [0, 2, 3, 6, 7, 8, 23, 63, 103, 104, 105, 106, 115, 117, 135, 144, 151, 155, 159, 162, 163, 164, 165, 205, 229, 230, 232, 237, 238], "rl": [0, 1, 2, 3, 4, 7, 9, 11, 12, 14, 15, 45, 117, 128, 136, 142, 151, 161, 189, 224, 227, 229, 230, 233, 235, 236, 237], "pytorch": [0, 1, 2, 7, 88, 197, 227, 229, 233, 236, 237, 238], "It": [0, 2, 3, 6, 23, 27, 41, 44, 45, 46, 47, 48, 56, 75, 90, 103, 105, 109, 122, 123, 135, 139, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 194, 212, 224, 229, 233, 235, 236, 237, 238], "provid": [0, 2, 3, 4, 7, 8, 14, 17, 21, 22, 23, 24, 25, 26, 27, 41, 44, 45, 46, 47, 48, 64, 74, 75, 78, 82, 86, 90, 93, 94, 102, 112, 113, 114, 128, 132, 134, 136, 144, 164, 169, 170, 171, 172, 181, 188, 189, 200, 202, 210, 212, 215, 217, 224, 227, 229, 230, 232, 233, 235, 237, 238], "python": [0, 3, 4, 5, 6, 9, 227, 229, 230, 231, 232, 233, 235, 237, 238], "first": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 44, 64, 71, 75, 78, 88, 90, 113, 116, 120, 138, 139, 157, 180, 196, 229, 230, 232, 233, 235, 236, 237, 238], "low": [0, 67, 229, 230, 238], "high": [0, 8, 67, 170, 173, 174, 177, 229, 230, 238], "level": [0, 19, 160, 229, 230, 238], "abstract": [0, 7, 18, 19, 20, 21, 29, 30, 31, 40, 41, 76, 114, 227, 236, 238], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 15, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 66, 68, 70, 78, 82, 86, 89, 90, 93, 94, 100, 101, 106, 107, 112, 114, 117, 121, 123, 135, 138, 139, 140, 141, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 217, 221, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238], "intend": [0, 6, 11, 12, 14, 15, 67, 238], "effici": [0, 2, 7, 117, 229, 230, 232, 233, 236, 238], "modular": [0, 141, 238], "properli": [0, 236, 238], "test": [0, 3, 4, 96, 112, 194, 217, 235, 238], "aim": [0, 3, 6, 78, 93, 113, 199, 224, 229, 230, 238], "support": [0, 3, 19, 38, 46, 89, 98, 133, 138, 141, 144, 155, 170, 171, 172, 184, 227, 235, 236, 238], "research": [0, 6, 8, 238], "most": [0, 3, 6, 7, 23, 67, 229, 230, 238], "written": [0, 3, 35, 41, 44, 46, 47, 48, 63, 82, 87, 135, 138, 139, 151, 152, 160, 161, 169, 180, 181, 227, 229, 232, 235, 238], "highli": [0, 2, 237, 238], "wai": [0, 3, 78, 93, 161, 230, 232, 233, 237, 238], "can": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 41, 42, 44, 46, 47, 48, 63, 66, 74, 75, 78, 82, 86, 89, 90, 93, 94, 101, 111, 114, 115, 117, 118, 125, 126, 132, 138, 139, 140, 141, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 194, 202, 210, 212, 215, 219, 220, 221, 224, 227, 229, 230, 232, 233, 235, 237, 238], "easili": [0, 3, 6, 47, 48, 202, 210, 212, 215, 230, 236, 237, 238], "swap": [0, 3, 233, 238], "compon": [0, 2, 3, 35, 36, 37, 38, 144, 145, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 193, 197, 232, 233, 235, 238], "transform": [0, 7, 23, 25, 26, 27, 28, 42, 44, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 103, 109, 144, 145, 148, 150, 181, 202, 205, 207, 210, 212, 215, 221, 223, 230, 233], "them": [0, 6, 25, 26, 27, 28, 41, 42, 44, 46, 47, 48, 49, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 160, 181, 229, 230, 232, 233, 235, 236, 237, 238], "write": [0, 7, 23, 44, 77, 138, 139, 141, 153, 154, 162, 164, 169, 181, 227, 229, 230, 232, 233, 235, 236, 238], "new": [0, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 41, 44, 46, 47, 48, 82, 89, 94, 100, 135, 138, 139, 143, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 229, 230, 235, 236, 237, 238], "ones": [0, 19, 23, 41, 44, 46, 47, 48, 64, 66, 68, 75, 78, 86, 90, 93, 138, 229, 236, 237, 238], "littl": [0, 3, 237, 238], "effort": [0, 3, 238], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 56, 63, 64, 66, 67, 70, 72, 75, 78, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 180, 189, 191, 194, 197, 198, 199, 200, 202, 210, 212, 215, 217, 221, 224, 227, 229, 230, 232, 233, 235, 237, 238], "repo": [0, 5, 224, 238], "attempt": [0, 132, 134, 238], "align": [0, 238], "exist": [0, 23, 41, 44, 46, 47, 48, 64, 90, 200, 221, 235, 237, 238], "ecosystem": [0, 238], "dataset": [0, 25, 26, 27, 94, 233, 236, 237, 238], "pillar": [0, 238], "environ": [0, 1, 2, 3, 4, 7, 10, 11, 12, 14, 15, 23, 24, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 67, 68, 72, 74, 75, 78, 85, 89, 90, 94, 96, 101, 112, 114, 115, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 189, 191, 194, 199, 200, 202, 203, 204, 205, 207, 210, 212, 215, 217, 218, 219, 220, 221, 224, 231, 233, 234], "model": [0, 1, 3, 7, 8, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 48, 78, 93, 95, 102, 113, 114, 115, 129, 130, 131, 138, 143, 151, 156, 157, 158, 161, 162, 164, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 223, 224, 227, 231, 234, 235, 237], "data": [0, 3, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 75, 96, 101, 112, 115, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 153, 162, 164, 170, 171, 172, 189, 197, 198, 203, 217, 219, 220, 221, 223, 227, 230, 233, 235, 236, 237], "util": [0, 3, 11, 12, 14, 15, 16, 23, 41, 44, 46, 47, 48, 78, 93, 96, 97, 98, 99, 100, 102, 148, 149, 150, 217, 223, 228, 229, 230, 235, 237, 238], "e": [0, 1, 3, 7, 9, 10, 11, 12, 14, 15, 19, 23, 24, 35, 36, 41, 42, 44, 46, 47, 48, 64, 66, 78, 82, 86, 89, 90, 93, 96, 111, 115, 118, 125, 126, 138, 139, 145, 169, 170, 171, 172, 189, 199, 220, 229, 230, 233, 236, 237, 238], "g": [0, 1, 3, 7, 9, 10, 23, 24, 41, 42, 44, 46, 47, 48, 64, 66, 78, 82, 86, 89, 90, 93, 96, 111, 115, 125, 126, 138, 139, 169, 175, 176, 178, 179, 220, 229, 230, 233, 237, 238], "collector": [0, 3, 11, 12, 13, 14, 15, 16, 135, 197, 198, 203, 204, 217, 219, 220, 223, 227, 230, 237, 238], "contain": [0, 3, 6, 11, 12, 14, 15, 19, 23, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 66, 78, 86, 90, 93, 94, 100, 101, 102, 113, 115, 138, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 188, 189, 199, 202, 205, 207, 210, 212, 215, 217, 218, 219, 220, 221, 227, 230, 233, 235, 237, 238], "etc": [0, 3, 6, 7, 23, 30, 31, 41, 44, 46, 47, 48, 90, 113, 229, 236, 237, 238], "have": [0, 3, 4, 5, 6, 7, 11, 12, 15, 19, 21, 23, 38, 41, 44, 46, 47, 48, 49, 63, 74, 75, 89, 90, 94, 96, 102, 112, 113, 140, 141, 152, 160, 161, 166, 189, 197, 227, 229, 230, 232, 233, 235, 236, 237, 238], "few": [0, 2, 7, 189, 230, 237, 238], "depend": [0, 3, 6, 7, 142, 161, 237, 238], "possibl": [0, 3, 20, 23, 24, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 194, 197, 229, 235, 236, 237, 238], "standard": [0, 75, 81, 94, 101, 109, 115, 116, 117, 132, 170, 171, 172, 229, 230, 238], "numpi": [0, 14, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 88, 197, 229, 230, 237, 238], "common": [0, 3, 44, 47, 48, 129, 130, 131, 146, 147, 217, 224, 227, 229, 232, 233, 235, 236, 237, 238], "openai": [0, 6, 54, 55, 237, 238], "gym": [0, 3, 7, 10, 11, 12, 14, 42, 44, 54, 55, 75, 86, 94, 202, 205, 207, 210, 212, 215, 217, 224, 229, 230, 233, 238], "onli": [0, 1, 3, 6, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 49, 64, 66, 78, 86, 90, 93, 94, 112, 138, 139, 140, 141, 200, 227, 229, 230, 232, 235, 237, 238], "option": [0, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 36, 41, 42, 44, 45, 46, 47, 48, 49, 52, 59, 61, 62, 63, 64, 65, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 132, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 153, 154, 156, 157, 158, 162, 163, 164, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 184, 189, 191, 192, 193, 194, 195, 197, 200, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 229, 230, 238], "On": [0, 6, 230, 236], "end": [0, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 90, 102, 114, 173, 174, 175, 176, 177, 178, 179, 229, 232, 233, 237, 238], "come": [0, 1, 3, 7, 47, 48, 128, 129, 130, 131, 136, 142, 229, 235, 237, 238], "set": [0, 1, 2, 3, 6, 8, 11, 12, 14, 15, 23, 24, 25, 26, 27, 28, 38, 41, 43, 44, 45, 46, 47, 48, 64, 66, 78, 85, 86, 90, 93, 99, 114, 132, 138, 189, 194, 204, 221, 224, 228, 229, 230, 232, 233, 237, 238], "re": [0, 3, 7, 23, 41, 44, 46, 47, 48, 139, 227, 230, 232, 235, 237, 238], "usabl": [0, 227, 238], "function": [0, 3, 7, 10, 16, 23, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 66, 84, 89, 90, 91, 92, 94, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 118, 119, 120, 121, 122, 123, 126, 129, 130, 131, 132, 134, 135, 138, 139, 141, 142, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 202, 205, 207, 210, 212, 215, 217, 223, 229, 230, 232, 235, 236, 237], "cost": [0, 2, 20, 230], "return": [0, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 97, 98, 100, 101, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 118, 121, 122, 123, 124, 125, 126, 129, 130, 131, 133, 137, 138, 139, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 175, 176, 178, 179, 197, 199, 202, 203, 205, 207, 210, 212, 215, 217, 218, 219, 220, 221, 223, 227, 229, 230, 232, 233, 235, 236, 237, 238], "process": [0, 1, 2, 3, 4, 7, 11, 12, 15, 42, 46, 47, 48, 94, 135, 227, 229, 230, 233, 237, 238], "good": [0, 1, 8, 237, 238], "runtim": [0, 3, 23, 41, 44, 46, 47, 48], "perform": [0, 3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 66, 74, 84, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 122, 123, 132, 134, 135, 148, 157, 161, 194, 197, 229, 230, 232, 236, 237], "introduct": [0, 231, 234, 237], "env": [0, 1, 2, 4, 5, 6, 7, 11, 12, 14, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 114, 115, 138, 180, 200, 202, 203, 204, 205, 207, 210, 212, 215, 217, 219, 220, 221, 223, 229, 230, 231, 232, 233, 234], "modul": [0, 3, 7, 10, 23, 41, 44, 45, 46, 47, 48, 66, 78, 84, 86, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 159, 162, 163, 165, 167, 170, 171, 172, 197, 201, 206, 208, 209, 211, 214, 217, 223, 227, 229, 230, 232, 233, 235], "us": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 23, 25, 26, 27, 28, 32, 41, 42, 44, 45, 46, 47, 48, 52, 64, 65, 67, 75, 78, 86, 88, 89, 90, 93, 94, 96, 99, 100, 101, 102, 103, 104, 109, 111, 113, 114, 115, 117, 118, 125, 126, 135, 138, 139, 143, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 177, 187, 188, 194, 197, 198, 200, 203, 204, 205, 213, 217, 221, 224, 227, 228, 231, 232, 234, 236, 237], "object": [0, 3, 5, 11, 12, 14, 15, 19, 23, 35, 36, 37, 38, 41, 44, 46, 47, 48, 78, 89, 90, 94, 115, 128, 129, 136, 138, 139, 140, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 200, 203, 204, 216, 217, 221, 223, 227, 230, 235, 237], "state": [0, 1, 3, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 48, 51, 58, 63, 64, 66, 69, 83, 85, 86, 89, 90, 92, 94, 95, 101, 109, 112, 113, 115, 119, 122, 123, 129, 138, 143, 162, 169, 170, 171, 172, 221, 229, 230, 237], "contribut": 0, "instal": [0, 4, 9, 197, 224, 237], "pretrain": [0, 231, 234], "improv": [0, 2, 72, 151], "structur": [0, 3, 6, 135, 170, 171, 172, 233], "dictionari": [0, 11, 12, 14, 15, 19, 23, 41, 44, 46, 47, 48, 90, 139, 219, 220, 221, 227, 229, 237], "featur": [0, 3, 11, 12, 14, 15, 24, 41, 44, 46, 47, 48, 63, 102, 109, 110, 113, 116, 117, 139, 170, 171, 172, 221, 229, 230, 235, 237], "tensor": [0, 3, 7, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 63, 64, 66, 67, 71, 75, 78, 81, 86, 87, 88, 89, 90, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 121, 124, 125, 126, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 148, 149, 153, 154, 157, 158, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 202, 205, 207, 210, 212, 215, 227, 229, 230, 232, 233, 235, 237, 238], "tensordictmodul": [0, 11, 12, 14, 15, 115, 138, 140, 229, 230, 231, 232, 233, 234], "exampl": [0, 3, 8, 9, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 66, 67, 68, 75, 78, 86, 88, 90, 93, 94, 100, 101, 102, 112, 113, 115, 118, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 147, 170, 171, 172, 189, 190, 191, 192, 193, 195, 196, 198, 202, 205, 207, 210, 212, 215, 217, 227, 229, 230, 231, 232, 233, 236, 237, 238], "do": [0, 3, 6, 11, 12, 14, 15, 44, 74, 100, 116, 130, 227, 229, 230, 232, 237, 238], "": [0, 1, 3, 5, 6, 7, 23, 25, 26, 27, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 94, 96, 102, 117, 132, 138, 139, 164, 170, 171, 172, 212, 215, 229, 230, 232, 233, 236, 237, 238], "don": [0, 5, 6, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 229, 236, 237, 238], "t": [0, 3, 5, 6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 41, 42, 44, 46, 47, 48, 78, 87, 93, 94, 100, 138, 147, 153, 170, 171, 172, 197, 198, 221, 224, 229, 230, 232, 233, 237, 238], "showcas": 0, "implement": [0, 2, 3, 8, 10, 23, 38, 41, 44, 46, 47, 48, 94, 111, 124, 125, 126, 151, 161, 164, 202, 210, 212, 215, 227, 229, 230, 238], "deepmind": [0, 6, 7, 8, 52, 53], "control": [0, 1, 3, 4, 7, 47, 48, 52, 53, 67, 103, 104, 105, 106, 114, 115, 123, 135, 138, 139, 140, 152, 160, 161, 165, 170, 173, 174, 177, 205, 227, 229], "devic": [0, 1, 2, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 35, 36, 41, 43, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 66, 77, 78, 86, 88, 90, 93, 101, 102, 103, 104, 105, 106, 110, 112, 113, 115, 116, 117, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 144, 145, 153, 198, 202, 205, 207, 210, 212, 213, 215, 229, 230, 232, 233, 235, 238], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 15, 23, 41, 44, 45, 46, 47, 48, 52, 53, 66, 74, 75, 84, 89, 90, 91, 92, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 140, 141, 148, 194, 219, 220, 221, 224, 227, 229, 230, 232, 233, 235, 236, 238], "parallel": [0, 1, 3, 7, 11, 12, 15, 96, 151, 218, 219, 220, 221, 230], "vecnorm": [0, 42, 221, 223], "task": [0, 8, 47, 48, 52, 78, 93, 229, 230, 231, 234, 237, 238], "specif": [0, 4, 7, 27, 28, 44, 197, 223, 227, 231, 234], "polici": [0, 1, 2, 3, 7, 11, 12, 13, 14, 15, 41, 44, 45, 46, 47, 48, 67, 99, 100, 117, 129, 130, 131, 132, 134, 135, 138, 139, 144, 145, 151, 152, 153, 160, 161, 162, 164, 194, 198, 202, 203, 204, 205, 207, 210, 217, 219, 220, 227, 230, 231, 233, 234, 235, 237, 238], "multi": [0, 3, 6, 8, 23, 41, 44, 46, 47, 48, 112, 113, 229, 230, 231, 234, 238], "execut": [0, 1, 3, 5, 6, 7, 14, 23, 25, 26, 27, 28, 41, 42, 44, 45, 46, 47, 48, 140, 141, 200, 221, 227, 230, 234, 235, 237], "divers": [0, 47, 48], "rollout": [0, 1, 3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 48, 59, 60, 96, 101, 115, 135, 151, 200, 229, 230, 233, 238], "ddpg": [0, 103, 104, 105, 106, 153, 159, 165, 205, 206, 223, 231, 234], "normal": [0, 75, 94, 102, 111, 113, 118, 125, 126, 132, 139, 152, 160, 161, 194, 195, 221, 227, 230, 237], "observ": [0, 2, 3, 7, 11, 12, 14, 29, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 73, 75, 76, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 100, 103, 104, 105, 106, 112, 119, 120, 122, 128, 129, 130, 131, 133, 134, 135, 136, 137, 142, 143, 144, 145, 157, 170, 171, 172, 181, 202, 205, 207, 210, 212, 215, 217, 227, 230, 232, 235, 236, 237, 238], "build": [0, 3, 6, 16, 19, 23, 41, 44, 46, 47, 48, 94, 101, 115, 139, 197, 201, 206, 208, 209, 211, 213, 214, 216, 227, 233, 235, 236, 237, 238], "evalu": [0, 23, 41, 44, 46, 47, 48, 90, 107, 121, 126, 162, 203, 204, 230], "your": [0, 2, 3, 6, 7, 9, 23, 41, 44, 46, 47, 48, 94, 221, 224, 230, 236, 238], "record": [0, 23, 41, 44, 46, 47, 48, 161, 180, 181, 182, 183, 184, 185, 186, 187, 188, 217, 223, 227, 230], "replai": [0, 7, 14, 25, 26, 27, 28, 32, 33, 34, 38, 39, 47, 48, 153, 154, 162, 164, 197, 213, 217, 223, 227, 230, 233], "buffer": [0, 3, 7, 14, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 66, 78, 86, 90, 93, 138, 141, 153, 154, 162, 164, 197, 213, 217, 223, 227, 230, 233, 235, 237], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 75, 78, 86, 89, 90, 95, 101, 115, 116, 117, 132, 134, 135, 160, 162, 164, 202, 205, 207, 210, 212, 215, 221, 230, 237], "time": [0, 3, 6, 7, 11, 12, 14, 15, 23, 41, 42, 44, 46, 47, 48, 64, 86, 87, 94, 100, 109, 112, 135, 157, 162, 170, 171, 172, 197, 230, 232, 233, 235, 236, 237, 238], "train": [0, 1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 72, 78, 90, 93, 103, 105, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 197, 198, 217, 227, 233, 236, 237], "experi": [0, 3, 25, 32, 182, 184, 185, 186, 187, 188, 224], "result": [0, 1, 3, 6, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 42, 44, 46, 47, 48, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 94, 96, 100, 113, 145, 170, 173, 174, 175, 176, 177, 178, 179, 180, 198, 230, 233, 236, 237, 238], "sampl": [0, 2, 7, 8, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 41, 45, 97, 99, 101, 107, 111, 115, 121, 122, 125, 126, 132, 134, 135, 138, 139, 152, 153, 154, 160, 161, 189, 197, 199, 230, 233, 235, 237, 238], "trajectori": [0, 1, 11, 12, 14, 15, 16, 23, 41, 44, 46, 47, 48, 89, 101, 115, 135, 161, 170, 172, 173, 174, 175, 176, 177, 178, 179, 189, 230, 237, 238], "td": [0, 19, 50, 51, 52, 53, 54, 55, 57, 58, 64, 67, 68, 75, 88, 90, 94, 100, 101, 114, 115, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 171, 172, 175, 176, 178, 179, 180, 189, 196, 202, 205, 207, 210, 212, 215, 235, 236, 237, 238], "lambda": [0, 11, 12, 14, 15, 42, 156, 158, 172, 175, 176, 178, 179, 217, 235, 236, 237, 238], "pixel": [0, 3, 6, 19, 63, 73, 78, 79, 88, 93, 103, 119, 120, 181, 202, 207, 210, 212, 215, 229, 231, 233, 234, 237, 238], "dqn": [0, 133, 137, 144, 154, 155, 159, 165, 207, 208, 223, 231, 234], "problem": [0, 6, 7, 14, 237], "deep": [0, 8, 63, 103, 104, 105, 106, 108, 135, 151, 159, 164, 165, 205, 229], "q": [0, 103, 104, 105, 106, 108, 110, 144, 145, 153, 154, 155, 159, 162, 164, 212, 215, 235], "network": [0, 1, 7, 23, 41, 44, 46, 47, 48, 102, 103, 104, 105, 106, 108, 109, 110, 113, 117, 119, 120, 122, 123, 129, 130, 131, 138, 153, 154, 155, 159, 162, 164, 165, 167, 170, 171, 172, 202, 205, 210, 216, 217, 227, 229, 232, 235, 237], "regular": [0, 15, 138, 139, 145, 155, 198, 227, 229, 235, 236, 237], "conclus": 0, "api": [0, 3, 4, 78, 93, 227, 237, 238], "packag": [0, 5, 6, 9, 223, 224, 230, 237], "helper": [0, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 229, 238], "compos": [0, 3, 23, 25, 26, 27, 33, 34, 39, 41, 44, 46, 47, 48, 89, 90, 94, 157, 202, 205, 207, 210, 212, 215, 223, 230, 232, 237, 238], "tensorspec": [0, 3, 13, 17, 18, 19, 20, 21, 22, 24, 30, 31, 41, 45, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 123, 128, 132, 134, 135, 136, 138, 139, 140, 223], "envbas": [0, 3, 11, 12, 14, 15, 42, 44, 46, 47, 48, 49, 74, 89, 90, 94, 96, 101, 114, 115, 194, 200, 202, 203, 204, 205, 207, 210, 212, 215, 217, 219, 220, 221, 223], "gymlikeenv": [0, 223], "envmetadata": [0, 223], "spec": [0, 2, 3, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 43, 44, 45, 46, 47, 48, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 96, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 202, 205, 207, 210, 212, 215, 223, 229, 230, 232, 238], "vector": [0, 7, 17, 24, 47, 48, 67, 103, 105, 113, 172, 178, 179, 223, 229, 230, 232, 233, 235, 237], "domain": [0, 2, 7, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 86, 138, 139, 140, 141, 223, 237, 238], "hook": [0, 23, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 133, 134, 135, 137, 144, 145, 148, 191, 192, 194, 195, 197, 198, 223], "explor": [0, 1, 95, 117, 132, 134, 135, 138, 139, 151, 194, 203, 204, 217, 223, 229, 230], "planner": [0, 101, 115, 223], "distribut": [0, 2, 3, 8, 9, 75, 101, 107, 108, 109, 111, 115, 118, 121, 122, 123, 124, 125, 126, 132, 133, 139, 140, 144, 152, 155, 160, 161, 223, 227, 229, 230, 235, 237, 238], "sac": [0, 162, 164, 214, 215, 223], "redq": [0, 162, 211, 212, 223], "ppo": [0, 7, 139, 152, 160, 161, 202, 209, 210, 223], "a2c": [0, 151, 201, 223], "dreamer": [0, 61, 109, 156, 157, 158, 223], "trainer": [0, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 229], "checkpoint": [0, 223, 233], "builder": [0, 223, 230, 237], "logger": [0, 181, 182, 184, 185, 186, 187, 188, 192, 194, 197, 217, 221, 223], "_util": [0, 10, 223], "implement_for": [0, 223], "work": [0, 3, 6, 7, 23, 41, 44, 46, 47, 48, 64, 78, 94, 102, 113, 197, 224, 230, 232, 233, 235, 236, 237, 238], "what": [0, 7, 29, 41, 44, 46, 47, 48, 86, 224, 230, 233, 235, 237, 238], "version": [0, 1, 5, 10, 23, 41, 44, 46, 47, 48, 164, 172, 224, 229, 230, 233, 237], "habitat": [0, 56, 224, 233], "lab": [0, 3, 52, 53, 224], "up": [0, 1, 2, 3, 7, 8, 20, 224, 229, 230, 235, 237], "issu": [0, 4, 7, 138, 139, 224, 238], "about": [0, 4, 224, 229, 230, 237, 238], "mujoco": [0, 5, 7, 224], "prerequisit": 0, "render": [0, 7, 194, 224, 229, 230], "all": [0, 3, 7, 11, 12, 14, 15, 23, 41, 42, 44, 45, 46, 47, 48, 49, 66, 70, 75, 78, 82, 84, 86, 87, 89, 90, 91, 92, 93, 94, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 138, 139, 141, 148, 157, 193, 197, 199, 219, 220, 221, 224, 227, 229, 230, 231, 232, 235, 236, 237, 238], "bindindg": 0, "2": [0, 1, 7, 9, 11, 12, 14, 21, 22, 23, 41, 42, 44, 46, 47, 48, 59, 60, 64, 66, 67, 75, 78, 86, 90, 93, 94, 102, 103, 104, 105, 110, 112, 113, 118, 133, 134, 135, 138, 142, 144, 152, 153, 160, 162, 164, 169, 170, 171, 172, 175, 176, 178, 179, 181, 189, 229, 230, 232, 233, 236, 237, 238], "1": [0, 1, 2, 3, 7, 9, 11, 12, 14, 15, 20, 21, 22, 23, 24, 30, 31, 41, 42, 44, 45, 46, 47, 48, 51, 58, 59, 60, 62, 64, 66, 67, 68, 72, 74, 75, 78, 86, 87, 88, 90, 93, 94, 100, 101, 102, 103, 104, 106, 110, 111, 113, 115, 116, 117, 118, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 138, 141, 142, 144, 148, 151, 152, 157, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 189, 194, 195, 202, 205, 207, 210, 212, 215, 217, 221, 224, 227, 229, 230, 232, 233, 236, 237, 238], "old": [0, 160, 237], "bind": [0, 5], "py": [0, 3, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238], "when": [0, 1, 3, 4, 7, 11, 12, 14, 15, 23, 25, 26, 27, 28, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 66, 74, 75, 78, 82, 86, 89, 90, 93, 94, 99, 101, 113, 114, 115, 116, 125, 138, 139, 141, 148, 152, 160, 161, 169, 180, 181, 221, 224, 227, 229, 230, 233, 235, 236, 237], "pro": [0, 6, 224], "tip": [0, 6, 224], "debug": [0, 5, 224, 237], "gradient": [0, 23, 41, 44, 46, 47, 48, 90, 111, 117, 125, 126, 151, 163, 169, 170, 171, 172, 197, 229, 230], "relat": [0, 9, 229], "error": [0, 1, 3, 6, 9, 10, 23, 41, 44, 46, 47, 48, 96, 147, 229, 230, 236, 237], "newcom": 0, "my": 0, "too": [0, 6, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 111, 125, 126, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 229, 230, 237], "slow": [0, 3], "intermedi": [0, 233], "bug": [0, 238], "resourc": [0, 224], "functorch": [0, 7, 9, 138, 141, 146, 230, 238], "blog": 0, "websit": 0, "index": [0, 6, 7, 9, 14, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 67, 100, 229, 232, 236, 238], "search": [0, 230], "page": [0, 6], "somewhat": [1, 237], "equival": [1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 90, 237, 238], "dataload": [1, 236], "except": [1, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 70, 121, 147, 229, 230, 236, 237], "thei": [1, 3, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 68, 70, 78, 89, 90, 93, 112, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 197, 227, 229, 230, 232, 233, 235, 236, 237, 238], "collect": [1, 3, 7, 11, 12, 14, 15, 23, 25, 26, 27, 28, 75, 78, 93, 96, 135, 153, 162, 164, 189, 197, 198, 199, 200, 217, 227, 229, 230, 233, 236, 237, 238], "over": [1, 2, 3, 7, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 67, 75, 87, 141, 155, 157, 199, 227, 229, 235, 236, 237], "non": [1, 7, 23, 41, 44, 46, 47, 48, 62, 66, 78, 86, 90, 93, 138, 139, 157, 170, 171, 172, 229, 235, 237], "static": [1, 94], "like": [1, 6, 23, 41, 44, 46, 47, 48, 56, 88, 96, 162, 229, 233, 236, 237], "being": [1, 3, 7, 15, 23, 41, 44, 46, 47, 48, 67, 90, 99, 135, 152, 160, 161, 181, 198, 219, 220, 221, 229, 230, 233], "accept": [1, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 48, 66, 78, 82, 86, 90, 93, 138, 139, 140, 227, 235, 237], "two": [1, 7, 9, 23, 41, 44, 46, 47, 48, 75, 78, 93, 106, 139, 160, 164, 166, 194, 197, 202, 210, 212, 215, 229, 230, 232, 235, 236, 237, 238], "main": [1, 2, 4, 42, 139, 197, 229, 230, 232, 237], "argument": [1, 3, 11, 12, 14, 15, 19, 23, 41, 44, 46, 47, 48, 66, 78, 86, 89, 90, 93, 102, 113, 116, 138, 139, 140, 142, 180, 191, 199, 202, 205, 207, 210, 212, 215, 217, 218, 221, 229, 230, 235, 237], "list": [1, 5, 6, 7, 8, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 41, 44, 45, 46, 47, 48, 63, 78, 82, 90, 93, 113, 141, 142, 168, 170, 172, 180, 194, 219, 220, 229, 230, 232, 233, 235, 236, 237, 238], "constructor": [1, 14, 89, 170, 171, 172, 202, 205, 207, 210, 212, 215, 218, 221, 235], "iter": [1, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 46, 47, 48, 69, 75, 83, 94, 102, 113, 138, 139, 140, 141, 146, 168, 194, 196, 197, 202, 210, 212, 215, 227, 229], "step": [1, 3, 7, 11, 12, 14, 15, 23, 41, 42, 44, 45, 46, 47, 48, 49, 51, 58, 74, 75, 85, 87, 90, 100, 101, 109, 112, 114, 115, 132, 134, 135, 139, 151, 156, 161, 169, 180, 189, 194, 197, 227, 229, 230, 232, 233, 236, 238], "queri": [1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 78, 89, 94, 141, 235, 238], "defin": [1, 2, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 170, 171, 172, 180, 218, 230, 235, 236, 237], "number": [1, 3, 7, 11, 12, 14, 15, 18, 20, 23, 24, 25, 26, 27, 32, 35, 36, 37, 41, 44, 45, 46, 47, 48, 63, 67, 72, 74, 75, 81, 85, 87, 94, 101, 102, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 122, 123, 124, 125, 126, 132, 134, 135, 138, 139, 150, 156, 162, 164, 189, 191, 194, 197, 198, 199, 200, 219, 220, 221, 229, 230, 233, 237], "befor": [1, 3, 5, 6, 9, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 49, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 91, 113, 116, 117, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 171, 172, 229, 230, 235, 236, 237], "deliv": [1, 230, 238], "stack": [1, 6, 7, 47, 48, 94, 100, 140, 141, 180, 189, 230, 232, 235, 236, 238], "user": [1, 2, 4, 7, 23, 41, 44, 46, 47, 48, 85, 90, 112, 218, 227, 230, 235, 237, 238], "reset": [1, 3, 7, 11, 12, 14, 15, 41, 42, 44, 45, 46, 47, 48, 51, 58, 63, 66, 69, 74, 78, 82, 83, 85, 86, 87, 89, 92, 94, 95, 100, 127, 135, 180, 202, 205, 207, 210, 212, 215, 229, 230, 232, 238], "whenev": [1, 3, 198], "reach": [1, 11, 12, 14, 15, 41, 44, 46, 47, 48, 132, 134, 135, 237, 238], "done": [1, 3, 6, 7, 11, 12, 14, 19, 23, 41, 42, 44, 45, 46, 47, 48, 51, 58, 59, 60, 75, 81, 83, 85, 86, 94, 100, 101, 115, 153, 154, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 202, 205, 207, 210, 212, 215, 229, 230, 232, 233, 236, 237, 238], "after": [1, 7, 19, 23, 41, 44, 46, 47, 48, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 100, 116, 132, 134, 157, 229, 230, 233, 235, 236, 237], "predifin": 1, "becaus": [1, 6, 89, 106, 112, 138, 139, 229, 230, 232, 236, 237], "potenti": 1, "comput": [1, 3, 7, 11, 14, 20, 23, 41, 44, 46, 47, 48, 66, 75, 84, 89, 90, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 125, 126, 129, 132, 134, 135, 139, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 200, 229, 230, 232, 233, 235], "heavi": [1, 7], "crucial": [1, 229, 230, 237], "configur": [1, 7, 11, 12, 14, 15, 161, 202, 210, 212, 215], "appropri": [1, 6, 11, 12, 14, 15, 39, 40, 218, 221], "paramet": [1, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 210, 212, 215, 217, 218, 219, 220, 221, 229, 230, 233, 235, 238], "consider": [1, 3, 7, 229], "whether": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 45, 46, 47, 48, 90, 102, 113, 142, 153, 154, 155, 162, 164, 172, 230, 237], "should": [1, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 38, 41, 44, 45, 46, 47, 48, 63, 66, 75, 82, 83, 84, 89, 90, 91, 92, 94, 96, 100, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 138, 139, 148, 159, 160, 161, 162, 165, 169, 170, 171, 172, 181, 193, 194, 197, 217, 219, 220, 221, 227, 229, 230, 232, 233, 237, 238], "occur": [1, 7, 12, 64, 138, 139, 157, 237], "serial": [1, 3, 23, 41, 44, 46, 47, 48, 94], "optim": [1, 7, 23, 41, 44, 46, 47, 48, 101, 115, 116, 117, 161, 164, 193, 197, 202, 210, 217, 227, 229, 230, 236], "syncdatacollector": [1, 11, 12, 15, 217, 220, 223], "worker": [1, 11, 12, 14, 15, 42, 46, 47, 48, 94, 219, 220, 221, 237, 238], "multisyncdatacollector": [1, 220, 223, 238], "split": [1, 11, 12, 14, 15, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 227, 238], "workload": 1, "across": [1, 7, 94, 135, 198, 236], "aggreg": [1, 102, 103, 104, 141, 236], "final": [1, 132, 134, 135, 140, 170, 194, 229, 230, 237], "multiasyncdatacollector": [1, 15, 219, 223, 229, 230, 238], "sever": [1, 7, 21, 23, 41, 44, 46, 47, 48, 64, 90, 161, 237], "batch": [1, 3, 11, 12, 14, 15, 16, 20, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 47, 48, 75, 90, 107, 108, 112, 116, 121, 124, 135, 138, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 189, 196, 197, 198, 219, 220, 221, 227, 229, 230, 232, 233, 235, 237, 238], "gather": [1, 169, 200, 224, 235, 237], "continu": [1, 8, 18, 30, 103, 104, 105, 106, 135, 139, 141, 165, 170, 173, 174, 177, 205, 229, 237, 238], "concomittantli": 1, "impli": [1, 237], "weight": [1, 8, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 117, 138, 151, 152, 157, 198, 216, 227, 229, 230, 232, 238], "mai": [1, 3, 4, 6, 7, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 75, 83, 90, 94, 113, 227, 229, 233, 237, 238], "slightli": [1, 229, 233, 235, 237], "lag": [1, 11, 12, 14, 15], "therefor": [1, 3, 6, 161, 236, 237], "although": [1, 7, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 227, 229, 230], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 7, 11, 12, 14, 15, 25, 26, 27, 28, 35, 36, 41, 44, 45, 46, 47, 48, 63, 78, 82, 87, 89, 93, 132, 134, 138, 139, 150, 151, 152, 153, 155, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 180, 181, 197, 198, 227, 229, 230, 232, 235, 237], "asynchron": [1, 8, 12, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 151, 219], "off": [1, 2, 111, 125, 126, 164, 194, 203, 227, 230, 233, 237], "curriculum": 1, "For": [1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 75, 116, 144, 151, 155, 161, 194, 205, 227, 229, 233, 235, 237], "remot": [1, 47, 48, 237], "necessari": [1, 5, 7, 11, 12, 14, 15, 83, 162, 170, 171, 172, 229], "synchronis": [1, 42], "from": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 64, 67, 69, 75, 78, 83, 85, 86, 88, 89, 90, 93, 94, 100, 101, 103, 104, 105, 106, 111, 113, 114, 115, 116, 118, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 152, 153, 154, 160, 161, 162, 164, 169, 170, 171, 172, 180, 181, 189, 197, 199, 200, 202, 205, 207, 210, 212, 213, 215, 217, 218, 221, 224, 227, 229, 230, 232, 233, 235, 236, 237, 238], "either": [1, 4, 23, 41, 44, 46, 47, 48, 143, 188, 205, 227, 233, 236, 237, 238], "update_policy_weights_": [1, 11, 12, 14, 15, 229, 230, 238], "update_at_each_batch": [1, 11, 12, 15, 229], "true": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 59, 60, 64, 66, 74, 75, 78, 81, 85, 86, 88, 90, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 110, 111, 113, 115, 116, 117, 125, 126, 129, 130, 131, 132, 135, 138, 139, 140, 141, 147, 151, 152, 156, 157, 158, 160, 161, 162, 164, 166, 170, 171, 172, 175, 176, 178, 179, 180, 181, 191, 192, 194, 197, 207, 221, 227, 229, 230, 232, 233, 235, 236, 237, 238], "second": [1, 7, 164, 196, 229, 230, 232, 233, 235, 236, 237, 238], "consid": [1, 7, 23, 41, 44, 46, 47, 48, 67, 107, 124, 229, 236], "oper": [1, 3, 6, 7, 11, 12, 15, 23, 41, 44, 46, 47, 48, 89, 118, 129, 130, 131, 138, 143, 144, 151, 152, 153, 154, 155, 160, 161, 169, 170, 171, 172, 197, 205, 207, 212, 215, 227, 229, 230, 232, 235, 237], "instanc": [1, 3, 6, 7, 11, 12, 14, 15, 23, 29, 41, 42, 44, 45, 46, 47, 48, 53, 63, 66, 75, 84, 86, 89, 91, 92, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 118, 119, 120, 122, 123, 132, 134, 135, 139, 140, 141, 148, 181, 188, 194, 200, 202, 203, 204, 205, 207, 210, 212, 215, 217, 219, 220, 227, 230, 235, 236, 237], "cpu": [1, 3, 7, 9, 11, 12, 14, 17, 23, 29, 35, 36, 41, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 66, 78, 86, 90, 93, 101, 115, 117, 136, 138, 141, 202, 205, 207, 210, 212, 215, 229, 230, 232, 233, 235, 236, 237, 238], "slower": 1, "than": [1, 7, 11, 12, 14, 15, 106, 113, 118, 132, 134, 138, 198, 224, 229, 230, 235, 236, 237, 238], "one": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 22, 24, 25, 26, 27, 28, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 66, 67, 74, 75, 78, 84, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 137, 138, 139, 144, 145, 148, 150, 151, 152, 153, 154, 160, 161, 162, 191, 193, 194, 197, 200, 202, 210, 212, 215, 221, 224, 227, 229, 230, 232, 233, 235, 236, 237], "cuda": [1, 3, 6, 23, 41, 44, 46, 47, 48, 66, 77, 78, 86, 90, 93, 138, 190, 229, 230, 233, 236, 237], "multipl": [1, 3, 4, 7, 11, 12, 14, 15, 20, 47, 48, 64, 67, 82, 89, 94, 112, 116, 117, 138, 139, 162, 212, 221, 227, 230, 236, 238], "infer": [1, 47, 48, 94, 116, 164, 229, 235, 236], "dispatch": 1, "avail": [1, 5, 139, 144, 145, 219, 220, 229, 230, 237], "speed": [1, 2, 7, 20, 229, 230], "avoid": [1, 23, 41, 44, 46, 47, 48, 90, 94, 138, 199, 235], "oom": 1, "choic": [1, 2, 118], "size": [1, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 41, 43, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 64, 78, 84, 86, 88, 90, 91, 93, 101, 102, 107, 112, 113, 115, 118, 121, 122, 123, 124, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 169, 170, 171, 172, 181, 189, 202, 205, 207, 210, 212, 215, 229, 230, 232, 233, 235, 237, 238], "pass": [1, 3, 14, 19, 23, 27, 41, 42, 43, 44, 46, 47, 48, 66, 84, 89, 91, 92, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 116, 118, 119, 120, 122, 123, 132, 134, 135, 138, 139, 141, 147, 148, 170, 171, 172, 219, 220, 221, 229, 230, 232, 237], "ie": [1, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "store": [1, 7, 11, 12, 14, 15, 19, 23, 27, 28, 35, 36, 37, 41, 44, 46, 47, 48, 94, 101, 112, 115, 202, 205, 207, 210, 212, 215, 227, 229, 230, 233, 236, 237], "while": [1, 3, 6, 7, 23, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 160, 161, 229, 230, 233, 238], "wait": [1, 230], "also": [1, 2, 3, 7, 23, 27, 41, 44, 46, 47, 48, 82, 83, 90, 123, 140, 141, 151, 153, 154, 170, 227, 229, 230, 232, 235, 236, 237], "impact": 1, "memori": [1, 7, 20, 23, 35, 41, 42, 44, 46, 47, 48, 66, 78, 86, 90, 93, 94, 138, 221, 227, 229, 238], "manag": [1, 7, 167, 168, 194, 229, 235], "kei": [1, 3, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 41, 44, 46, 47, 48, 49, 63, 64, 69, 75, 78, 82, 83, 86, 87, 89, 90, 93, 94, 100, 101, 114, 115, 132, 134, 135, 138, 139, 140, 141, 142, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 181, 193, 194, 196, 197, 200, 202, 210, 212, 215, 227, 229, 230, 232, 235, 237, 238], "which": [1, 3, 6, 7, 10, 11, 12, 14, 15, 19, 20, 23, 24, 28, 41, 44, 46, 47, 48, 49, 63, 64, 72, 74, 75, 78, 87, 89, 90, 96, 111, 125, 126, 129, 130, 131, 138, 139, 141, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 170, 189, 193, 202, 205, 207, 210, 212, 215, 227, 229, 230, 232, 233, 235, 236, 237], "passing_devic": [1, 11, 12, 14, 15, 229, 230, 238], "dure": [1, 11, 12, 14, 15, 41, 44, 46, 47, 48, 72, 90, 194, 197, 229, 237], "A": [1, 3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 56, 72, 78, 86, 89, 90, 92, 94, 95, 96, 100, 101, 102, 113, 115, 117, 118, 132, 134, 139, 140, 141, 144, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 182, 183, 184, 191, 197, 198, 202, 207, 210, 212, 215, 217, 230, 236, 237], "heurist": [1, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 135, 229, 237], "usual": [1, 3, 5, 6, 7, 41, 44, 46, 47, 48, 117, 180, 202, 210, 212, 215, 224, 227, 237], "same": [1, 3, 14, 23, 41, 42, 44, 46, 47, 48, 67, 72, 74, 75, 89, 90, 94, 102, 113, 135, 229, 230, 232, 233, 235, 236, 237], "storag": [1, 2, 7, 23, 25, 26, 27, 28, 35, 36, 37, 41, 43, 44, 46, 47, 48, 223, 227, 229, 230, 233], "default": [1, 3, 9, 11, 12, 14, 15, 17, 19, 20, 23, 24, 25, 26, 27, 35, 36, 41, 44, 46, 47, 48, 49, 52, 63, 64, 74, 75, 78, 81, 86, 87, 88, 90, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 132, 134, 135, 136, 138, 139, 142, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 189, 191, 192, 194, 195, 197, 202, 205, 210, 212, 215, 217, 221, 227, 229, 230, 233, 235, 236, 237, 238], "behaviour": [1, 3, 44, 64, 111, 125, 126, 194, 230], "besid": 1, "those": [1, 4, 6, 47, 48, 75, 139, 140, 141, 198, 219, 220, 229, 230, 237], "choos": [1, 229], "follow": [1, 2, 3, 5, 6, 7, 23, 41, 44, 45, 46, 47, 48, 78, 102, 113, 150, 152, 160, 163, 197, 212, 215, 227, 229, 230, 232, 235, 236, 237, 238], "max_frames_per_traj": [1, 11, 12, 14, 15, 199, 229, 238], "frame": [1, 11, 12, 14, 15, 23, 44, 63, 72, 132, 134, 135, 180, 181, 191, 194, 197, 199, 200, 229, 230, 237, 238], "call": [1, 3, 6, 7, 10, 11, 12, 14, 15, 23, 25, 26, 27, 28, 35, 36, 37, 38, 41, 44, 46, 47, 48, 63, 66, 68, 77, 78, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 115, 116, 118, 119, 120, 122, 123, 132, 134, 135, 138, 139, 141, 148, 169, 180, 194, 227, 229, 230, 235, 236, 237], "frames_per_batch": [1, 11, 12, 14, 15, 199, 229, 230, 238], "each": [1, 3, 6, 7, 11, 12, 14, 15, 16, 21, 22, 23, 27, 41, 42, 44, 46, 47, 48, 78, 82, 85, 86, 87, 93, 94, 132, 141, 144, 145, 175, 176, 178, 179, 194, 219, 220, 229, 230, 233, 235, 237, 238], "init_random_fram": [1, 11, 12, 14, 15, 199, 229, 230], "random": [1, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 33, 41, 44, 45, 46, 47, 48, 67, 74, 75, 86, 96, 138, 139, 162, 194, 200, 229, 230, 233, 237, 238], "rand_step": [1, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 94, 237, 238], "reset_at_each_it": [1, 11, 12, 14, 15, 229], "split_traj": [1, 11, 12, 14, 15, 229], "pad": [1, 16, 102, 103, 104, 112, 229, 230], "along": [1, 63, 64, 75, 82, 88, 113, 117, 138, 139, 230, 236], "mask": [1, 11, 12, 14, 229, 230, 236, 237, 238], "point": [1, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 39, 40, 41, 44, 46, 47, 48, 63, 66, 78, 86, 88, 90, 93, 114, 138, 150, 155, 197, 224, 232, 237], "boolean": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 44, 132, 173, 174, 175, 176, 177, 178, 179, 227], "repres": [1, 3, 11, 12, 14, 15, 19, 27, 41, 44, 46, 47, 48, 72, 139, 144, 145, 166, 170, 235, 236], "valid": [1, 90, 102, 113, 132, 134, 160, 227, 237], "valu": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 49, 62, 63, 64, 67, 74, 75, 78, 80, 82, 86, 87, 88, 89, 90, 93, 94, 103, 104, 105, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 189, 191, 192, 193, 194, 197, 202, 205, 210, 212, 215, 217, 227, 229, 230, 232, 235, 237, 238], "exploration_mod": [1, 11, 14, 194, 223, 229, 230, 235], "strategi": [1, 227, 229], "reset_when_don": [1, 11, 14], "central": 2, "part": [2, 7, 23, 41, 44, 46, 47, 48, 75, 82, 142, 189, 221, 229, 230, 235, 237], "algorithm": [2, 7, 8, 11, 12, 45, 72, 151, 161, 162, 163, 164, 189, 202, 203, 210, 227, 229, 230, 233, 236, 238], "wide": [2, 3, 4], "we": [2, 3, 4, 6, 8, 19, 23, 41, 42, 44, 46, 47, 48, 78, 94, 101, 112, 224, 227, 229, 230, 232, 233, 235, 236, 237, 238], "give": [2, 6, 45, 224, 229, 230, 233, 238], "abil": 2, "veri": [2, 3, 229, 230, 237, 238], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 64], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 223, 229, 230, 233], "advis": [2, 237], "share": [2, 5, 7, 35, 36, 37, 38, 42, 47, 48, 94, 129, 130, 131, 221, 232, 235, 237, 238], "due": [2, 3, 4, 233, 237], "lower": [2, 11, 12, 14, 15, 18, 94, 122, 123, 236], "serialis": 2, "memmaptensor": [2, 233], "well": [2, 3, 7, 11, 12, 15, 23, 38, 41, 44, 46, 47, 48, 122, 123, 229, 230, 233, 235, 236, 237, 238], "specifi": [2, 10, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 82, 84, 91, 101, 138, 139, 229, 235], "file": [2, 5, 6, 7, 180, 227, 230, 234], "locat": [2, 6, 44, 75, 81, 111, 118, 125, 126, 236], "node": [2, 202, 205, 207, 210, 212, 215], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 14, 75, 94, 101, 107, 109, 112, 115, 124, 132, 139, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 229, 230, 237, 238], "liststorag": [2, 25, 26, 27, 223], "were": [2, 6, 47, 48, 229], "found": [2, 5, 6, 9, 19, 23, 27, 41, 44, 46, 47, 48, 94, 139, 153, 161, 229, 230, 235], "rough": 2, "benchmark": [2, 3, 8], "http": [2, 4, 5, 6, 9, 25, 32, 46, 63, 78, 103, 104, 105, 106, 109, 110, 115, 117, 119, 120, 122, 123, 135, 144, 151, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 170, 173, 174, 177, 202, 205, 210, 212, 215, 233, 238], "com": [2, 4, 5, 6, 9, 233, 238], "tree": 2, "type": [2, 3, 23, 25, 27, 29, 41, 44, 45, 46, 47, 48, 66, 78, 86, 90, 93, 94, 102, 113, 117, 132, 134, 138, 139, 146, 202, 205, 207, 210, 212, 215, 219, 229, 230, 236, 237], "1x": 2, "lazytensorstorag": [2, 223], "83x": 2, "3": [2, 3, 5, 6, 9, 11, 12, 14, 19, 20, 21, 22, 23, 24, 41, 44, 46, 47, 48, 66, 75, 78, 86, 88, 90, 93, 101, 102, 103, 104, 110, 112, 113, 115, 118, 128, 129, 130, 131, 133, 136, 138, 141, 142, 144, 147, 157, 170, 171, 172, 175, 176, 178, 179, 181, 196, 207, 227, 229, 230, 232, 233, 236, 237, 238], "44x": 2, "parent": [2, 3, 29, 41, 64, 72, 75, 78, 89, 129, 161, 230, 236, 237, 238], "subclass": [2, 3, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 96, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 133, 134, 135, 137, 138, 139, 140, 148, 161, 229], "basic": [2, 45, 237], "properti": [2, 41, 44, 45, 46, 47, 48, 90, 107, 111, 116, 121, 124, 125, 126, 235, 236], "action": [2, 3, 7, 8, 11, 12, 14, 20, 24, 29, 41, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 67, 68, 72, 74, 83, 90, 100, 101, 103, 104, 105, 106, 108, 109, 113, 114, 115, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 142, 144, 145, 154, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 202, 205, 207, 210, 212, 215, 217, 221, 227, 229, 230, 232, 233, 235, 236, 237, 238], "shape": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 44, 46, 47, 48, 49, 64, 75, 88, 96, 107, 108, 113, 116, 118, 121, 124, 136, 138, 141, 166, 181, 189, 197, 217, 229, 230, 232, 233, 235, 236, 237, 238], "dtype": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 41, 44, 45, 46, 47, 48, 51, 58, 59, 60, 61, 66, 67, 68, 75, 78, 86, 88, 90, 93, 96, 101, 115, 116, 117, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 144, 145, 170, 171, 172, 202, 205, 207, 210, 212, 215, 229, 230, 232, 233, 235, 236, 237, 238], "import": [2, 3, 5, 6, 9, 11, 12, 14, 25, 27, 32, 42, 44, 45, 47, 48, 75, 78, 86, 93, 94, 101, 113, 115, 118, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 152, 170, 171, 172, 191, 194, 202, 205, 207, 210, 212, 215, 217, 229, 230, 232, 233, 235, 236, 237, 238], "match": [2, 3, 5, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 46, 47, 48, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 102, 107, 113, 124, 138, 139, 160, 162, 164, 198, 230, 232, 235, 236, 237, 238], "input": [2, 3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 45, 46, 47, 48, 64, 66, 67, 68, 69, 78, 82, 83, 87, 89, 91, 93, 96, 100, 102, 103, 104, 105, 106, 112, 113, 116, 117, 122, 123, 135, 138, 139, 140, 141, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 199, 217, 227, 230, 236, 237, 238], "output": [2, 3, 11, 12, 14, 15, 23, 25, 26, 27, 41, 44, 45, 46, 47, 48, 63, 78, 87, 89, 93, 96, 102, 103, 104, 108, 109, 112, 113, 118, 129, 132, 134, 135, 138, 139, 140, 141, 144, 145, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 181, 189, 229, 232, 233, 236, 237, 238], "send": [2, 3, 7, 230, 236, 238], "receiv": [2, 3, 23, 41, 44, 46, 47, 48, 89, 113, 230, 232], "parallelenv": [2, 3, 11, 12, 14, 15, 46, 48, 218, 223, 229, 230, 232, 237, 238], "creat": [2, 3, 4, 5, 6, 9, 11, 12, 15, 23, 25, 26, 27, 41, 42, 44, 46, 47, 48, 49, 78, 82, 89, 90, 94, 100, 102, 103, 104, 105, 106, 110, 113, 114, 139, 154, 155, 162, 181, 200, 203, 204, 217, 219, 220, 229, 230, 233, 235, 236, 237, 238], "commun": [2, 3, 224, 237], "spawn": [2, 3, 46], "check": [2, 3, 4, 5, 6, 10, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 64, 70, 96, 138, 139, 146, 229, 230, 232, 233, 237], "check_env_spec": [2, 3, 223], "method": [2, 3, 11, 12, 14, 15, 23, 27, 35, 36, 37, 38, 41, 44, 46, 47, 48, 63, 66, 75, 78, 79, 86, 90, 93, 101, 112, 129, 130, 131, 138, 139, 140, 146, 151, 180, 218, 227, 228, 229, 235, 236, 237], "saniti": [2, 3, 6, 96], "offer": [3, 6, 237], "handl": [3, 23, 41, 44, 46, 47, 48, 94, 113, 197, 219, 220], "differ": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 63, 67, 90, 113, 115, 144, 145, 161, 166, 170, 171, 194, 197, 198, 219, 220, 227, 229, 230, 232, 233, 236, 237], "backend": [3, 6, 227, 229], "dm": [3, 237], "base": [3, 7, 8, 11, 12, 14, 15, 34, 40, 45, 46, 92, 129, 156, 197, 202, 210, 212, 215, 227, 229, 231, 234, 237], "custom": [3, 4, 23, 41, 44, 46, 47, 48, 221], "goal": [3, 229, 230], "abl": [3, 232, 236, 238], "even": [3, 7, 12, 35, 36, 37, 38, 42, 229, 236, 237], "simul": [3, 4, 6, 7, 60, 61, 101, 115, 229], "some": [3, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 78, 96, 103, 139, 140, 141, 189, 199, 227, 229, 230, 235, 237, 238], "box": [3, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "wrapper": [3, 15, 27, 28, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 118, 132, 134, 135, 139, 143, 170, 184, 185, 186, 221, 229, 233, 237], "under": [3, 23, 41, 44, 46, 47, 48, 138, 139, 229, 237], "lib": [3, 4, 5, 6, 8, 9, 11, 12, 14, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 75, 86, 94, 202, 205, 207, 210, 212, 215, 217, 229, 230, 232, 233, 237, 238], "hope": 3, "imit": 3, "other": [3, 6, 7, 23, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 83, 94, 117, 118, 139, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 202, 210, 212, 215, 219, 220, 227, 229, 230, 233, 235, 237, 238], "torch": [3, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 41, 42, 44, 45, 46, 47, 48, 51, 58, 59, 60, 64, 66, 67, 68, 75, 78, 81, 86, 88, 90, 93, 94, 100, 101, 102, 107, 109, 111, 112, 113, 115, 116, 117, 118, 121, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 153, 170, 171, 172, 189, 196, 202, 205, 207, 210, 212, 215, 217, 227, 229, 230, 232, 233, 235, 236, 237, 238], "nn": [3, 11, 12, 14, 23, 41, 44, 45, 46, 47, 48, 66, 78, 86, 90, 93, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 115, 118, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 151, 154, 155, 170, 171, 172, 212, 215, 217, 229, 230, 232, 233, 235, 238], "typic": [3, 7, 23, 41, 44, 46, 47, 48, 227], "organis": 3, "allow": [3, 11, 12, 14, 15, 23, 24, 41, 44, 46, 47, 48, 49, 100, 113, 166, 227, 229, 235, 236, 237], "gener": [3, 6, 7, 14, 26, 34, 42, 45, 75, 82, 83, 107, 121, 128, 136, 139, 142, 143, 162, 170, 173, 174, 177, 187, 197, 229, 230, 231, 232, 233, 235, 236, 237, 238], "arbitrari": [3, 24, 47, 48, 229, 230], "nest": [3, 19, 23, 41, 44, 46, 47, 48, 49, 170, 171, 172, 227, 230, 236, 238], "attribut": [3, 23, 41, 44, 46, 47, 48, 78, 85, 139, 230, 235], "batch_siz": [3, 7, 11, 12, 14, 19, 25, 26, 27, 28, 41, 43, 45, 51, 58, 59, 60, 61, 63, 86, 101, 115, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 189, 202, 205, 207, 210, 212, 215, 229, 230, 232, 233, 235, 236, 237, 238], "togeth": [3, 11, 12, 14, 15, 129, 130, 131, 143, 235], "expect": [3, 6, 19, 23, 29, 41, 44, 45, 46, 47, 48, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 91, 96, 135, 138, 141, 151, 152, 160, 161, 200, 224, 227, 229, 237], "live": [3, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 44, 45, 46, 47, 48], "doe": [3, 25, 27, 32, 38, 116, 140, 141, 152, 160, 161, 169, 197, 227, 229, 236, 237], "actual": [3, 6, 11, 12, 15, 41, 44, 46, 47, 48, 199, 229, 230], "respons": [3, 7, 197, 235, 237], "just": [3, 189, 227, 230, 235, 236, 237, 238], "retriev": [3, 25, 26, 27, 28, 41, 44, 46, 47, 48, 49, 64, 75, 100, 101, 115, 139, 152, 160, 161, 170, 171, 172, 202, 205, 207, 210, 212, 215, 221, 227, 236, 237], "care": [3, 7, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 229, 230], "map": [3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 41, 44, 46, 47, 48, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 79, 80, 81, 83, 85, 86, 87, 88, 89, 91, 94, 118, 129, 130, 131, 138, 139, 141, 143, 144, 223, 229, 230, 233, 235, 236], "desir": [3, 23, 41, 44, 46, 47, 48, 49, 66, 78, 86, 90, 93, 99, 102, 113, 138, 139, 229, 230, 236], "see": [3, 5, 6, 7, 8, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 95, 102, 111, 113, 116, 125, 126, 138, 139, 229, 230, 235, 236, 237], "below": [3, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 102, 111, 113, 125, 126, 138], "parametr": [3, 117, 139, 164, 229, 235], "hardwar": 3, "observation_spec": [3, 41, 45, 63, 64, 65, 66, 68, 69, 71, 73, 75, 78, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 101, 115, 200, 217, 229, 232, 237], "compositespec": [3, 41, 43, 45, 85, 86, 101, 115, 128, 132, 134, 136, 141, 223, 229, 237], "pair": [3, 23, 41, 44, 46, 47, 48, 49, 129, 139, 229, 230, 232, 236, 237], "input_spec": [3, 41, 45, 47, 48, 66, 68, 83, 89, 90, 91, 101, 115, 237], "action_spec": [3, 13, 41, 44, 45, 46, 47, 48, 51, 58, 90, 123, 128, 130, 133, 136, 137, 144, 145, 217, 229, 230, 232, 233, 237, 238], "reward_spec": [3, 41, 45, 62, 66, 68, 80, 81, 82, 89, 90, 91, 101, 115, 237], "reward": [3, 11, 12, 14, 23, 29, 41, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 62, 66, 68, 80, 81, 82, 83, 89, 90, 91, 92, 93, 94, 100, 101, 115, 143, 153, 154, 157, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 191, 192, 194, 195, 221, 227, 229, 230, 232, 233, 236, 237, 238], "importantli": [3, 139], "4": [3, 6, 11, 12, 14, 17, 20, 24, 45, 52, 53, 54, 57, 94, 101, 102, 103, 104, 109, 110, 112, 113, 115, 118, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 147, 180, 229, 230, 233, 236, 237, 238], "action_s": 3, "simpli": [3, 5, 69, 83, 229, 230, 237], "With": [3, 227, 236, 237], "necessarili": 3, "requir": [3, 6, 7, 14, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 113, 138, 140, 141, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 227, 229, 230, 235, 237], "stateless": [3, 47, 48, 89, 237], "set_se": [3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 48, 51, 58, 75, 90, 229, 237, 238], "integ": [3, 11, 12, 14, 15, 21, 22, 23, 24, 31, 38, 41, 44, 46, 47, 48, 72, 75, 85, 102, 113], "seed": [3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 48, 52, 59, 60, 90, 197, 229], "next": [3, 7, 11, 12, 14, 19, 23, 25, 26, 27, 41, 42, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 94, 100, 101, 115, 123, 143, 162, 169, 170, 171, 172, 229, 230, 232, 233, 237, 238], "determinist": [3, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 109, 119, 123, 128, 134, 138, 139, 229, 230, 237], "preced": [3, 112, 235], "without": [3, 6, 8, 23, 41, 44, 46, 47, 48, 130, 162, 169, 217, 224, 229, 230, 237], "risk": 3, "overlap": 3, "consecut": [3, 135, 230, 237], "still": [3, 8, 85, 132, 160, 229, 230, 232, 237], "reproduc": 3, "max_step": [3, 41, 44, 45, 46, 47, 48, 59, 60, 85, 100, 229, 230, 237, 238], "maximum": [3, 11, 12, 14, 15, 18, 23, 35, 36, 37, 41, 44, 46, 47, 48, 67, 80, 85, 87, 124, 125, 126, 136, 164, 229, 230, 237, 238], "safemodul": [3, 45, 61, 101, 114, 129, 130, 131, 132, 134, 135, 136, 139, 141, 143, 146, 147, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 194, 203, 204, 217, 223, 238], "ani": [3, 4, 7, 19, 23, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 78, 90, 94, 96, 102, 113, 117, 138, 139, 140, 141, 161, 184, 197, 224, 229, 230, 237, 238], "compat": [3, 6, 10, 23, 38, 41, 44, 46, 47, 48, 56, 63, 94, 146, 166, 230, 238], "better": [3, 7, 230], "intens": [3, 7], "gym3": 3, "envpool": [3, 46], "interfac": [3, 113, 116, 235], "simultan": [3, 47, 48], "often": [3, 7, 159, 197, 237], "competit": 3, "advantag": [3, 7, 110, 151, 152, 160, 161, 163, 170, 171, 172, 173, 174, 175, 177, 178, 227, 229, 230, 237], "scale": [3, 75, 81, 109, 111, 118, 122, 123, 125, 126, 129, 130, 131, 136, 139, 141, 195, 200, 202, 210, 212, 215, 221, 229, 230, 235, 238], "varieti": 3, "its": [3, 4, 6, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 45, 46, 47, 48, 63, 89, 90, 94, 102, 132, 133, 134, 139, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 197, 217, 227, 229, 230, 233, 235, 237], "own": [3, 11, 12, 15, 23, 41, 44, 46, 47, 48, 230, 235], "As": [3, 41, 44, 46, 47, 48, 139, 229, 230, 233, 237, 238], "inherit": [3, 114, 227, 235, 236], "enjoi": 3, "exact": 3, "Of": [3, 6, 224, 237], "cours": [3, 224, 237], "correspond": [3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 41, 44, 45, 46, 47, 48, 78, 86, 90, 93, 94, 135, 139, 230, 233], "count": [3, 42, 85, 135, 194, 199, 237], "def": [3, 10, 23, 41, 42, 44, 45, 46, 47, 48, 101, 115, 142, 144, 147, 227, 229, 230, 232, 235, 236, 237, 238], "make_env": [3, 60, 94, 100, 203, 204, 229, 230, 237], "gymenv": [3, 4, 11, 12, 14, 15, 42, 56, 66, 75, 86, 90, 94, 202, 205, 207, 210, 212, 215, 217, 223, 229, 230, 233, 237, 238], "pendulum": [3, 11, 12, 14, 15, 42, 46, 54, 55, 66, 75, 86, 90, 94, 217, 230, 237, 238], "v1": [3, 11, 12, 14, 42, 46, 75, 86, 166, 175, 176, 178, 179, 230, 237, 238], "from_pixel": [3, 52, 53, 202, 210, 212, 215, 229, 230, 233, 237, 238], "9": [3, 6, 23, 94, 229, 230, 233, 236], "81": [3, 233], "0": [3, 4, 5, 6, 7, 9, 10, 21, 22, 23, 24, 25, 27, 32, 41, 44, 45, 46, 47, 48, 51, 58, 62, 64, 66, 67, 74, 75, 78, 86, 88, 90, 93, 94, 100, 101, 102, 103, 104, 106, 109, 111, 113, 115, 116, 117, 118, 122, 123, 124, 125, 126, 132, 134, 135, 138, 141, 148, 151, 152, 156, 157, 158, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 189, 195, 197, 217, 221, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238], "must": [3, 6, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 72, 75, 86, 90, 102, 113, 138, 139, 144, 145, 173, 174, 175, 176, 177, 178, 179, 189, 194, 197, 198, 202, 205, 207, 210, 212, 215, 229, 230, 232, 235, 236, 238], "print": [3, 5, 6, 11, 12, 14, 17, 19, 20, 23, 24, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 67, 68, 75, 86, 88, 94, 100, 102, 113, 118, 128, 129, 130, 131, 133, 134, 135, 137, 138, 141, 142, 144, 145, 147, 202, 205, 207, 210, 212, 215, 217, 227, 229, 230, 232, 233, 235, 236, 237, 238], "b": [3, 6, 7, 16, 19, 116, 117, 170, 171, 172, 181, 233, 235, 236], "c": [3, 5, 6, 19, 75, 202, 205, 207, 210, 212, 215, 236], "d": [3, 25, 32, 139, 236, 238], "get": [3, 5, 6, 7, 38, 42, 47, 48, 64, 67, 68, 75, 88, 94, 128, 134, 139, 173, 174, 177, 188, 229, 230, 235, 237, 238], "forc": [3, 5, 6, 230], "variou": [3, 11, 12, 14, 15, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 219, 220, 229, 230, 237], "reset_work": 3, "fals": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 55, 58, 59, 60, 64, 66, 74, 75, 78, 81, 86, 88, 90, 93, 94, 96, 101, 102, 103, 113, 115, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 166, 170, 171, 172, 175, 176, 178, 179, 191, 192, 194, 195, 197, 202, 205, 207, 210, 212, 215, 221, 227, 229, 230, 232, 233, 235, 236, 237, 238], "field": [3, 11, 12, 14, 15, 19, 23, 41, 44, 45, 46, 47, 48, 51, 58, 59, 60, 86, 90, 101, 115, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 144, 145, 200, 202, 205, 207, 210, 212, 215, 224, 230, 232, 233, 235, 236, 237, 238], "bool": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 64, 74, 75, 78, 81, 86, 88, 90, 93, 94, 96, 100, 101, 102, 103, 104, 111, 113, 115, 116, 117, 125, 126, 132, 135, 138, 139, 140, 141, 146, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 170, 171, 172, 175, 176, 178, 179, 180, 181, 191, 192, 194, 195, 197, 202, 205, 207, 210, 212, 215, 221, 230, 232, 233, 237, 238], "500": [3, 197, 229, 230, 237, 238], "uint8": [3, 31, 88, 230, 233, 237, 238], "none": [3, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 73, 75, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 157, 158, 163, 164, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 193, 194, 197, 200, 202, 203, 204, 205, 207, 210, 212, 215, 217, 219, 220, 221, 227, 229, 230, 235, 236, 237, 238], "is_shar": [3, 11, 12, 14, 19, 45, 51, 58, 59, 60, 86, 94, 101, 115, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 144, 145, 202, 205, 207, 210, 212, 215, 230, 232, 233, 235, 236, 237, 238], "note": [3, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 94, 135, 139, 229, 230, 232, 235, 236, 237], "launch": 3, "quit": [3, 229, 230, 237], "mani": [3, 152, 160, 161, 162, 236, 237], "start": [3, 4, 11, 42, 100, 193, 229, 230, 237], "bottleneck": [3, 7], "why": [3, 229, 237], "so": [3, 5, 6, 9, 23, 41, 44, 46, 47, 48, 94, 140, 141, 229, 237], "onc": [3, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 90, 132, 134, 227, 229, 230, 237], "great": [3, 6, 7, 236, 238], "speedup": [3, 7, 237], "anoth": [3, 7, 41, 44, 46, 47, 48, 89, 113, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 229, 232, 236, 237], "thing": [3, 6, 7, 230, 237], "misspecifi": 3, "caus": [3, 6, 7], "breakag": 3, "prealloc": 3, "In": [3, 4, 6, 7, 9, 10, 11, 12, 15, 23, 41, 44, 46, 47, 48, 66, 78, 83, 86, 89, 90, 93, 111, 113, 123, 125, 126, 138, 141, 150, 198, 219, 220, 221, 229, 230, 232, 233, 236, 237], "obj": [3, 19, 138, 139, 140], "rais": [3, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 70, 90, 96, 147, 229, 230], "assert": [3, 5, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 94, 96, 100, 118, 170, 171, 172, 189, 196, 229, 230, 232, 235, 236, 237], "mismatch": [3, 236], "serialenv": [3, 223, 237], "mostli": [3, 15, 237], "purpos": [3, 6, 217, 233, 236, 237], "want": [3, 5, 6, 7, 75, 229, 233, 236, 237, 238], "assess": [3, 229], "subprocess": [3, 42], "addit": [3, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 132, 138, 150, 170, 230], "multithread": [3, 25, 26, 27, 46], "multithreadedenv": [3, 223], "underneath": 3, "higher": [3, 229, 230, 237], "restrict": [3, 230, 233, 237], "flexibl": [3, 8, 46, 227, 235, 237], "cover": [3, 224, 238], "popular": 3, "atari": [3, 63, 237], "classic": [3, 45, 235, 236], "benchmark_batched_env": 3, "compar": [3, 41, 194, 230, 237], "case": [3, 4, 6, 7, 10, 11, 12, 14, 15, 19, 25, 27, 32, 41, 44, 46, 47, 48, 90, 96, 113, 138, 139, 141, 150, 189, 198, 219, 220, 221, 227, 229, 235, 236, 237], "raw": [3, 111, 125, 126], "treat": 3, "To": [3, 5, 6, 7, 23, 25, 26, 27, 41, 44, 46, 47, 48, 94, 129, 130, 131, 135, 197, 229, 230, 233, 235, 237, 238], "logic": 3, "torchvis": [3, 78, 93, 237, 238], "transformedenv": [3, 42, 66, 74, 75, 86, 89, 94, 202, 205, 207, 210, 212, 215, 223, 229, 230, 232, 233, 237, 238], "primit": [3, 229, 230], "built": [3, 4, 6, 213, 217, 218, 221, 237], "base_env": [3, 86, 229, 230, 233, 237, 238], "totensorimag": [3, 207, 223, 230, 237, 238], "in_kei": [3, 11, 12, 14, 45, 62, 63, 64, 65, 68, 71, 73, 75, 76, 78, 79, 80, 81, 82, 87, 88, 89, 93, 94, 101, 115, 128, 129, 130, 131, 136, 138, 139, 141, 142, 146, 147, 153, 154, 170, 171, 172, 180, 181, 212, 215, 217, 229, 230, 232, 233, 235, 237, 238], "resiz": [3, 223, 230, 237], "64": [3, 103, 104, 110, 229, 230, 232, 233, 237, 238], "By": [3, 24, 44, 47, 48, 139, 194, 221, 233, 236, 237], "now": [3, 6, 229, 232, 233, 235, 236, 237], "appar": [3, 191], "bring": [3, 237], "signific": [3, 4, 7, 237], "kind": [3, 29, 100], "consult": 3, "achiev": [3, 23, 41, 44, 46, 47, 48, 227, 235, 236, 237], "interest": [3, 47, 48, 139, 237], "abov": [3, 6, 23, 41, 44, 46, 47, 48, 111, 125, 126, 150, 227, 229, 230, 237], "resize_par": 3, "sinc": [3, 4, 6, 23, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 229, 230, 233, 237, 238], "out_kei": [3, 11, 12, 14, 45, 47, 48, 62, 63, 64, 71, 76, 78, 79, 80, 82, 87, 88, 89, 93, 101, 115, 128, 129, 130, 131, 136, 138, 139, 141, 142, 144, 145, 146, 147, 170, 171, 172, 194, 217, 229, 232, 233, 235, 237, 238], "keyword": [3, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 139, 218, 229, 235, 237], "easi": [3, 4, 230, 233, 236, 237], "root": [3, 19, 111, 125, 126, 237], "graph": [3, 7, 167, 168], "inv": [3, 67], "appli": [3, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 67, 72, 87, 90, 125, 170, 193, 227, 229, 230, 235, 237, 238], "revers": 3, "order": [3, 14, 23, 24, 25, 26, 27, 28, 41, 44, 46, 47, 48, 90, 138, 140, 141, 235], "chain": [3, 25, 26, 27, 66, 102, 141, 237], "taken": [3, 41, 44, 46, 47, 48, 230], "includ": [3, 6, 8, 23, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 90, 94, 199, 227, 229, 230, 236, 237], "invers": [3, 149], "through": [3, 4, 7, 14, 47, 48, 113, 139, 140, 141, 148, 229, 230, 232, 233, 235, 237], "in_keys_inv": [3, 68, 89, 229, 232, 237], "append_transform": [3, 25, 26, 27, 28, 78, 86, 229, 237, 238], "doubletofloat": [3, 202, 205, 210, 212, 215, 223, 229, 232], "float32": [3, 11, 12, 14, 19, 25, 29, 32, 45, 51, 58, 59, 60, 68, 75, 86, 88, 101, 115, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 144, 145, 202, 205, 207, 210, 212, 215, 230, 232, 233, 235, 236, 237, 238], "float64": [3, 23, 41, 44, 46, 47, 48, 59, 60, 66, 78, 86, 90, 93, 138, 232, 237], "regist": [3, 23, 24, 41, 44, 46, 47, 48, 66, 84, 89, 90, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 227, 235], "log": [3, 7, 107, 121, 126, 139, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 191, 192, 194, 197, 217, 227, 230, 235, 238], "tool": [4, 237], "context": [4, 7, 23, 41, 42, 44, 46, 47, 48, 116, 167, 168, 170, 173, 174, 177, 194, 229, 230, 233, 235], "real": [4, 139], "world": [4, 45, 143, 157, 237], "system": 4, "robot": [4, 6, 78, 93], "game": 4, "adopt": [4, 229, 237], "interact": [4, 6, 7, 14, 139, 237], "histor": 4, "wa": [4, 6, 41, 44, 46, 47, 48, 90, 159, 165, 229, 230, 232, 238], "ceas": 4, "maintain": [4, 8], "fork": 4, "gymnasium": 4, "farama": 4, "foundat": 4, "document": [4, 6, 23, 41, 44, 46, 47, 48, 90, 238], "further": 4, "detail": [4, 5, 6, 23, 41, 44, 46, 47, 48, 90, 144, 151, 155, 161, 205, 224, 232, 236], "usag": [4, 6, 164], "known": [4, 6, 7, 229], "gone": 4, "bc": [4, 238], "break": [4, 11, 12, 14, 23, 41, 44, 46, 47, 48, 94, 229, 230, 235, 238], "chang": [4, 6, 23, 35, 36, 37, 38, 41, 44, 46, 47, 48, 90, 94, 229, 233, 236, 237], "face": [4, 7, 8, 230, 237], "modif": [4, 19, 23, 41, 44, 46, 47, 48, 229, 236], "practic": [4, 7, 111, 125, 126, 150, 224, 230, 233, 237], "torchrl": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 231, 232, 233, 234, 235, 236], "against": [4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 96, 138, 139], "13": [4, 9, 10, 235], "between": [4, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 67, 74, 80, 88, 90, 96, 102, 113, 139, 157, 158, 160, 166, 170, 194, 197, 229, 230, 235, 236, 237], "howev": [4, 6, 23, 41, 44, 46, 47, 48, 82, 85, 90, 229, 230, 236, 237], "around": [4, 6, 15, 27, 28, 45, 139, 170, 237], "construct": [4, 23, 41, 44, 46, 47, 48, 123, 139, 197, 202, 210, 235, 237], "automat": [4, 41, 44, 46, 47, 48, 75, 128, 136, 230, 238], "wrap": [4, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 96, 129, 130, 131, 143, 229, 230, 235, 237], "best": [4, 8, 230, 238], "gymwrapp": [4, 44, 223, 238], "If": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 49, 64, 65, 67, 69, 74, 78, 82, 83, 85, 89, 90, 93, 94, 102, 112, 113, 132, 134, 135, 138, 139, 140, 141, 147, 148, 150, 157, 164, 169, 170, 171, 172, 178, 179, 193, 197, 198, 200, 202, 210, 212, 215, 217, 221, 224, 229, 230, 232, 235, 236, 237, 238], "you": [4, 5, 6, 7, 9, 23, 41, 44, 46, 47, 48, 94, 224, 229, 230, 232, 233, 236, 237, 238], "feel": [4, 224, 238], "free": [4, 6, 151, 157, 161, 227, 238], "gladli": 4, "instruct": [5, 6, 9], "prepar": 5, "conda": [5, 6, 224], "assum": [5, 19, 24, 28, 44, 47, 48, 78, 82, 86, 93, 112, 164, 175, 176, 178, 179, 181, 229, 230, 232], "let": [5, 6, 23, 41, 44, 46, 47, 48, 194, 229, 230, 232, 233, 235, 236, 237, 238], "n": [5, 6, 17, 20, 23, 24, 41, 44, 46, 47, 48, 63, 67, 115, 139, 151, 169, 227, 229, 230, 236, 237], "7": [5, 9, 20, 24, 101, 102, 112, 113, 115, 229, 230, 233, 238], "cmake": 5, "14": [5, 10, 75], "activ": [5, 6, 8, 102, 109, 113, 161, 238], "sim": 5, "bullet": 5, "physic": [5, 6, 227, 229], "headless": [5, 6], "mode": [5, 14, 23, 41, 44, 46, 47, 48, 90, 94, 97, 99, 107, 111, 121, 124, 125, 126, 139, 194, 229, 230, 237, 238], "cluster": [5, 6, 7, 224], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 112, 147], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 20], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 23, 41, 44, 46, 47, 48, 84, 229, 237], "command": [5, 6, 9, 237], "more": [5, 7, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 95, 113, 116, 118, 132, 134, 138, 144, 151, 155, 161, 170, 173, 174, 177, 193, 205, 224, 227, 229, 230, 232, 233, 235, 236, 237], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 223], "_has_habitat": 5, "_env": [5, 237], "available_env": [5, 50, 51, 52, 53, 54, 55, 57, 58, 237], "startswith": 5, "oserror": 5, "could": [5, 230, 233, 236, 237], "load": [5, 11, 12, 14, 15, 25, 26, 27, 53, 221, 227, 230], "libllvmlit": 5, "solut": [5, 6, 7, 8, 224, 227, 238], "ionstal": 5, "miss": [5, 6, 10, 19, 23, 41, 44, 46, 47, 48, 90, 140, 141, 224], "add": [5, 23, 25, 26, 27, 28, 39, 40, 41, 44, 46, 47, 48, 116, 151, 193, 229, 230, 236, 238], "pointer": [5, 42, 236], "replac": [5, 6, 23, 67, 230], "path": [5, 6, 23, 35, 41, 44, 46, 47, 48, 78, 93, 115, 197, 227], "env_nam": [5, 46, 50, 52, 54, 56, 57, 229, 237], "llvmlite": 5, "config": [5, 6, 78, 93, 200, 202, 203, 204, 205, 207, 210, 212, 213, 215, 218], "var": [5, 6, 23, 41, 44, 46, 47, 48, 90], "ld_preload": [5, 6], "python3": [5, 6, 9, 230], "8": [5, 6, 51, 102, 103, 104, 110, 113, 129, 130, 131, 136, 138, 141, 233, 235, 238], "site": [5, 6, 230], "deactiv": [5, 6], "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 23, 41, 44, 46, 47, 48, 90], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "link": [5, 6], "right": [5, 6, 112, 229, 230, 237], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 23, 41, 44, 46, 47, 48, 52, 69, 82, 83, 90, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 182, 184, 185, 186, 188, 192, 193, 202, 205, 207, 210, 212, 215, 227, 229, 230, 235, 237], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 129, 130, 131, 232, 237], "joint": [6, 230], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 77, 78, 93, 129, 130, 131, 229], "develop": [6, 238], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 23], "area": 6, "demand": [6, 237], "fast": [6, 8, 51, 162, 229, 230], "accur": [6, 229], "articul": 6, "recent": [6, 230, 237], "acquir": [6, 229], "access": [6, 7, 23, 41, 44, 46, 47, 48, 49, 78, 221, 224, 236], "whomev": 6, "licenc": 6, "incorpor": [6, 229], "make": [6, 23, 38, 41, 44, 46, 47, 48, 55, 58, 75, 78, 96, 100, 116, 139, 161, 204, 221, 229, 230, 232, 233, 235, 236, 237, 238], "relianc": 6, "obsolet": 6, "seri": [6, 7, 24, 39, 40, 48, 74, 89, 181, 237], "keep": [6, 7, 12, 75, 78, 93, 94, 135, 191, 197, 230, 236, 237, 238], "legaci": 6, "capabl": [6, 227, 229, 232, 233, 237], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 229], "gpu": [6, 7, 23, 41, 44, 46, 47, 48, 237], "our": [6, 7, 229, 230, 232, 233, 235, 236, 238], "advic": [6, 237], "sudo": [6, 224], "enabl": [6, 7, 135, 194], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 7, 47, 78, 89, 93, 153, 227, 229, 237], "awar": [6, 35, 36, 37, 38], "fact": [6, 7, 230, 233, 237], "indent": 6, "workflow": [6, 129, 130, 131], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 23, 41, 42, 44, 46, 47, 48, 90, 102, 113, 129, 130, 131, 194, 229, 233, 235, 237], "tell": 6, "variabl": [6, 7, 20, 24, 115, 129, 130, 131, 162, 227, 235], "mujoco_gl": 6, "pyopengl_platform": 6, "pre": [6, 23, 36, 41, 44, 46, 47, 48, 78, 93, 237], "binari": [6, 17, 24, 62, 144, 145], "releas": [6, 9, 23, 41, 44, 46, 47, 48, 90, 238], "need": [6, 7, 9, 23, 38, 41, 44, 46, 47, 48, 66, 78, 84, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 116, 118, 119, 120, 122, 123, 132, 134, 135, 138, 148, 150, 162, 169, 181, 197, 221, 229, 235, 236, 237, 238], "These": [6, 78, 93, 237], "instead": [6, 7, 20, 23, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 221, 229, 230, 235, 237], "refer": [6, 7, 23, 41, 44, 46, 47, 48, 90, 94, 101, 109, 115, 119, 120, 122, 123, 144, 151, 155, 156, 157, 158, 161, 170, 173, 174, 177, 205, 230], "setup": 6, "mkdir": 6, "cd": 6, "here": [6, 7, 8, 9, 229, 230, 232, 233, 235, 236, 237, 238], "tag": [6, 181, 184, 221], "earlier": [6, 11, 12, 14, 15, 229], "roboti": 6, "u": [6, 9, 229, 233, 235, 237, 238], "download": [6, 9, 78, 93, 229, 230, 231, 232, 233, 235, 236, 237, 238], "html": [6, 46], "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 44, 78, 93, 101, 229, 230], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": [6, 230, 233], "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 236], "hard": [6, 159, 230, 237], "later": [6, 106, 139, 229, 230], "try": [6, 7, 147, 230, 236, 237, 238], "nativ": [6, 8, 41, 44, 46, 47, 48, 63, 235], "local": [6, 9, 14, 23, 41, 44, 46, 47, 48, 90, 184], "modifi": [6, 7, 23, 41, 44, 46, 47, 48, 66, 78, 86, 89, 90, 93, 135, 138, 199, 202, 210, 212, 215, 229, 235], "nvidia": 6, "driver": 6, "older": 6, "hack": 6, "line": [6, 23, 41, 44, 46, 47, 48, 230], "adatp": 6, "script": [6, 202, 205, 207, 210, 212, 215, 217, 221, 227, 229, 230, 232, 233, 235, 236, 237, 238], "go": [6, 233, 235, 237], "unnot": 6, "until": 6, "complet": [6, 8, 44, 224, 230, 232], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "troubleshoot": 6, "gl": 6, "h": [6, 65, 79, 88, 115, 181], "eglshim": 6, "10": [6, 19, 42, 45, 59, 60, 88, 101, 112, 115, 134, 135, 162, 163, 164, 170, 171, 172, 189, 227, 229, 230, 235, 236, 237, 238], "fatal": 6, "No": 6, "directori": [6, 35, 184, 227], "sure": [6, 38, 100, 221, 229, 235, 236, 237, 238], "glu": 6, "38": 6, "disappear": [6, 232], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "__init__": [6, 45, 101, 115, 142, 144, 147, 227, 235, 237], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 7, 23, 41, 44, 46, 47, 48, 90, 229, 236, 237], "job": [6, 236], "schedul": [6, 194], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": [6, 96], "opengl": 6, "global": [6, 139, 227, 229, 235], "cuda_visible_devic": 6, "id": [6, 16, 135, 162, 187, 212], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 52, 65, 78, 88, 93, 113, 230, 233, 236, 237], "black": 6, "read": [6, 11, 12, 14, 15, 35, 36, 37, 38, 44, 47, 48, 49, 89, 121, 129, 130, 131, 138, 139, 141, 143, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 181, 197, 202, 210, 212, 215, 229, 230, 232, 233, 235, 237], "onscreen": 6, "101": [6, 234, 235], "displai": [6, 197, 227, 230], "correctli": [6, 23, 41, 44, 46, 47, 48], "cannot": [6, 19, 236], "scratch": [7, 229, 230], "loop": [7, 11, 12, 14, 15, 44, 100, 197, 227, 229, 232, 236], "sketch": [7, 227], "ob": [7, 19, 68, 75, 88, 142, 170, 171, 172, 229, 232, 237, 238], "_": [7, 42, 64, 67, 68, 75, 88, 94, 138, 150, 170, 171, 172, 229, 230, 235, 238], "rang": [7, 10, 20, 42, 94, 100, 160, 227, 229, 230, 235, 236, 238], "n_training_step": 7, "datapoint": 7, "onlin": [7, 11, 15, 151, 161, 189, 221], "n_data_per_train": 7, "no_grad": [7, 23, 41, 44, 46, 47, 48, 229, 230], "append": [7, 25, 26, 27, 28, 42, 100, 229, 230, 233, 236, 238], "replay_buff": [7, 32, 33, 34, 35, 36, 37, 38, 39, 40, 217, 229, 230], "extend": [7, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 227, 229, 230, 233, 238], "loss": [7, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 193, 197, 201, 206, 208, 209, 211, 212, 214, 217, 227, 229, 230, 236, 238], "offlin": [7, 11, 12, 14, 15, 227, 233, 238], "loss_fn": [7, 238], "backward": [7, 23, 41, 44, 46, 47, 48, 94, 229, 230, 236], "zero_grad": [7, 23, 41, 44, 46, 47, 48, 227, 229, 230, 236], "backpropag": [7, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164], "decor": [7, 10], "differenti": [7, 170, 171, 172, 229], "pai": [7, 230], "attent": [7, 230, 235], "understand": [7, 229, 230], "denomin": 7, "probabl": [7, 107, 121, 126, 139, 230, 235, 238], "artifact": 7, "numer": [7, 94, 111, 125, 126, 138, 139, 236, 237], "misconcept": 7, "directli": [7, 45, 221, 230], "save": [7, 23, 41, 44, 46, 47, 48, 180, 197, 227, 230], "alreadi": [7, 23, 41, 44, 46, 47, 48, 139, 229, 230], "freed": 7, "appear": [7, 24], "compuat": 7, "twice": [7, 164], "fix": [7, 86, 164, 237], "retain_graph": 7, "lead": [7, 9, 10, 19, 111, 125, 126, 238], "discuss": [7, 8], "inplac": [7, 23, 41, 44, 46, 47, 48, 229], "flag": [7, 25, 26, 27, 28, 173, 174, 175, 176, 177, 178, 179, 233], "reason": [7, 23, 41, 44, 46, 47, 48, 78, 229, 230], "updat": [7, 11, 12, 14, 15, 23, 32, 41, 44, 45, 46, 47, 48, 90, 92, 94, 101, 115, 135, 138, 139, 151, 159, 161, 165, 170, 171, 172, 194, 197, 198, 203, 204, 216, 217, 227, 229, 230, 235, 237, 238], "critic": [7, 129, 151, 152, 160, 161, 163, 164, 235], "accumul": 7, "onto": [7, 24, 132, 134, 138, 139], "separ": [7, 11, 12, 15, 16, 78, 93, 153, 162, 164, 229, 237], "exclud": [7, 47, 48, 69, 229], "forward": [7, 23, 41, 44, 46, 47, 48, 66, 78, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 122, 123, 132, 134, 135, 138, 139, 142, 144, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 229, 230, 235, 238], "submodul": [7, 23, 41, 44, 46, 47, 48], "param": [7, 23, 41, 44, 45, 46, 47, 48, 107, 124, 136, 137, 138, 141, 142, 144, 145, 165, 168, 170, 171, 172, 205, 229, 230, 233, 235, 238], "grad": [7, 23, 41, 44, 46, 47, 48, 230], "whose": [7, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 118, 138, 229], "norm": [7, 197, 230], "strictli": [7, 23, 41, 44, 46, 47, 48, 90], "neg": [7, 11, 12, 14, 15, 25, 27, 32, 63, 156, 229], "ask": [7, 233, 237], "core": [7, 202, 205, 207, 210, 212, 215, 227, 238], "much": [7, 25, 27, 32, 160, 161, 236, 237], "upon": 7, "factor": [7, 23, 111, 117, 125, 126, 135, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 229, 230, 237], "fit": [7, 10, 75, 227], "everi": [7, 11, 12, 15, 19, 23, 24, 38, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 197, 227, 229, 230, 236], "bottlneck": 7, "affect": [7, 23, 41, 44, 46, 47, 48, 89, 90], "brax": [7, 50, 51, 237], "jax": 7, "improperli": 7, "item": [7, 11, 70, 153, 154, 189, 227, 229, 230, 236], "underli": 7, "manipul": [7, 78, 237], "tedeiou": 7, "priorit": [7, 25, 27, 32, 153, 154, 162, 164, 229, 230], "amount": [7, 47, 48, 135], "isn": [7, 138], "contigu": [7, 236, 237, 238], "costli": 7, "concaten": [7, 21, 22, 63, 64, 75, 89, 113, 141, 229, 230, 236, 237], "constitut": 7, "plain": 7, "profil": 7, "indic": [7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 44, 46, 47, 48, 64, 85, 86, 102, 113, 135, 148, 200, 221, 224, 227, 229, 235, 236, 237], "fulli": [7, 23, 41, 44, 46, 47, 48, 230], "frequent": 7, "techniqu": [7, 230], "target": [7, 23, 41, 42, 44, 46, 47, 48, 89, 138, 139, 153, 154, 155, 158, 159, 160, 162, 164, 165, 169, 170, 171, 172, 199, 216, 217, 227, 229, 230], "program": [7, 237], "incl": 7, "suit": [7, 53, 237], "mujoco_instal": 7, "valueerror": 7, "bad": 7, "fds_to_keep": 7, "One": [7, 121, 132, 134, 138, 166, 188, 229, 235, 236, 237], "view": [7, 20, 23, 24, 41, 44, 46, 47, 48, 113, 144, 229, 236, 237, 238], "expand": [7, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 138, 141, 235, 238], "new_shap": 7, "origin": [7, 11, 12, 14, 15, 78, 90, 93, 138, 139, 159, 161, 212, 215, 232, 236, 237], "content": [7, 14, 46, 102, 113, 230, 236, 238], "lost": 7, "permut": [7, 236, 237, 238], "clone": [7, 129, 130, 131, 138, 202, 210, 212, 215, 229, 230, 235, 236, 238], "spin": [8, 237], "hug": 8, "syllabu": 8, "lectur": 8, "awesom": [8, 236], "curat": 8, "succinct": 8, "summari": [8, 75, 94], "reddit": 8, "reagent": 8, "product": [8, 219, 220], "orient": [8, 237], "stabl": [8, 9, 229], "baselines3": 8, "tf": 8, "agent": [8, 117], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 45, 237, 238], "dopamin": 8, "prototyp": 8, "salina": 8, "simpl": [8, 23, 24, 41, 44, 46, 47, 48, 103, 139, 163, 170, 229, 230, 236, 237], "sequenti": [8, 23, 41, 44, 46, 47, 48, 140, 141, 233, 235, 236, 237], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 238], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 24, 29, 67, 120, 132, 134, 135, 138, 139, 141, 144, 145, 229, 237, 238], "mbrl": [8, 45], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 230], "689": 9, "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 229, 230, 231, 232, 233, 235, 236, 237, 238], "24": 9, "11": [9, 20, 24, 42, 88, 101, 115, 230, 234], "2022": [9, 238], "12": [9, 233, 236], "pip": [9, 237, 238], "solv": [9, 224, 229, 230], "pip3": 9, "extra": [9, 23, 41, 44, 46, 47, 48, 94], "url": 9, "org": [9, 25, 32, 63, 78, 103, 104, 105, 106, 109, 110, 115, 117, 119, 120, 122, 123, 135, 144, 151, 155, 156, 157, 158, 159, 161, 163, 164, 165, 170, 173, 174, 177, 202, 205, 210, 215, 233], "whl": 9, "latest": [9, 46, 238], "There": [9, 227, 230, 237], "upgrad": 9, "previou": [9, 23, 123, 229, 235, 237], "relas": 9, "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 35, 41, 43, 44, 46, 47, 48, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 93, 94, 97, 99, 101, 102, 103, 104, 105, 106, 110, 112, 113, 114, 115, 116, 117, 118, 128, 132, 133, 134, 135, 136, 138, 139, 142, 144, 145, 146, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 196, 200, 202, 205, 210, 212, 213, 215, 221, 229], "from_vers": 10, "to_vers": 10, "explicit": [10, 112, 229, 230], "intersect": 10, "longer": [10, 230], "fun": [10, 235, 236], "self": [10, 23, 41, 44, 45, 46, 47, 48, 66, 78, 86, 90, 93, 101, 115, 132, 134, 138, 142, 144, 147, 227, 230, 235, 236, 238], "x": [10, 16, 19, 23, 88, 102, 108, 110, 112, 113, 115, 144, 147, 148, 150, 173, 174, 175, 176, 177, 178, 179, 181, 197, 230, 235, 238], "doesn": [10, 46], "create_env_fn": [11, 12, 14, 15, 42, 47, 48, 229, 238], "sequenc": [11, 12, 14, 15, 19, 21, 22, 25, 26, 39, 40, 62, 63, 64, 65, 68, 71, 73, 75, 76, 79, 80, 81, 82, 87, 88, 89, 94, 102, 107, 113, 121, 128, 136, 139, 140, 141, 142, 180, 181, 193, 196, 197, 202, 210, 212, 215, 230, 232, 235, 237], "callabl": [11, 12, 14, 15, 23, 25, 26, 27, 41, 42, 44, 45, 46, 47, 48, 150, 203, 204, 219, 220, 221], "union": [11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 41, 44, 46, 47, 48, 61, 66, 75, 78, 81, 90, 93, 94, 102, 103, 104, 105, 106, 107, 110, 112, 113, 116, 117, 121, 124, 125, 126, 135, 136, 138, 139, 140, 146, 147, 149, 154, 155, 159, 162, 164, 165, 170, 171, 172, 202, 203, 204, 205, 210, 212, 213, 215, 217, 218, 219, 220, 221], "tensordictbas": [11, 12, 14, 15, 16, 19, 23, 27, 28, 41, 43, 44, 46, 47, 48, 49, 63, 66, 69, 74, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 100, 101, 114, 115, 132, 134, 135, 138, 139, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 169, 170, 171, 172, 197], "total_fram": [11, 12, 14, 15, 197, 199, 217, 227, 229, 230, 238], "int": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 52, 59, 61, 63, 64, 65, 66, 67, 71, 72, 74, 75, 78, 79, 84, 85, 87, 90, 91, 93, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 132, 134, 135, 137, 138, 139, 144, 145, 151, 152, 153, 156, 157, 158, 160, 161, 162, 164, 180, 181, 189, 190, 191, 194, 197, 198, 202, 205, 210, 212, 213, 215, 219, 220, 221], "create_env_kwarg": [11, 12, 14, 15, 42, 46, 47, 48, 229], "dict": [11, 12, 14, 15, 19, 20, 21, 23, 41, 42, 44, 46, 47, 48, 90, 94, 102, 103, 104, 105, 106, 110, 112, 113, 139, 184, 188, 194, 203, 204, 205, 212, 215, 219, 220, 221, 237], "200": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 59, 60, 103, 104, 109, 122, 123, 229], "postproc": [11, 12, 14, 15, 229, 230], "pin_memori": [11, 14, 15, 25, 26, 27, 47, 48, 77, 229, 238], "init_with_lag": [11, 12, 14, 15], "given": [11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 45, 46, 47, 48, 66, 67, 75, 78, 86, 90, 93, 100, 101, 109, 115, 135, 138, 139, 140, 141, 144, 145, 150, 153, 154, 169, 170, 171, 172, 190, 194, 217, 227, 229, 230, 235, 237], "datacollector": [11, 12, 14, 15, 139], "synchron": [11, 46, 219, 220], "recept": 11, "safe": [11, 12, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 132, 135, 138, 139, 146, 229, 238], "env_mak": [11, 12, 14, 217, 237], "linear": [11, 12, 14, 23, 41, 44, 45, 46, 47, 48, 66, 78, 86, 90, 93, 101, 102, 113, 115, 116, 117, 118, 122, 123, 128, 129, 130, 131, 134, 135, 136, 137, 138, 141, 142, 144, 145, 147, 170, 171, 172, 217, 232, 233, 235, 238], "2000": [11, 12, 14, 229], "50": [11, 12, 14, 233], "enumer": [11, 12, 14, 23, 41, 44, 46, 47, 48, 229, 230, 238], "step_count": [11, 12, 14, 85, 229, 230, 238], "int64": [11, 12, 14, 17, 20, 21, 22, 24, 133, 135, 137, 144, 145, 207, 230, 237, 238], "traj_id": [11, 12, 14, 16, 229, 238], "shutdown": [11, 12, 14, 15, 229, 238], "del": [11, 12, 14, 229, 238], "bound": [11, 12, 14, 15, 18, 19, 23, 41, 44, 46, 47, 48, 94, 122, 123, 135, 138, 139, 237], "total": [11, 12, 14, 15, 17, 21, 22, 24, 44, 152, 160, 161, 189, 191, 194, 197, 199, 200, 229, 230, 232, 233, 234, 235, 236, 237, 238], "greater": [11, 12, 15, 229, 230, 238], "close": [11, 12, 14, 15, 44, 46, 152, 160, 161, 229, 238], "signal": [11, 12, 15, 229], "sent": [11, 12, 15, 35, 36, 47, 48, 94, 230, 236], "server": [11, 12, 15], "per": [11, 12, 14, 15, 47, 109, 197, 219, 220, 229, 230, 238], "span": [11, 12, 14, 15], "unless": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 235], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 14, 15, 23, 229], "track": [11, 12, 14, 15, 82, 94, 135, 184, 191, 229, 230, 236], "independ": [11, 12, 14, 15, 89, 164, 227, 229, 238], "ignor": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 69, 83, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 235, 236, 237], "length": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 47, 48, 101, 102, 103, 105, 108, 113, 115, 138, 189, 229, 230, 236, 237], "mainli": [11, 12, 14, 15], "postprocessor": [11, 12, 15], "format": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 237], "accord": [11, 12, 14, 15, 49, 75, 81, 111, 116, 122, 125, 126, 235, 236], "split_trajectori": [11, 12, 14, 15, 223], "inform": [11, 12, 14, 15, 23, 41, 42, 44, 46, 47, 48, 102, 113, 227, 230], "place": [11, 12, 14, 15, 19, 23, 41, 42, 44, 46, 47, 48, 49, 66, 78, 86, 90, 93, 94, 138, 198, 199, 230, 235], "accommod": [11, 12, 14, 15], "kept": [11, 12, 14, 15, 47, 48, 67, 89, 100, 111, 125, 126], "long": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 230, 236], "truncat": [11, 12, 14, 15, 126, 237], "help": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 224, 229], "desynchron": [11, 12, 14, 15], "load_state_dict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 90, 94, 227], "state_dict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 90, 94, 221, 227, 237], "ordereddict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 90, 94], "form": [11, 12, 15, 23, 25, 26, 27, 41, 44, 46, 47, 48, 94, 150, 152, 160, 161, 197], "worker0": [11, 12, 15], "state_dict0": [11, 12, 15], "worker1": [11, 12, 15], "state_dict1": [11, 12, 15], "reset_idx": [11, 12, 15], "static_se": [11, 12, 14, 15, 41, 44, 46, 47, 48, 90], "increment": [11, 12, 14, 15, 41, 44, 46, 47, 48, 85, 160], "last": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 71, 75, 87, 102, 112, 113, 119, 132, 134, 230, 233, 237, 238], "env_fn": [11, 12, 14, 15, 42, 219, 220], "v0": [11, 12, 15, 44, 54, 55, 57, 58, 66, 90, 94, 217], "env_fn_parallel": [11, 12, 14, 15], "6": [11, 12, 14, 15, 58, 75, 102, 107, 112, 113, 124, 142, 202, 205, 207, 210, 212, 215, 229, 230, 233, 235, 236, 237, 238], "out_se": [11, 12, 14, 15, 237], "shut": [11, 12, 14, 15], "down": [11, 12, 14, 15], "irrevers": [11, 12, 15], "arg": [12, 19, 23, 35, 36, 41, 42, 44, 45, 46, 47, 48, 78, 84, 90, 91, 92, 93, 102, 113, 128, 129, 133, 137, 186, 191, 197, 221], "kwarg": [12, 14, 15, 19, 23, 35, 36, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 84, 86, 90, 91, 92, 93, 102, 103, 104, 105, 106, 110, 111, 113, 114, 121, 124, 126, 128, 129, 133, 136, 137, 139, 152, 160, 169, 181, 184, 186, 188, 191, 197, 202, 203, 204, 205, 210, 212, 215, 218, 219, 220], "envcreat": [14, 217, 218, 221, 223, 229, 230, 237, 238], "return_same_td": 14, "stop": [14, 41, 44, 46, 47, 48, 237, 238], "equat": [14, 135, 150, 152, 165], "exce": 14, "batcher": 14, "cautious": [14, 161], "ad": [14, 23, 25, 26, 27, 28, 32, 41, 44, 46, 47, 48, 49, 82, 90, 116, 117, 135, 152, 160, 161, 229, 237], "whole": [14, 19, 23, 41, 44, 46, 47, 48, 90, 189, 230], "ident": [14, 47, 48, 219, 220, 229, 235, 236], "yield": [14, 23, 41, 44, 46, 47, 48], "chunk": 14, "policy_state_dict": 14, "env_state_dict": 14, "singl": [15, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 49, 63, 64, 78, 88, 93, 102, 112, 113, 141, 155, 162, 175, 176, 178, 179, 212, 221, 229, 230, 232, 233, 235], "paradigm": 15, "prefer": [15, 83], "mere": 15, "rollout_tensordict": 16, "zero": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 64, 67, 75, 101, 112, 134, 135, 148, 170, 171, 172, 235, 236, 238], "max": [16, 24, 67, 87, 124, 125, 126, 152, 162, 164, 229], "durat": [16, 230], "discret": [17, 20, 21, 22, 24, 31, 67, 121, 144, 145, 155], "dimens": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 63, 64, 71, 75, 84, 88, 91, 102, 113, 116, 117, 124, 125, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 170, 171, 172, 221, 229, 236], "5": [17, 42, 46, 58, 59, 60, 101, 102, 109, 111, 112, 113, 115, 125, 126, 133, 137, 144, 145, 160, 229, 230, 233, 236, 237, 238], "assert_is_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "belong": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "otherwis": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 67, 75, 86, 90, 94, 111, 125, 126, 157, 164, 194, 227, 229, 237], "encod": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 120, 121, 122, 133, 137, 144, 145, 150, 235], "val": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 238], "ndarrai": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 135], "np": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 229], "tupl": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 46, 47, 48, 61, 75, 103, 112, 113, 118, 153, 156, 170, 171, 172, 206, 208, 211, 214, 236], "compli": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 229, 236], "current": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 49, 56, 90, 97, 109, 112, 123, 135, 144, 145, 187, 202, 210, 227, 229, 237, 238], "least": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "complient": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "singleton": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 102, 113], "slice": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 236], "tensor_to_index": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "is_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 237], "project": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 67, 132, 134, 135, 138, 139, 230, 237, 238], "back": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 138, 139, 229], "rand": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 45, 51, 58, 101, 115, 237, 238], "uniform": [17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32], "unbound": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 236], "to_numpi": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "transformed_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 89, 90, 118, 124, 221], "type_check": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "fill": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 86, 233, 236], "minimum": [18, 80, 109, 118, 124, 125, 126, 136, 148, 150, 164, 189, 229, 237, 238], "float": [18, 20, 23, 24, 25, 27, 30, 32, 41, 44, 46, 47, 48, 66, 68, 75, 78, 80, 81, 86, 88, 90, 93, 94, 107, 109, 111, 115, 116, 117, 122, 123, 124, 126, 132, 134, 135, 138, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 195, 229, 230, 237], "upper": 18, "composit": 19, "unnam": 19, "effect": [19, 23, 41, 44, 46, 47, 48, 82, 90, 197, 230, 237], "pixels_spec": 19, "boundedtensorspec": [19, 129, 130, 131, 134, 135, 136, 223, 237, 238], "32": [19, 59, 60, 102, 103, 104, 110, 113, 119, 120, 229, 230, 233, 237, 238], "observation_vector_spec": 19, "33": [19, 23, 41, 44, 46, 47, 48, 102, 113], "composite_spec": 19, "observation_vector": [19, 64, 202, 205, 210, 212, 215, 229], "within": [19, 23, 28, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 94, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 238], "randn": [19, 75, 112, 118, 128, 129, 130, 131, 133, 136, 137, 138, 141, 142, 144, 145, 170, 171, 172, 196, 235, 236, 237, 238], "td_project": 19, "yield_nesting_kei": 19, "nested_kei": 19, "keysview": 19, "immedi": [19, 23, 41, 44, 46, 47, 48, 169], "children": [19, 23, 41, 44, 46, 47, 48], "selected_kei": [19, 47, 48, 83, 229], "altern": [20, 46, 150, 230, 236], "onehottensorspec": 20, "categor": [20, 24, 121, 144, 145], "larg": 20, "action_valu": [20, 24, 133, 137, 144, 145, 207, 230], "arang": [20, 24, 133, 144, 189], "argmax": [20, 133, 137, 144, 145], "dim": [20, 63, 64, 112, 221, 229, 230, 235, 236], "chosen_action_valu": [20, 24, 137, 207, 230], "outcom": [20, 24, 107, 124], "nvec": [21, 22], "cardin": [21, 22, 144, 145], "element": [21, 22, 24, 25, 26, 27, 28, 32, 35, 36, 37, 102, 132, 138, 139, 189, 229, 237], "ax": [21, 116, 117], "use_regist": [22, 24], "hot": [22, 24, 67, 121, 133, 137, 144, 145], "sum": [22, 24, 44, 157, 169, 229, 230, 237], "gamma": [23, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 217, 229, 230, 238], "present": [23, 25, 32, 41, 44, 46, 47, 48, 49, 69, 82, 83, 103, 104, 105, 106, 110, 117, 135, 138, 139, 140, 141, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 221, 227, 229, 232, 238], "sutton": 23, "r": [23, 75, 139, 150, 169, 237], "1988": 23, "predict": [23, 109, 114, 115, 143, 155, 157, 158, 164, 169], "tempor": [23, 115, 171], "44": [23, 233], "discount": [23, 42, 151, 152, 153, 154, 155, 156, 158, 160, 161, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 229, 230], "ahead": [23, 237], "add_modul": [23, 41, 44, 46, 47, 48], "child": [23, 41, 44, 46, 47, 48, 236], "fn": [23, 41, 44, 46, 47, 48, 118, 219, 220], "recurs": [23, 41, 44, 46, 47, 48], "init": [23, 41, 44, 46, 47, 48, 229, 230], "init_weight": [23, 41, 44, 46, 47, 48], "m": [23, 41, 44, 46, 47, 48, 67, 139, 229, 230], "fill_": [23, 41, 44, 46, 47, 48, 230, 236, 237], "net": [23, 41, 44, 46, 47, 48, 112, 162, 212, 217, 230, 233, 235, 238], "in_featur": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 102, 103, 104, 105, 106, 112, 113, 116, 117, 129, 138, 235, 238], "out_featur": [23, 41, 44, 45, 46, 47, 48, 66, 78, 86, 90, 93, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 115, 116, 117, 129, 133, 138, 229, 230, 235, 238], "bia": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 102, 109, 113, 116, 117, 118, 134, 135, 138, 148, 149, 150, 230, 238], "requires_grad": [23, 41, 44, 46, 47, 48, 229], "bfloat16": [23, 41, 44, 46, 47, 48], "cast": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 94, 138, 202, 205, 207, 210, 212, 215, 236, 237], "datatyp": [23, 41, 44, 46, 47, 48], "direct": [23, 41, 44, 46, 47, 48, 230], "member": [23, 41, 44, 46, 47, 48], "xdoctest": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "skip": [23, 41, 44, 46, 47, 48, 72, 90, 96, 139, 180, 181, 191, 194, 235], "buf": [23, 41, 44, 46, 47, 48], "20l": [23, 41, 44, 46, 47, 48], "1l": [23, 41, 44, 46, 47, 48], "5l": [23, 41, 44, 46, 47, 48], "associ": [23, 41, 44, 46, 47, 48, 122, 221, 235], "copi": [23, 41, 44, 46, 47, 48, 90, 229, 230, 236], "doubl": [23, 25, 27, 30, 41, 44, 46, 47, 48, 66, 68, 78, 86, 88, 90, 93, 138, 154, 155, 159, 162, 165, 229, 237], "eval": [23, 41, 44, 46, 47, 48, 90, 94, 229, 230], "certain": [23, 41, 44, 46, 47, 48, 72, 85, 90, 160, 229, 230, 236, 237], "particular": [23, 41, 44, 46, 47, 48, 90, 227, 230, 232], "behavior": [23, 41, 44, 46, 47, 48, 90], "dropout": [23, 41, 44, 46, 47, 48, 90, 235], "batchnorm": [23, 41, 44, 46, 47, 48, 90], "disabl": [23, 41, 44, 46, 47, 48, 90, 111, 125, 126, 229], "comparison": [23, 41, 44, 46, 47, 48, 90], "similar": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 92, 93, 94, 100, 138, 139, 229, 235, 237], "mechan": [23, 41, 44, 46, 47, 48, 90], "confus": [23, 41, 44, 46, 47, 48, 90], "extra_repr": [23, 41, 44, 46, 47, 48], "represent": [23, 41, 44, 46, 47, 48, 78, 93, 229, 230, 233, 237], "string": [23, 41, 44, 46, 47, 48, 78, 93, 139, 150, 180, 196, 202, 210, 212, 215], "tennsordict": 23, "shift": [23, 148], "nontermin": [23, 229], "termin": [23, 140, 229, 230, 235, 238], "original_reward": [23, 229], "newli": 23, "get_buff": [23, 41, 44, 46, 47, 48], "throw": [23, 41, 44, 46, 47, 48, 237], "docstr": [23, 41, 44, 46, 47, 48], "get_submodul": [23, 41, 44, 46, 47, 48], "explan": [23, 41, 44, 46, 47, 48], "how": [23, 25, 27, 32, 41, 44, 46, 47, 48, 152, 159, 160, 161, 197, 224, 229, 230, 232, 233, 237, 238], "qualifi": [23, 41, 44, 46, 47, 48], "referenc": [23, 41, 44, 46, 47, 48], "attributeerror": [23, 41, 44, 46, 47, 48], "invalid": [23, 41, 44, 46, 47, 48], "resolv": [23, 41, 44, 46, 47, 48], "someth": [23, 41, 44, 46, 47, 48, 224, 237], "get_extra_st": [23, 41, 44, 46, 47, 48, 94], "set_extra_st": [23, 41, 44, 46, 47, 48, 94], "pickleabl": [23, 41, 44, 46, 47, 48, 94], "ensur": [23, 25, 27, 32, 41, 44, 46, 47, 48, 63, 78, 94, 146, 229], "guarante": [23, 35, 36, 37, 38, 41, 44, 46, 47, 48, 94, 238], "pickl": [23, 41, 44, 46, 47, 48, 94], "get_paramet": [23, 41, 44, 46, 47, 48], "sai": [23, 41, 44, 46, 47, 48, 233, 237], "net_b": [23, 41, 44, 46, 47, 48], "net_c": [23, 41, 44, 46, 47, 48], "conv": [23, 41, 44, 46, 47, 48, 102], "conv2d": [23, 41, 44, 46, 47, 48, 102, 238], "16": [23, 41, 44, 46, 47, 48, 233], "kernel_s": [23, 41, 44, 46, 47, 48, 102, 103, 104, 230, 238], "stride": [23, 41, 44, 46, 47, 48, 102, 103, 104, 110, 230, 238], "100": [23, 41, 44, 46, 47, 48, 75, 190, 197, 217, 229, 230, 232, 233, 237, 238], "diagram": [23, 41, 44, 46, 47, 48], "show": [23, 41, 44, 46, 47, 48, 230, 235, 238], "itself": [23, 41, 44, 46, 47, 48, 85], "would": [23, 41, 44, 46, 47, 48, 113, 227, 230, 235, 236, 237], "degre": [23, 41, 44, 46, 47, 48], "named_modul": [23, 41, 44, 46, 47, 48], "o": [23, 41, 44, 46, 47, 48], "transit": [23, 41, 44, 46, 47, 48, 143, 229, 230], "alwai": [23, 41, 44, 46, 47, 48, 74, 230], "half": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 229], "ipu": [23, 41, 44, 46, 47, 48], "strict": [23, 41, 44, 46, 47, 48, 90], "descend": [23, 41, 44, 46, 47, 48, 90], "exactli": [23, 41, 44, 46, 47, 48, 56, 90], "persist": [23, 41, 44, 46, 47, 48, 90], "enforc": [23, 41, 44, 46, 47, 48, 90, 140], "missing_kei": [23, 41, 44, 46, 47, 48, 90], "unexpected_kei": [23, 41, 44, 46, 47, 48, 90], "unexpect": [23, 41, 44, 46, 47, 48, 90, 237], "namedtupl": [23, 41, 44, 46, 47, 48, 90], "duplic": [23, 41, 44, 46, 47, 48, 154, 155, 236], "l": [23, 41, 44, 46, 47, 48, 169], "idx": [23, 41, 44, 46, 47, 48, 230, 236], "named_buff": [23, 41, 44, 46, 47, 48, 230], "prefix": [23, 41, 44, 46, 47, 48, 90, 180, 237], "prepend": [23, 41, 44, 46, 47, 48], "running_var": [23, 41, 44, 46, 47, 48], "named_children": [23, 41, 44, 46, 47, 48], "conv4": [23, 41, 44, 46, 47, 48], "conv5": [23, 41, 44, 46, 47, 48], "memo": [23, 41, 44, 46, 47, 48], "remove_dupl": [23, 41, 44, 46, 47, 48], "named_paramet": [23, 41, 44, 46, 47, 48, 230], "register_backward_hook": [23, 41, 44, 46, 47, 48], "removablehandl": [23, 41, 44, 46, 47, 48], "deprec": [23, 41, 44, 46, 47, 48, 90, 237], "favor": [23, 41, 44, 46, 47, 48], "register_full_backward_hook": [23, 41, 44, 46, 47, 48], "futur": [23, 41, 44, 46, 47, 48, 78, 90, 93, 113, 224, 238], "register_buff": [23, 41, 44, 46, 47, 48], "running_mean": [23, 41, 44, 46, 47, 48], "alongsid": [23, 41, 44, 46, 47, 48], "latter": [23, 41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 219, 220], "num_featur": [23, 41, 44, 46, 47, 48], "register_forward_hook": [23, 41, 44, 46, 47, 48, 144, 145], "signatur": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 147], "posit": [23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 72, 84, 85, 87, 90, 91, 118, 235], "won": [23, 41, 42, 44, 46, 47, 48, 78, 93, 197, 221, 229], "register_forward_pre_hook": [23, 41, 44, 46, 47, 48], "invok": [23, 41, 44, 46, 47, 48], "respect": [23, 41, 44, 46, 47, 48, 62, 66, 78, 86, 90, 93, 123, 138, 142, 193], "grad_input": [23, 41, 44, 46, 47, 48], "grad_output": [23, 41, 44, 46, 47, 48], "subsequ": [23, 41, 44, 46, 47, 48], "entri": [23, 41, 44, 46, 47, 48, 78, 93, 170, 171, 172, 233, 235], "technic": [23, 41, 44, 46, 47, 48], "similarli": [23, 41, 44, 46, 47, 48, 140, 141, 229, 235, 237], "caller": [23, 41, 44, 46, 47, 48], "register_load_state_dict_post_hook": [23, 41, 44, 46, 47, 48], "post": [23, 41, 44, 46, 47, 48, 230], "incompatible_kei": [23, 41, 44, 46, 47, 48], "consist": [23, 41, 44, 46, 47, 48, 102, 113, 229, 230, 233, 237], "thrown": [23, 41, 44, 46, 47, 48], "clearn": [23, 41, 44, 46, 47, 48], "register_modul": [23, 41, 44, 46, 47, 48, 227], "alia": [23, 41, 44, 46, 47, 48], "register_paramet": [23, 41, 44, 46, 47, 48], "requires_grad_": [23, 41, 44, 46, 47, 48, 229], "autograd": [23, 41, 44, 46, 47, 48, 90], "freez": [23, 41, 44, 46, 47, 48], "finetun": [23, 41, 44, 46, 47, 48], "individu": [23, 41, 44, 46, 47, 48], "gan": [23, 41, 44, 46, 47, 48], "share_memori": [23, 41, 42, 44, 46, 47, 48, 229], "share_memory_": [23, 41, 44, 46, 47, 48, 236, 238], "destin": [23, 41, 44, 46, 47, 48, 90, 100], "keep_var": [23, 41, 44, 46, 47, 48, 90], "averag": [23, 41, 44, 46, 47, 48, 90, 94, 135, 156, 157, 195, 229, 235], "shallow": [23, 41, 44, 46, 47, 48, 90], "pleas": [23, 41, 44, 46, 47, 48, 90, 224], "design": [23, 24, 41, 44, 46, 47, 48, 90, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 229, 230, 232, 236, 237], "detach": [23, 41, 44, 46, 47, 48, 90, 229, 230], "non_block": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 230], "memory_format": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "channels_last": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "Its": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "complex": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 235], "integr": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 106, 115, 138, 233], "unchang": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "tri": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "convert": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 94, 138, 150, 236], "host": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "pin": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "4d": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "ignore_w": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "1913": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "3420": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "5113": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "2325": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "torch_doctest_cuda1": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "gpu1": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "1914": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "5112": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "2324": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "float16": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "cdoubl": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "3741": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "j": [23, 25, 32, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138, 227, 230], "2382": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "5593": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "4443": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "complex128": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "6122": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "1150": [23, 41, 44, 46, 47, 48, 66, 78, 86, 90, 93, 138], "to_empti": [23, 41, 44, 46, 47, 48], "dst_type": [23, 41, 44, 46, 47, 48], "xpu": [23, 41, 44, 46, 47, 48], "set_to_non": [23, 41, 44, 46, 47, 48], "unidimension": [24, 236], "keepdim": 24, "user_regist": 24, "experiment": [24, 139], "priori": 24, "definit": [24, 38], "uniqu": 24, "discretebox": 24, "alpha": [25, 27, 32, 102, 162, 164, 229, 230, 238], "beta": [25, 27, 32, 160, 229, 230, 238], "ep": [25, 27, 32, 94, 135, 152, 165, 195], "1e": [25, 27, 32, 94, 107, 109, 118, 124], "08": [25, 27, 32, 229], "collate_fn": [25, 26, 27, 236, 238], "prefetch": [25, 26, 27, 229, 230], "schaul": [25, 32], "quan": [25, 32], "antonogl": [25, 32], "silver": [25, 32], "2015": [25, 32], "arxiv": [25, 32, 63, 78, 103, 104, 105, 106, 109, 110, 115, 117, 119, 120, 122, 123, 135, 144, 151, 155, 156, 157, 158, 159, 161, 164, 165, 170, 173, 174, 177, 202, 205, 210, 215, 233], "ab": [25, 32, 78, 94, 109, 110, 115, 117, 119, 120, 122, 123, 151, 156, 157, 158, 159, 161, 164, 202, 210, 233], "1511": [25, 32, 110], "05952": [25, 32], "expon": [25, 27, 32], "\u03b1": [25, 27, 32], "determin": [25, 27, 32, 78, 93, 135, 230], "delta": [25, 27, 32, 124, 139, 223], "prioriti": [25, 27, 28, 32, 35, 36, 37, 38, 153, 154, 162, 164, 227, 229, 230], "null": [25, 27, 32, 62, 229], "max_siz": [25, 26, 27, 35, 37, 38, 230], "1_000": [25, 26, 27], "merg": [25, 26, 27], "mini": [25, 26, 27], "style": [25, 26, 27], "rb": [25, 26, 27, 230, 233, 238], "insert_transform": [25, 26, 27, 28], "insert": [25, 26, 27, 28, 39, 40, 91, 230], "return_info": [25, 26, 27, 28], "sampler": [25, 26, 27, 28, 32, 33, 35, 36, 37, 38, 223, 229], "info": [25, 26, 27, 28, 41, 44, 46, 47, 48, 59, 60, 95, 235], "select": [25, 26, 27, 28, 47, 48, 74, 83, 101, 196, 229, 230], "writer": [26, 39, 223], "randomsampl": [26, 223, 229], "roundrobinwrit": [26, 223], "priority_kei": [27, 28, 154, 155, 164, 238], "td_error": [27, 28, 153, 154, 155, 162, 164, 229, 238], "prioritizedreplaybuff": [27, 223, 238], "update_tensordict_prior": [27, 229, 238], "include_info": [27, 28], "kw": [28, 39], "replaybuff": [28, 40, 213, 217, 223, 233, 238], "meta": [29, 43, 227], "describ": [29, 64, 89, 124, 125, 187, 202, 210, 237], "max_capac": [32, 229], "update_prior": [32, 227, 229, 238], "uniformli": [33, 237], "scratch_dir": [35, 229], "memmap": [35, 47, 48, 94, 229], "attach": [35, 36, 37, 38, 230], "entiti": [35, 36, 37, 38], "made": [35, 36, 37, 38, 135, 229, 233], "eg": [35, 36, 37, 38], "alloc": 36, "__len__": 38, "roundrobin": 39, "piec": [39, 40], "_inplace_upd": [41, 46, 47, 48, 90], "_batch_lock": [41, 46, 47, 48, 90], "run_type_check": [41, 45], "batch_lock": [41, 43, 44, 46, 47, 48, 90], "environn": [41, 44, 45, 46, 47, 48, 90], "immut": [41, 44, 46, 47, 48, 90, 202, 210], "fake_tensordict": [41, 44, 46, 47, 48], "fake": [41, 44, 46, 47, 48], "overridden": [41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148], "recip": [41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148], "afterward": [41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148, 237], "former": [41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148], "silent": [41, 44, 46, 47, 48, 66, 84, 89, 91, 92, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 118, 119, 120, 122, 123, 132, 134, 135, 148], "_step": [41, 44, 46, 47, 48], "privat": [41, 44, 46, 47, 48, 237], "_reset": [41, 44, 45, 46, 47, 48, 101, 115, 230], "overwritten": [41, 44, 46, 47, 48, 100, 229], "callback": [41, 44, 46, 47, 48], "auto_reset": [41, 44, 46, 47, 48, 230], "auto_cast_to_devic": [41, 44, 46, 47, 48], "break_when_any_don": [41, 44, 46, 47, 48], "return_contigu": [41, 44, 46, 47, 48, 96, 232], "soon": [41, 44, 46, 47, 48], "smaller": [41, 44, 46, 47, 48], "lazystackedtensordict": [41, 44, 45, 46, 47, 48, 101, 115, 232, 236, 237, 238], "concomitt": [41, 44, 46, 47, 48], "eras": [41, 44, 46, 47, 48, 49], "workspac": [41, 44, 46, 47, 48, 49], "carri": [41, 44, 46, 47, 48], "creator": [42, 203, 204, 219, 220, 221], "substitut": [42, 94], "multiprocess": [42, 43, 94, 237], "mp": [42, 94], "env_creat": [42, 229], "test_env1": 42, "_td": 42, "observation_count": [42, 237], "test_env2": 42, "sleep": [42, 237], "__name__": [42, 230], "__main__": 42, "p": [42, 230, 235], "p1": [42, 230], "p2": [42, 230], "join": [42, 202, 210], "9934": 42, "env_str": 43, "discard": [44, 100, 180, 237], "info_dict_read": 44, "set_info_dict_read": 44, "put": [44, 94, 221, 236], "f": [44, 150, 170, 171, 172, 229, 230, 235, 236, 237], "read_act": 44, "read_don": 44, "reader": [44, 229, 230], "frame_skip": [44, 52, 53, 54, 57, 72, 191, 194, 199, 227, 229, 238], "broken": [44, 96], "read_ob": 44, "dictat": [44, 139], "inner": [44, 227, 229, 237], "read_reward": 44, "total_reward": 44, "step_reward": 44, "far": [44, 111, 125, 126, 237], "baseinfodictread": 44, "info_dict": 44, "hoc": 44, "manner": [44, 78, 229, 232], "dict_read": 44, "default_info_dict_read": 44, "my_info_kei": 44, "some_env": 44, "meant": 45, "limit": [45, 47, 48, 236], "safeti": 45, "constraint": 45, "behav": [45, 56, 121, 233], "unboundedcontinuoustensorspec": [45, 86, 101, 128, 129, 130, 131, 138, 141, 142, 223, 237], "mymbenv": [45, 101, 115], "world_model": [45, 61, 101, 115, 157], "super": [45, 101, 115, 142, 144, 147, 235, 238], "hidden_observ": [45, 101, 115], "mlp": [45, 101, 102, 103, 104, 105, 106, 112, 115, 129, 133, 202, 210, 212, 215, 223, 229, 230, 232, 233, 235, 238], "worldmodelwrapp": [45, 101, 115, 223], "activation_class": [45, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 229, 230, 238], "relu": [45, 101, 115, 118, 150, 235], "activate_last_lay": [45, 101, 106, 113, 115], "depth": [45, 101, 102, 103, 104, 105, 106, 109, 110, 113, 115, 119, 120, 133, 230, 232], "faster": 46, "less": [46, 219, 220, 229, 230, 238], "equal": [46, 47, 48, 74, 75, 102, 108, 113, 166, 189, 219, 220, 233, 236], "readthedoc": 46, "io": [46, 47, 48], "en": 46, "python_interfac": 46, "num_work": [46, 47, 48, 229, 230], "thread": 46, "task_id": 46, "my_env_fun": [47, 48], "custom_attribute_list": [47, 48], "custom_attribut": [47, 48], "custom_method_list": [47, 48], "custom_method": [47, 48], "deploi": [47, 48], "creation": [47, 48, 229, 237], "slight": [47, 48, 230], "overhead": [47, 48, 235], "env_input_kei": [47, 48], "permit": [47, 48], "drastic": [47, 48], "decreas": [47, 48], "burden": [47, 48], "_batchedenv": [47, 48], "might": [47, 48, 188, 224, 229, 237], "next_pixel": [47, 48], "next_vector": [47, 48], "occupi": [47, 48], "excluded_kei": [47, 48, 69], "share_individual_td": [47, 48], "lazi": [47, 48, 78, 116, 140, 141, 229, 232, 236, 237], "shared_memori": [47, 48], "policy_proof": [47, 48], "ll": [47, 48, 229, 230, 237], "hidden": [47, 48, 109, 112, 119, 120, 122, 123, 129, 130, 131, 138, 141, 202, 210, 232, 235, 238], "instanti": [47, 48, 89, 229, 230, 236, 237], "allow_step_when_don": [47, 48], "encount": [47, 48, 224], "update_kwarg": [47, 48], "build_tensordict": 49, "next_observ": [49, 100, 112, 232], "log_prob": [49, 107, 121, 126], "empti": [49, 78, 87, 90, 93, 229], "popul": [49, 86], "googl": [50, 51], "ant": [50, 51, 233], "categorical_action_encod": [51, 55], "get_environ": 51, "87": [51, 233], "acrobot": [51, 237], "fetch": [51, 233, 237], "dm_control": [52, 53, 229, 232, 237], "task_nam": 52, "cheetah": [52, 53, 229, 237], "disable_env_check": [54, 56], "serv": [56, 237], "placehold": [56, 90], "secur": 56, "jumanji": [57, 58], "snake": [57, 58], "6x6": [57, 58], "td1": 58, "int32": [58, 236, 238], "12x12": 58, "tsp50": 58, "tsp100": 58, "vma": [59, 60], "scenario_nam": [59, 60], "num_env": [59, 60], "continuous_act": [59, 60], "flock": [59, 60], "scenario": [59, 60], "n_agent": [59, 60], "cohesion_rew": [59, 60], "collision_rew": [59, 60], "separation_rew": [59, 60], "velocity_rew": [59, 60], "18": [59, 60, 229, 233, 237], "model_bas": [61, 101, 115], "prior_shap": 61, "belief_shap": 61, "obs_decod": 61, "transform_reward_spec": [62, 66, 68, 80, 81, 89, 91], "success": [63, 89, 238], "account": 63, "movement": 63, "veloc": [63, 237], "propos": [63, 114, 159, 165, 212, 215], "plai": [63, 237], "pdf": [63, 103, 104, 105, 106, 135, 144, 155, 162, 165, 170, 173, 174, 177, 205, 212, 215], "1312": 63, "5602": 63, "_buffer": [63, 87], "transform_observation_spec": [63, 64, 65, 66, 68, 69, 71, 73, 75, 79, 82, 83, 85, 86, 87, 88, 89, 91], "del_kei": [64, 230, 232], "unsqueeze_if_oor": 64, "observation_posit": 64, "observation_veloc": 64, "delet": [64, 236], "unsqueez": [64, 88, 91, 112, 236], "key1": [64, 189, 196], "key2": [64, 189, 196], "w": [65, 79, 88, 135, 181], "crop": [65, 181], "center": [65, 181], "width": [65, 79, 230], "height": [65, 79, 230], "squar": [65, 111, 125, 126, 181], "rewardsc": [66, 90, 223, 229], "rewardclip": [66, 223], "transformed_env": [66, 89, 90], "tranform": [66, 69, 83, 85, 86, 89, 92, 95], "dest": [66, 78, 93, 138], "transform_input_spec": [66, 68, 89, 91], "max_n": 67, "action_kei": [67, 101, 114, 115, 132, 134], "dimension": [67, 170, 173, 174, 177], "action_out": 67, "manual_se": [67, 75, 134, 135, 229, 237, 238], "finit": [70, 229], "first_dim": 71, "last_dim": 71, "flatten": [71, 229, 230], "adjac": 71, "repeatedli": 72, "stabil": 72, "turn": [73, 194, 230, 233], "noop": [74, 238], "30": [74, 122, 123, 230], "op": [74, 132, 134, 198], "randomli": [74, 75, 86, 139], "noop_max": 74, "loc": [75, 81, 111, 118, 125, 126, 129, 130, 131, 136, 139, 141, 200, 202, 210, 212, 215, 221, 229, 230, 235, 238], "standard_norm": [75, 81, 229, 230], "affin": [75, 81], "layer": [75, 94, 102, 103, 104, 109, 113, 116, 117, 119, 120, 127, 229, 230, 233, 235], "set_default_tensor_typ": 75, "doubletensor": 75, "std": [75, 94, 118, 132, 229, 230, 237], "isclos": 75, "next_ob": [75, 170, 171, 172, 229, 238], "normalis": 75, "stat": [75, 200, 221, 229], "rubric": [75, 141], "init_stat": 75, "3752e": 75, "01": [75, 135, 148, 151, 152, 160, 161, 229, 233, 234], "5087e": 75, "03": [75, 229, 233, 234], "9294e": 75, "9636": 75, "5608": 75, "6408": 75, "num_it": 75, "reduce_dim": 75, "cat_dim": 75, "keep_dim": 75, "constant": [75, 227, 229, 230, 237], "ideal": [75, 229], "statist": [75, 94, 163, 221, 229, 237], "approach": [75, 237], "gaussian": [75, 101, 115, 116, 117, 132], "empir": [75, 101, 115, 139], "deviat": [75, 94, 101, 109, 115, 116, 117, 132, 161, 229, 230], "3d": 75, "third": 75, "r3m": [78, 233], "resnet": [78, 93], "visual": [78, 93], "embed": [78, 92, 93, 129, 130, 131, 138, 233, 235], "ego4d": [78, 93], "paper": [78, 93, 159, 212, 215, 229], "univers": [78, 93], "suraj": 78, "nair": 78, "aravind": 78, "rajeswaran": 78, "vikash": [78, 93], "kumar": [78, 93], "chelsea": 78, "finn": 78, "abhinav": 78, "gupta": 78, "2203": [78, 115, 233], "12601": [78, 233], "_init": 78, "snippet": [78, 229], "resnet50": [78, 93, 233], "model_nam": [78, 93, 187], "resnet34": 78, "resnet18": 78, "left": [78, 87, 93, 230], "r3m_vec": [78, 233], "feed": [78, 93], "244": [78, 93], "stack_imag": [78, 93], "tread": [78, 93], "separet": [78, 93], "hub": [78, 93, 233], "cach": [78, 90, 93, 190, 233], "public": [78, 93], "resnet50_weight": [78, 93], "imagenet1k_v1": [78, 93], "download_path": [78, 93], "tensor_pixels_kei": [78, 93], "interpol": [79, 230], "bilinear": 79, "clamp_min": [80, 135], "clamp_max": 80, "clip": [80, 152, 197], "clip_min": 80, "scalar": [80, 104, 106, 116, 117, 132, 134, 135, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "clip_max": 80, "episod": [82, 101, 173, 174, 175, 176, 177, 178, 179, 230], "cumul": [82, 101], "episode_": 82, "reward1": 82, "reward2": 82, "ho": 82, "excludetransform": [83, 223], "squeeze_dim": 84, "squeez": [84, 102, 230, 236], "manual": 85, "default_valu": 86, "primer": 86, "drawn": [86, 139], "rel": [86, 107, 124], "chosen": [86, 202, 210, 212, 215], "mykei": 86, "dtype_or_devic": 86, "pool": 87, "255": 88, "precis": [88, 229], "ri": 88, "randint": [88, 229], "out_keys_inv": 89, "principl": 89, "combin": [89, 236], "cattransform": 89, "notabl": 89, "cache_spec": 90, "anymor": [90, 138, 229], "unsqueeze_dim": 91, "vip": [92, 93, 233], "toward": 93, "implicit": 93, "jason": 93, "ma": 93, "shagun": 93, "sodhani": 93, "dinesh": 93, "jayaraman": 93, "osbert": 93, "bastani": 93, "ami": 93, "zhang": 93, "vip_vec": 93, "shared_td": 94, "lock": 94, "decai": [94, 132, 134, 162, 195, 229, 230, 237], "9999": 94, "0001": [94, 109, 118, 195], "fly": [94, 160, 237], "to_observation_norm": 94, "rate": [94, 169, 229, 230], "99": [94, 115, 151, 152, 156, 158, 160, 161, 162, 163, 164, 169, 217, 229, 230, 233, 238], "underflow": 94, "1000": [94, 132, 134, 135, 139, 159, 229, 230, 233], "build_td_for_shared_vecnorm": 94, "memmori": 94, "memmap_": [94, 236], "queue": 94, "td_share": 94, "v": [94, 112, 164, 230, 235, 238], "observationnorm": [94, 221, 223, 229, 230, 238], "state_dim": [95, 122, 123], "action_dim": [95, 103, 105, 232], "gsde": [95, 162, 221], "nois": [95, 117, 127, 135, 162, 194, 221, 229], "func": [95, 235], "gsdemodul": 95, "check_dtyp": 96, "short": 96, "discrep": [96, 151, 152, 153, 154, 160, 161], "imposs": 96, "heterogen": 96, "probabilistictdmodul": [99, 113, 139, 164, 169, 194], "next_tensordict": [100, 229], "keep_oth": 100, "exclude_reward": 100, "exclude_don": 100, "exclude_act": 100, "_run_check": 100, "reflect": [100, 199], "renam": [100, 229], "next_": 100, "funtion": 100, "td_out": [100, 189, 196], "make_polici": 100, "next_td": 100, "planning_horizon": [101, 115], "optim_step": [101, 115, 236], "num_candid": [101, 115], "top_k": [101, 115], "reward_kei": [101, 115], "cross": 101, "entropi": [101, 151, 152, 160, 161, 162, 164], "botev": 101, "et": [101, 235], "al": [101, 207, 235, 237], "2013": 101, "cem": 101, "plan": [101, 114, 115], "unit": [101, 109, 119, 120, 122, 123], "varianc": [101, 111, 118, 125, 126], "rank": 101, "top": [101, 115], "k": [101, 230, 235, 236], "repeat": 101, "maximis": [101, 103, 105, 115, 229], "horizon": [101, 115], "modelbasedenv": [101, 115], "mpc": [101, 114, 115], "candid": [101, 115], "modelbasedenvbas": [101, 114, 115, 223], "next_hidden_observ": 101, "actor": [101, 103, 105, 109, 115, 129, 130, 131, 133, 134, 135, 136, 137, 144, 145, 151, 152, 153, 156, 160, 161, 162, 164, 202, 205, 207, 210, 212, 215, 223, 229, 230, 233, 238], "num_cel": [102, 103, 104, 105, 106, 109, 110, 113, 129, 229, 230, 235, 238], "elu": [102, 103, 104, 105, 106, 109, 110, 230, 238], "activation_kwarg": [102, 113], "norm_class": [102, 103, 104, 113], "norm_kwarg": [102, 113], "bias_last_lay": [102, 103, 104, 105, 106, 110, 113], "aggregator_class": [102, 103, 104, 230, 238], "squashdim": [102, 103, 238], "aggregator_kwarg": [102, 103, 104, 230], "squeeze_output": [102, 103, 104, 230], "convolut": [102, 103, 104], "neural": [102, 138, 230, 235, 237], "produc": [102, 113, 121, 129, 131, 181, 237], "len": [102, 113, 229, 230, 233, 235, 236, 238], "cell": [102, 113, 229], "kernel": [102, 110, 112], "tanh": [102, 111, 113, 124, 125, 126, 229, 233, 238], "device_typ": [102, 103, 104, 105, 106, 110, 113, 116, 117], "cnet": 102, "34": [102, 113], "35": [102, 113, 233], "possibli": [102, 138, 197, 229, 237], "rectangular": 102, "conv_net_kwarg": [103, 104], "mlp_net_kwarg": [103, 104, 105], "use_avg_pool": [103, 104], "WITH": [103, 104, 105, 106, 135, 165, 205], "1509": [103, 104, 105, 106, 115, 135, 159, 165, 205], "02971": [103, 104, 105, 106, 135, 165, 205], "convnet": [103, 223, 238], "ndims_in": 103, "avgpool": [103, 104], "128": [104, 229, 233], "adaptiveavgpool2d": [104, 230], "400": [105, 106, 230], "300": [105, 106, 202, 210, 229], "mlp_net_kwargs_net1": 106, "mlp_net_kwargs_net2": 106, "atol": [107, 124], "06": [107, 124, 229], "rtol": [107, 124], "batch_shap": [107, 124], "event_shap": [107, 124], "absolut": [107, 124], "toler": [107, 124], "densiti": [107, 121, 126], "mass": [107, 121, 126], "rsampl": [107, 121, 139], "sample_shap": [107, 121], "reparameter": [107, 121], "dqnet": 108, "atom": 108, "std_bia": 109, "std_min_val": 109, "stochast": [109, 117, 119, 123, 162, 164], "belief": [109, 119, 122, 123], "1912": [109, 156, 157, 158], "01603": [109, 156, 157, 158], "softplu": [109, 118, 148, 149, 150], "out_features_valu": 110, "cnn_kwarg": [110, 230], "mlp_kwarg": [110, 112, 230], "duel": [110, 230], "cnn": [110, 230, 238], "06581": 110, "512": 110, "upscal": [111, 125, 126], "tanh_loc": [111, 125, 126], "event_dim": [111, 124, 125], "prevent": [111, 125, 126, 160, 161, 229], "ultim": [111, 125, 126], "unstabl": [111, 125, 126], "poor": [111, 125, 126], "explos": [111, 125, 126], "switch": [111, 125, 126], "sigma": [111, 125, 126, 132, 135], "formula": [111, 125, 126, 152, 160, 161], "lstm_kwarg": 112, "embedd": 112, "lstm": [112, 118], "time_step": 112, "2d": 112, "hidden_s": 112, "input_s": 112, "hidden0_in": 112, "hidden1_in": 112, "hidden0_out": 112, "hidden1_out": 112, "single_bias_last_lay": 113, "layer_class": 113, "layer_kwarg": 113, "perceptron": 113, "seamless": 113, "though": 113, "reshap": [113, 235, 236], "lazylinear": [113, 233, 238], "42": [113, 197], "noisylinear": [113, 116, 223, 230], "noisylazylinear": [113, 223], "At": [114, 232, 233], "mpcplanner": 114, "tensordict_out": [114, 235, 237], "advantage_modul": [115, 151], "temperatur": 115, "mppi": 115, "covari": 115, "william": [115, 163], "aldrich": 115, "theodor": 115, "01149": 115, "hansen": 115, "wang": 115, "su": 115, "04955": 115, "ndunboundedcontinuoustensorspec": [115, 141], "valueoper": [115, 129, 130, 131, 151, 152, 160, 161, 217, 223, 229, 235], "tdlambdaestim": [115, 223], "value_net": [115, 170, 171, 172], "adv": 115, "95": [115, 156, 229, 230, 233], "std_init": [116, 117], "noisi": [116, 117, 127], "term": [116, 117, 150, 151, 198, 230], "matrix": [116, 117], "initialize_paramet": 116, "isol": 116, "1706": 117, "10295v3": 117, "induc": 117, "aid": 117, "descent": 117, "remain": 117, "emploi": 117, "scale_map": 118, "biased_softplus_1": 118, "scale_lb": [118, 122, 123], "exp": [118, 150], "module_norm": 118, "decod": [119, 235], "1803": [119, 120], "10122": [119, 120], "rnn_hidden": 119, "latent": 120, "logit": 121, "prob": 121, "excacli": 121, "hidden_dim": [122, 123, 235], "posterior": [122, 157], "rssm": [122, 123, 157], "1811": [122, 123], "04551": [122, 123], "obs_embed": 122, "rnn_hidden_dim": 123, "prior": [123, 157], "dream": 123, "recurr": 123, "min": [124, 125, 126, 152, 162, 164, 229, 230], "tanhtransform": 125, "tensordict_modul": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 234, 235], "translat": [128, 136], "td_modul": [128, 129, 130, 131, 136, 138, 139, 141, 142, 235, 238], "get_policy_oper": [129, 130, 131, 202, 210, 235], "alon": [129, 130, 131], "tdmodul": [129, 130, 131, 217], "get_critic_oper": [129, 235], "common_oper": [129, 131], "policy_oper": [129, 130, 131], "value_oper": [129, 130, 131], "probabilisticactor": [129, 130, 131, 164, 223, 229], "tanhnorm": [129, 130, 131, 136, 141, 223, 235, 238], "normalparamwrapp": [129, 130, 131, 136, 141, 223, 235, 238], "spec_hidden": [129, 131], "module_hidden": [129, 131, 235], "td_module_hidden": [129, 131, 235], "spec_act": [129, 131], "module_act": [129, 131, 235], "td_module_act": [129, 130, 131, 235], "dist_in_kei": [129, 130, 131, 136, 141], "sample_out_kei": [129, 131, 141], "distribution_class": [129, 130, 131, 136, 139, 141, 229, 235, 238], "return_log_prob": [129, 130, 131, 139, 141, 235, 238], "module_valu": [129, 130, 131, 235], "td_module_valu": [129, 130, 131, 235], "state_action_valu": [129, 142, 169, 205, 212, 215, 217, 229, 235, 238], "td_clone": [129, 130, 131, 235], "sample_log_prob": [129, 130, 131, 139, 141, 202, 210, 212, 235, 238], "tensordictmodulewrapp": [129, 203, 204, 217], "estim": [129, 130, 131, 151, 152, 160, 161, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 229, 230], "get_value_oper": [129, 130, 131, 202, 210], "action_modul": 130, "state_valu": [130, 131, 142, 170, 171, 172, 173, 174, 175, 177, 178, 202, 210, 215, 229], "safesequenti": [130, 131, 143, 223], "sigma_init": 132, "sigma_end": 132, "annealing_num_step": [132, 134, 135, 229, 230], "po": [132, 134], "epsilon": [132, 134, 135, 165, 230], "know": [132, 134, 162, 194, 229, 230], "recov": [132, 134, 140, 232], "happen": [132, 233, 237], "action_spac": [133, 137, 144, 145], "one_hot": [133, 137, 144, 145], "onehotdiscretetensorspec": [133, 137, 144, 145, 223], "nbin": [133, 144], "qvalue_actor": [133, 137, 144, 145], "eps_init": [134, 135, 230], "eps_end": [134, 135, 230], "greedi": [134, 145, 230], "explorative_polici": [134, 135], "0000": [134, 238], "6986": 134, "9366": 134, "5837": 134, "8596": 134, "grad_fn": [134, 238], "addbackward0": [134, 238], "theta": 135, "15": [135, 156, 230, 233], "mu": 135, "dt": 135, "x0": 135, "sigma_min": 135, "n_steps_ann": 135, "ornstein": [135, 229], "uhlenbeck": [135, 229], "ou": [135, 229], "introduc": [135, 235, 236], "auto": [135, 162, 164], "correl": 135, "sort": 135, "prev_nois": 135, "current_sigma": 135, "sqrt": [135, 230], "n_step": 135, "ou_prev_nois": 135, "ou_step": 135, "increas": 135, "anneal": 135, "_ou_prev_nois": 135, "_ou_step": 135, "probabilist": [136, 235, 238], "functional_modul": [136, 137, 138, 141, 142, 144, 145], "make_funct": [136, 137, 138, 141, 142, 144, 145, 146, 230, 235, 238], "functionalmodul": [138, 146], "functionalmodulewithbuff": [138, 146], "character": 138, "overflow": [138, 139], "grucel": [138, 235], "td_fmodul": 138, "td_function": 138, "td_state": 138, "vmap": [138, 141, 230, 235, 238], "ensembl": [138, 162], "params_repeat": 138, "td_vmap": [138, 141], "irrespect": [138, 139], "random_sampl": [138, 139], "tensor_spec": 139, "default_interaction_mod": [139, 235], "distribution_kwarg": [139, 229], "cache_dist": 139, "n_empirical_estim": 139, "probabilistictensordictmodul": [139, 140, 238], "rule": [139, 235], "interaction_mod": 139, "get_dist": [139, 140, 235], "__call__": [139, 227, 235], "median": 139, "suppli": 139, "fist": 139, "set_interaction_mod": 139, "diverg": [139, 157, 160], "partial_toler": [140, 141, 232], "probabilistictensordictsequenti": [140, 235, 238], "tensordictsequenti": [140, 232, 233, 238], "expos": [140, 235], "who": [140, 141], "AND": [140, 141], "scan": [140, 141], "sub": [140, 141, 189, 197, 232, 237, 238], "tensordictsequenci": 141, "tensordictsequ": 141, "safeprobabilisticmodul": [141, 223], "spec1": 141, "net1": 141, "module1": 141, "td_module1": 141, "spec2": 141, "module2": 141, "td_module2": 141, "custommodul": [142, 147], "cat": [142, 229, 236, 238], "transition_model": 143, "reward_model": 143, "imaginari": 143, "imagin": 143, "get_reward_oper": 143, "get_transition_model_oper": 143, "var_num": [144, 145], "regard": [144, 151, 155, 161, 236], "perspect": [144, 155], "1707": [144, 155, 161, 202, 210], "06887": [144, 155], "mult_one_hot": [144, 145], "customdistributionalqv": 144, "log_softmax": 144, "_src": 146, "wrapper_typ": 146, "mislead": 147, "other_kei": 147, "typeerror": 147, "min_val": [148, 150], "bias": [148, 229], "_bia": 148, "invert": 149, "surject": 150, "expln": 150, "biased_softplu": [150, 223], "beggin": 150, "biased_softplus_": 150, "syntax": [150, 229], "condit": 150, "met": 150, "safeprobabilisticsequenti": [151, 152, 160, 161, 163, 203, 204, 223], "advantage_kei": [151, 152, 160, 161, 163, 170, 171, 172], "value_target_kei": [151, 161, 163, 170, 171, 172], "value_target": [151, 161, 163, 170, 171, 172], "entropy_bonu": [151, 152, 160, 161], "samples_mc_entropi": [151, 152, 160, 161], "entropy_coef": [151, 152, 160, 161], "critic_coef": [151, 152, 160, 161], "loss_critic_typ": [151, 152, 160, 161, 163], "smooth_l1": [151, 152, 153, 154, 160, 161, 162, 163, 164, 166], "reli": [151, 229, 237], "1602": 151, "01783v2": 151, "advantage_diff_kei": 151, "advantage_diff": 151, "value_error": [151, 170, 171, 172], "loss_function_typ": 151, "l1": [151, 152, 153, 154, 160, 161, 162, 166, 230], "l2": [151, 152, 153, 154, 157, 158, 160, 161, 162, 166], "tha": 151, "throughout": [151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 237], "essenti": [151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 229, 236], "clip_epsilon": 152, "normalize_advantag": [152, 160, 161], "threshold": 152, "bonu": [152, 160, 161], "favour": [152, 160, 161], "exploratori": [152, 160, 161], "mont": [152, 160, 161], "carlo": [152, 160, 161], "multipli": [152, 160, 161, 162, 164, 229], "loss_funct": [152, 153, 154, 161, 162, 164, 166], "actor_network": [153, 162, 163, 164], "value_network": [153, 154, 155, 164, 170, 171, 172], "delay_actor": [153, 164], "delay_valu": [153, 154, 155, 163, 164], "input_tensordict": [153, 154, 155], "assign": [153, 154, 229, 235], "qvalueactor": [154, 223, 230], "distributionalqvalueactor": [155, 223], "unlik": [155, 161, 235, 236, 238], "disctount": 155, "actor_model": 156, "value_model": [156, 158], "model_based_env": 156, "dreamerenv": [156, 223], "imagination_horizon": 156, "lmbda": [156, 170, 172, 173, 175, 176, 177, 178, 179, 229, 230], "discount_loss": [156, 158], "unrol": 156, "lambda_kl": 157, "lambda_reco": 157, "lambda_reward": 157, "reco_loss": 157, "reward_loss": 157, "free_nat": 157, "delayed_clamp": 157, "global_averag": 157, "kl": [157, 160], "reconstruct": [157, 237], "nat": 157, "clamp": [157, 197], "value_loss": [158, 229], "fake_data": 158, "loss_modul": [159, 165, 197, 216, 217, 227, 236], "dqnloss": [159, 165, 208, 223], "ddpgloss": [159, 165, 206, 217, 223, 238], "sacloss": [159, 165, 214, 223], "td3loss": [159, 165], "value_network_update_interv": 159, "contrast": 159, "soft": [159, 164, 165], "06461": 159, "dtarg": 160, "decrement": 160, "samples_mc_kl": 160, "penalti": 160, "old_polici": 160, "new_polici": 160, "adapt": 160, "thu": 160, "distanc": [160, 166, 169, 170], "apart": 160, "proxim": [161, 202, 210], "optimis": [161, 194], "flavour": [161, 229, 238], "constrain": 161, "clipppoloss": [161, 223], "klpenppoloss": [161, 223], "regularis": 161, "06347": [161, 202, 210], "qvalue_network": [162, 164], "num_qvalue_net": [162, 164], "sub_sample_len": 162, "priotity_kei": [162, 164], "alpha_init": [162, 164], "min_alpha": [162, 164], "max_alpha": [162, 164], "fixed_alpha": [162, 164], "target_entropi": [162, 164], "delay_qvalu": [162, 164], "openreview": [162, 212], "ay8zfzm0tdd": [162, 212], "idea": [162, 227, 230, 236], "subsampl": [162, 189, 227], "connectionist": 163, "1992": 163, "doi": 163, "1007": 163, "bf00992696": 163, "1801": [164, 215], "01290": [164, 215], "applic": 164, "1812": 164, "05905": 164, "qvalue_network_bi": 164, "prod": 164, "n_action": 164, "redqloss": [165, 223], "999": [165, 195, 230], "prev_param": 165, "new_param": 165, "v2": [166, 175, 176, 178, 179, 202, 205, 210, 212, 215], "strict_shap": 166, "view_a": 166, "hold": [167, 168], "next_val_kei": 169, "pred_next_v": 169, "usus": 169, "mse": [169, 230], "q_valu": 169, "target_valu": [169, 238], "n_steps_to_next": 169, "value_next_st": 169, "average_ga": 170, "value_kei": [170, 171, 172], "1506": [170, 173, 174, 177], "02438": [170, 173, 174, 177], "exponenti": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 195], "propag": [170, 171, 172], "throught": [170, 171, 172], "advang": 170, "gradient_mod": 170, "sign": 170, "unused_arg": 170, "target_param": [170, 171, 172], "relev": [170, 171, 172], "98": [170, 171, 172, 233], "94": [170, 172], "unpack": [170, 171, 172], "average_reward": [171, 172], "next_state_valu": [173, 174, 175, 176, 177, 178, 179, 223], "old_stat": [173, 174, 175, 177, 178], "timestep": [173, 174, 175, 176, 177, 178, 179, 230], "new_stat": [173, 174, 175, 176, 177, 178, 179], "rolling_gamma": [175, 176, 178, 179], "ti": [175, 176, 178, 179], "event": [175, 176, 178, 179], "g1": [175, 176, 178, 179], "g2": [175, 176, 178, 179], "g3": [175, 176, 178, 179], "g4": [175, 176, 178, 179], "v3": [175, 176, 178, 179], "v4": [175, 176, 178, 179, 229, 233], "upcom": [175, 176, 178, 179, 229], "out_file_bas": 180, "skip_reset": 180, "dump": 180, "interv": [180, 181, 190, 198, 230], "center_crop": 181, "make_grid": 181, "video": [181, 194, 221, 230], "Will": 181, "grid": 181, "exp_nam": [182, 183, 184, 185, 186, 217, 229], "log_dir": [182, 183, 185, 188], "minim": [182, 235], "dependeci": 182, "csv": [182, 188], "templat": 183, "tracking_uri": 184, "mlflow": [184, 188], "uri": 184, "datastor": 184, "tb_log": 185, "tensoarboard": 185, "tensorboard": [185, 188, 238], "wandb": [186, 188, 238], "experiment_nam": [187, 188], "uuid": [187, 237], "date": 187, "logger_typ": 188, "logger_nam": 188, "wandb_kwarg": 188, "mlflow_kwarg": 188, "sub_traj_len": 189, "min_sub_traj_len": 189, "full": [189, 229, 230, 232, 233, 235, 236, 237, 238], "20": [189, 229, 230, 237, 238], "register_op": [189, 190, 191, 192, 193, 195, 196, 198, 227], "process_optim_batch": [189, 195, 227], "_process_optim_batch_hook": [189, 227], "clear": 190, "clear_cuda": 190, "pre_optim_step": [190, 227], "counter": [191, 227], "log_pbar": [191, 192, 194, 195, 227], "progress": [191, 192, 194, 197, 227, 237], "bar": [191, 192, 194, 197, 227], "count_fram": 191, "pre_steps_log": [191, 192, 227], "lognam": 192, "r_train": 192, "log_reward": 192, "loss_compon": 193, "appl": 193, "omit": [193, 230], "loss_": 193, "optimizer_hook": 193, "loss_actor": [193, 238], "record_interv": [194, 229], "record_fram": [194, 199, 229], "policy_explor": [194, 217, 229], "log_kei": 194, "suffix": 194, "underestim": 194, "suppos": [194, 227, 235, 236, 237], "set_exploration_mod": [194, 223, 229, 230, 238], "reward_evalu": 194, "reward_norm": 195, "batch_process": [195, 196, 227], "update_reward_stat": 195, "normalize_reward": 195, "make_train": [196, 223], "_process_batch_hook": [196, 227], "versatil": 197, "lossmodul": [197, 216, 217], "optim_steps_per_batch": [197, 227, 229], "epoch": 197, "clip_grad_norm": 197, "partial": 197, "deriv": 197, "clip_norm": 197, "progress_bar": 197, "tqdm": [197, 229, 230], "save_trainer_interv": 197, "disk": [197, 227, 230], "10000": [197, 230], "save_trainer_fil": [197, 227], "_datacollector": [198, 203, 204, 217], "update_weights_interv": 198, "sit": [198, 230], "sync": [198, 217, 227, 229, 238], "update_weight": 198, "post_step": [198, 227], "cfg": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221], "dictconfig": [199, 200, 202, 203, 204, 205, 207, 210, 212, 213, 215, 216, 217, 218, 221], "correct": [199, 230], "divid": 199, "unknowingli": 199, "1m": [199, 233], "annealing_fram": [199, 229], "init_env_step": [199, 200, 229], "proof_environ": [200, 202, 205, 207, 210, 212, 215, 229], "sta": 200, "ot": 200, "a2closs": [201, 223], "in_keys_actor": [202, 210], "observation_kei": [202, 210, 212, 215], "actorvalueoper": [202, 210, 223, 235], "dummi": [202, 205, 207, 210, 212, 215, 237], "actorcriticoper": [202, 210, 223], "parser_env_arg": [202, 210, 212], "make_ppo_model": [202, 223], "parser_model_args_continu": [202, 210, 212, 215], "cattensor": [202, 205, 210, 212, 215, 223, 229, 230, 232, 237], "hydra": [202, 205, 207, 210, 212, 215], "config_stor": [202, 205, 207, 210, 212, 215], "configstor": [202, 205, 207, 210, 212, 215], "dataclass": [202, 205, 207, 210, 212, 215], "halfcheetah": [202, 205, 210, 212, 215, 229], "config_field": [202, 205, 207, 210, 212, 215], "config_cl": [202, 205, 207, 210, 212, 215], "ppomodelconfig": [202, 210], "envconfig": [202, 205, 207, 210, 212, 215], "make_dataclass": [202, 205, 207, 210, 212, 215], "cls_name": [202, 205, 207, 210, 212, 215], "config_path": [202, 205, 207, 210, 212, 215], "config_nam": [202, 205, 207, 210, 212, 215], "actor_valu": [202, 210], "17": [202, 205, 210, 212, 215, 229], "actor_model_explor": [203, 204, 229], "make_env_kwarg": [203, 204], "actor_net_kwarg": [205, 212, 215], "value_net_kwarg": [205, 215], "modulelist": [205, 212, 215, 235, 238], "ddpgcnnactor": [205, 223], "ddpgmlpactor": [205, 223], "ddpgcnnqnet": [205, 223], "ddpgmlpqnet": [205, 223], "ddpgmodelconfig": 205, "targetnetupdat": [206, 208, 211, 214, 216, 217], "discretemodelconfig": 207, "pong": [207, 237], "v5": [207, 237], "pixels_onli": [207, 229, 230, 237, 238], "210": [207, 237], "160": [207, 237], "ppoloss": [209, 223], "redqloss_deprec": 211, "qvalue_net_kwarg": [212, 215], "qvalu": [212, 215, 229, 230], "redqmodelconfig": 212, "replayargsconfig": 213, "sacmodelconfig": 215, "target_net_updat": 217, "constitu": 217, "learnt": [217, 230], "tempfil": 217, "tensorboardlogg": [217, 223], "tensordictreplaybuff": [217, 223, 229, 230], "egreedywrapp": [217, 223, 230], "env_proof": 217, "obs_spec": 217, "net_valu": 217, "dir": [217, 227], "gettempdir": 217, "argpars": [218, 221], "namespac": [218, 221], "parser": [218, 221], "transformed_env_constructor": [218, 223], "env_kwarg": [219, 220, 229], "num_env_per_collector": [219, 220], "num_collector": [219, 220], "video_tag": 221, "norm_obs_onli": 221, "use_env_cr": 221, "custom_env_mak": 221, "custom_env": 221, "return_transformed_env": 221, "action_dim_gsd": 221, "state_dim_gsd": 221, "batch_dim": [221, 236], "obs_norm_state_dict": 221, "wheter": 221, "maker": [221, 229], "overrid": 221, "exclus": 221, "randompolici": 223, "asyncdatacollector": 223, "tensordictprioritizedreplaybuff": [223, 238], "prioritizedsampl": [223, 229], "binarydiscretetensorspec": 223, "discretetensorspec": 223, "multidiscretetensorspec": 223, "multionehotdiscretetensorspec": 223, "unboundeddiscretetensorspec": [223, 237], "multistep": [223, 229, 230], "binarizereward": 223, "catfram": [223, 230], "centercrop": 223, "discreteactionproject": 223, "finitetensordictcheck": 223, "flattenobserv": 223, "frameskiptransform": 223, "grayscal": [223, 230, 237], "gsdenois": 223, "noopresetenv": [223, 237, 238], "observationtransform": 223, "pinmemorytransform": 223, "r3mtransform": [223, 233], "rewardsum": 223, "selecttransform": 223, "squeezetransform": 223, "stepcount": [223, 238], "tensordictprim": 223, "timemaxpool": 223, "unsqueezetransform": 223, "viprewardtransform": 223, "viptransform": 223, "tensordictrecord": 223, "videorecord": 223, "step_mdp": [223, 229, 230, 237, 238], "get_available_librari": 223, "braxenv": 223, "braxwrapp": 223, "dmcontrolenv": [223, 229, 232, 237], "dmcontrolwrapp": 223, "jumanjienv": 223, "jumanjiwrapp": 223, "vmasenv": 223, "vmaswrapp": 223, "actorcriticwrapp": [223, 235], "additivegaussianwrapp": 223, "ornsteinuhlenbeckprocesswrapp": [223, 229], "is_tensordict_compat": 223, "ensure_tensordict_compat": 223, "qvaluehook": 223, "distributionalqvaluehook": 223, "duelingcnndqnet": [223, 230], "distributionaldqnnet": 223, "lstmnet": 223, "dreameractor": 223, "obsencod": 223, "obsdecod": 223, "rssmprior": 223, "rssmposterior": 223, "reset_nois": 223, "cemplann": 223, "mpcplannerbas": 223, "mppiplann": 223, "independentnorm": 223, "truncatednorm": 223, "tanhdelta": [223, 229], "onehotcategor": 223, "inv_softplu": 223, "distributionaldqnloss": [223, 230], "reinforceloss": 223, "dreameractorloss": 223, "dreamermodelloss": 223, "dreamervalueloss": 223, "gae": 223, "tdestim": 223, "generalized_advantage_estim": 223, "vec_generalized_advantage_estim": 223, "vec_td_lambda_return_estim": 223, "vec_td_lambda_advantage_estim": [223, 229, 230], "td_lambda_return_estim": 223, "td_lambda_advantage_estim": 223, "td_advantage_estim": 223, "distance_loss": 223, "hold_out_net": [223, 229], "hold_out_param": 223, "softupd": [223, 229], "hardupd": [223, 229], "batchsubsampl": [223, 227], "clearcudacach": 223, "countframeslog": 223, "logreward": [223, 227], "optimizerhook": 223, "rewardnorm": 223, "selectkei": [223, 227], "updateweight": [223, 227], "make_a2c_loss": 223, "make_a2c_model": 223, "make_collector_offpolici": 223, "make_collector_onpolici": 223, "make_ddpg_actor": [223, 229], "make_ddpg_loss": 223, "make_dqn_actor": 223, "make_dqn_loss": 223, "make_ppo_loss": 223, "make_redq_loss": 223, "make_redq_model": 223, "make_replay_buff": [223, 229], "make_sac_loss": 223, "make_sac_model": 223, "make_target_updat": 223, "parallel_env_constructor": [223, 229], "sync_async_collector": 223, "sync_sync_collector": 223, "correct_for_frame_skip": 223, "get_stats_random_rollout": [223, 229], "csvlogger": 223, "mlflowlogg": 223, "wandblogg": 223, "get_logg": 223, "generate_exp_nam": 223, "journei": 224, "guid": [224, 229, 230], "textbook": 224, "highlight": 224, "readi": [224, 232], "ever": 224, "bump": 224, "think": [224, 237], "benefit": 224, "submit": [224, 238], "pr": 224, "outer": [227, 229, 237], "believ": 227, "scheme": [227, 237], "substenti": 227, "_pre_steps_log_hook": 227, "_pre_optim_hook": 227, "sub_batch": 227, "_post_loss_hook": 227, "post_loss": 227, "_post_optim_hook": 227, "post_optim": 227, "_post_optim_log": 227, "post_optim_log": 227, "_post_steps_hook": 227, "_post_steps_log_hook": 227, "post_steps_log": 227, "comment": [227, 238], "categori": 227, "extens": 227, "replaybuffertrain": 227, "reserv": 227, "trainerhookbas": 227, "three": [227, 230], "logginghook": 227, "logging_hook": 227, "save_dict": 227, "some_valu": 227, "els": [227, 229, 230, 233], "torchsnapshot": 227, "ckpt_backend": 227, "wherea": [227, 229, 235], "pt": [227, 230, 233], "filepath": 227, "select_kei": 227, "save_train": 227, "load_from_fil": 227, "perfectli": 227, "intern": 228, "click": [229, 230, 232, 233, 235, 236, 237, 238], "tutori": [229, 230, 232, 233, 234, 235, 237], "familiar": [229, 230, 237], "suffici": [229, 230], "transpar": [229, 230], "understood": [229, 230], "sota": [229, 230, 238], "rather": [229, 230], "illustr": [229, 230], "deepcopi": 229, "matplotlib": [229, 230, 237], "pyplot": [229, 230, 237], "plt": [229, 230, 237], "wish": 229, "env_librari": 229, "env_task": 229, "env_arg": 229, "elif": [229, 230], "notimplementederror": 229, "friendli": 229, "rescal": 229, "leav": 229, "make_transformed_env": 229, "reward_sc": 229, "double_to_float_list": 229, "double_to_float_inv_list": 229, "dmcontrol": 229, "downstream": 229, "_stat": 229, "leverag": [229, 237], "env_per_collector": 229, "parallel_env": [229, 237, 238], "td_stat": 229, "_td_stat": 229, "numel": [229, 233], "_td_stats_select": 229, "to_tensordict": [229, 230, 236], "got": [229, 236], "isfinit": 229, "sd": 229, "get_env_stat": 229, "proof_env": 229, "env_spec": 229, "actor_net": 229, "num_lay": 229, "actor_modul": [229, 238], "q_net": 229, "qnet": 229, "frequenc": 229, "make_record": 229, "recorder_obj": 229, "likelihood": 229, "circular": 229, "special": [229, 235, 237], "arrai": 229, "prb": 229, "buffer_s": [229, 230], "buffer_scratch_dir": 229, "adjust": 229, "device_count": [229, 230, 233, 237], "1000000": 229, "becom": [229, 237], "lr": [229, 230], "5e": 229, "weight_decai": 229, "5000": 229, "warm": 229, "tau": [229, 230], "005": [229, 230], "tmp": [229, 233], "n_steps_forward": 229, "semin": 229, "qnet_target": 229, "9152e": 229, "3728e": 229, "00": [229, 233, 234], "6790e": 229, "02": [229, 233, 234], "8100e": 229, "0432e": 229, "4661e": 229, "7335e": 229, "6330e": 229, "3439e": 229, "04": [229, 233], "3564e": 229, "1885e": 229, "4405e": 229, "1127e": 229, "9993e": 229, "7058e": 229, "7317e": 229, "3022e": 229, "2335": 229, "3836": 229, "3375": 229, "3587": 229, "3461": 229, "4445": 229, "3917": 229, "3489": 229, "5510": 229, "5761": 229, "1731": 229, "4106": 229, "3918": 229, "0521": 229, "4038": 229, "4419": 229, "9479": 229, "coupl": 229, "async": [229, 238], "transmiss": 229, "3018685293": 229, "adam": [229, 230], "optimizer_actor": 229, "optimizer_qnet": 229, "total_collection_step": 229, "scheduler1": 229, "lr_schedul": 229, "cosineannealinglr": 229, "t_max": 229, "scheduler2": 229, "temporarili": 229, "henc": 229, "word": [229, 237], "Then": [229, 232], "fed": 229, "hood": 229, "metadata": [229, 237], "ommit": 229, "earli": [229, 238], "rewards_ev": 229, "norm_factor_train": 229, "collected_fram": 229, "pbar": [229, 230], "r0": 229, "filter": 229, "current_fram": [229, 230], "sampled_tensordict": 229, "backprop": 229, "next_valu": [229, 230], "value_est": 229, "pow": [229, 230], "sampled_tensordict_actor": 229, "actor_loss": 229, "p_in": 229, "p_dest": 229, "zip": [229, 231], "copy_": 229, "b_in": 229, "b_dest": 229, "td_record": 229, "r_evalu": 229, "set_descript": [229, 230], "4f": [229, 230], "2500": 229, "543": 229, "37it": 229, "memmapstorag": [229, 233], "057220458984375": 229, "mb": [229, 233, 234], "002384185791015625": 229, "0095367431640625": 229, "1621246337890625": 229, "steps_to_next_ob": [229, 230], "019073486328125": 229, "2201": 229, "3075": 229, "7563": 229, "40": 229, "05": [229, 230], "256": 229, "06it": 229, "1951": 229, "60": [229, 233, 238], "1500": 229, "258": 229, "60it": 229, "4446": 229, "80": [229, 233], "45it": 229, "5550": 229, "07": 229, "377": 229, "24it": 229, "1316": 229, "plot": [229, 230], "mention": [229, 230, 237], "figur": [229, 230, 235, 237], "label": [229, 230, 236], "legend": [229, 230], "xlabel": [229, 230], "ylabel": [229, 230], "tight_layout": [229, 230], "250": [229, 230, 234], "devid": 229, "100000": [229, 230], "batch_size_traj": 229, "simplic": [229, 233, 235], "td_lambda": 229, "roughli": [229, 238], "four": 229, "big": [229, 230, 237], "inde": [229, 236], "revert": 229, "incompat": [229, 236], "bit": 229, "rand_idx": 229, "1444091796875": 229, "0476837158203125": 229, "24249267578125": 229, "19073486328125": 229, "3814697265625": 229, "titl": [229, 230], "labmda": 229, "text": 229, "minut": [229, 230, 232, 233, 235, 236, 237, 238], "43": [229, 234], "134": [229, 234], "coding_ddpg": [229, 234], "jupyt": [229, 230, 231, 232, 233, 235, 236, 237, 238], "ipynb": [229, 230, 232, 233, 235, 236, 237, 238], "galleri": [229, 230, 231, 232, 233, 235, 236, 237, 238], "sphinx": [229, 230, 231, 232, 233, 235, 236, 237, 238], "cartpol": [230, 237], "tabl": 230, "pick": 230, "highest": 230, "discretiz": 230, "amort": 230, "seen": 230, "past": 230, "esitm": 230, "ipython": 230, "get_funct": [230, 235], "is_notebook": 230, "shell": 230, "get_ipython": 230, "__class__": 230, "zmqinteractiveshel": 230, "qtconsol": 230, "terminalinteractiveshel": 230, "nameerror": 230, "interpret": 230, "hyperparam": 230, "hopefulli": 230, "sentit": 230, "variat": 230, "2e": 230, "harder": [230, 238], "n_optim": 230, "n_worker": 230, "smooth": 230, "loos": 230, "notic": 230, "eps_greedy_v": 230, "eps_greedy_val_env": 230, "predefin": 230, "init_bia": 230, "500000": 230, "techin": 230, "dummy_env": 230, "9927785992622375": 230, "0761081725358963": 230, "pole": 230, "un": 230, "actuat": 230, "cart": 230, "frictionless": 230, "upright": [230, 237], "balanc": [230, 237], "pixels_sav": 230, "eval_rollout": 230, "imageio": 230, "mimwrit": 230, "cartpole_random": 230, "mp4": 230, "fp": 230, "480": [230, 233], "360": 230, "trick": 230, "num_ob": 230, "num_act": 230, "make_model": 230, "output_s": 230, "unflatten_kei": 230, "fairli": 230, "params_target": 230, "actor_explor": 230, "params_flat": 230, "flatten_kei": 230, "params_target_flat": 230, "600": 230, "bootstrap": 230, "value_next_step": 230, "not_termin": 230, "significantli": 230, "data_collector": 230, "traj_lengths_ev": 230, "grad_val": 230, "traj_length": 230, "mavg": 230, "traj_count": 230, "prev_traj_count": 230, "enough": 230, "sampled_data": 230, "sampled_data_out": 230, "tdstep": 230, "exp_valu": 230, "mse_loss": 230, "gv": 230, "clip_grad_value_": 230, "set_": 230, "clear_output": 230, "gcf": 230, "clf": 230, "figsiz": 230, "subplot": [230, 237], "traj": 230, "savefig": 230, "dqn_td0": 230, "png": 230, "traceback": 230, "__w": 230, "doc": 230, "coding_dqn": [230, 234], "382": 230, "miniconda": 230, "1929": 230, "__getitem__": [230, 236], "2662": 230, "_default_get": 230, "548": 230, "keyerror": 230, "imshow": [230, 237], "imread": 230, "axi": 230, "traj_lengths_train": 230, "saved_results_td0": 230, "entir": 230, "capac": 230, "smooth_l1_loss": 230, "clip_grad_norm_": 230, "dqn_tdlambda": 230, "saved_results_tdlambda": 230, "fewer": 230, "load_td0": 230, "load_tdlambda": 230, "frames_td0": 230, "frames_tdlambda": 230, "evals_td0": 230, "evals_tdlambda": 230, "mavgs_td0": 230, "mavgs_tdlambda": 230, "losses_td0": 230, "losses_tdlambda": 230, "values_td0": 230, "values_tdlambda": 230, "grad_vals_td0": 230, "grad_vals_tdlambda": 230, "traj_lengths_td0": 230, "traj_lengths_tdlambda": 230, "traj_count_td0": 230, "traj_count_tdlambda": 230, "td0": 230, "goe": [230, 237], "greatli": 230, "nth": 230, "noticebli": 230, "myopic": 230, "collectorclass": 230, "till": 230, "worst": 230, "accuraci": 230, "fanci": 230, "tutorials_python": 231, "tutorials_jupyt": 231, "distinct": 232, "humanoid": [232, 237], "walk": [232, 237], "env1": 232, "env1_obs_kei": 232, "observation_stand": 232, "env2": 232, "env2_obs_kei": 232, "observation_walk": 232, "tdreset1": 232, "tdreset2": 232, "tdreset": 232, "67": 232, "backbon": [232, 238], "policy_common": 232, "policy_stand": 232, "policy_walk": 232, "seq": 232, "21": 232, "But": 232, "env1_mak": 232, "env2_mak": 232, "_single_task": 232, "td_rollout": 232, "shown": 232, "557": [232, 234], "multi_task": [232, 234], "explain": 233, "fine": 233, "tune": 233, "semat": 233, "interchang": 233, "sake": 233, "challeng": 233, "embodi": 233, "ai": 233, "env_transform": [233, 237], "s3": 233, "amazonaw": 233, "r3m_50": 233, "374m": 233, "4m": 233, "157mb": 233, "31": 233, "147mb": 233, "45": 233, "125mb": 233, "57": 233, "6m": 233, "103mb": 233, "69": 233, "108mb": 233, "22": 233, "9m": 233, "101mb": 233, "26": [233, 234, 237], "96": 233, "7m": 233, "115mb": 233, "29": 233, "108m": 233, "9mb": 233, "119m": 233, "104mb": 233, "131m": 233, "6mb": 233, "39": 233, "145m": 233, "111mb": 233, "163m": 233, "132mb": 233, "47": 233, "176m": 233, "124mb": 233, "188m": 233, "53": 233, "199m": 233, "2mb": 233, "213m": 233, "91": 233, "1mb": 233, "226m": 233, "238m": 233, "106mb": 233, "66": 233, "249m": 233, "88": 233, "70": 233, "261m": 233, "89": 233, "5mb": 233, "72": 233, "271m": 233, "83": 233, "75": 233, "279m": 233, "79": 233, "294m": 233, "303m": 233, "86": 233, "3mb": 233, "312m": 233, "77": 233, "326m": 233, "334m": 233, "92": 233, "344m": 233, "74": 233, "354m": 233, "366m": 233, "7mb": 233, "2048": 233, "trainabl": 233, "wiser": 233, "subset": 233, "163": 233, "again": [233, 237], "conclud": 233, "tmp98dz2aar": 233, "030517578125": 233, "tmpo6fn_oft": 233, "00095367431640625": 233, "tmp8js3qkge": 233, "659": 233, "1796875": 233, "tmp00td4rbk": 233, "003814697265625": 233, "tmpn27u0vj1": 233, "haven": 233, "yet": 233, "_storag": 233, "840": [233, 234], "pretrained_model": [233, 234], "54": 234, "133": 234, "torchrl_demo": [234, 238], "28": [234, 238], "493": [234, 238], "torch_env": [234, 237], "736": [234, 237], "tensordict_tutori": [234, 236], "022": [234, 236], "recommand": 235, "conveni": [235, 236], "a_out": 235, "mergelinear": 235, "in_1": 235, "in_2": 235, "linear_1": 235, "linear_2": 235, "x_1": 235, "x_2": 235, "multiheadlinear": 235, "out_1": 235, "out_2": 235, "splitlinear": 235, "output_1": 235, "output_2": 235, "split_and_merge_linear": 235, "make_functional_with_buff": 235, "replica": 235, "params_expand": [235, 238], "buffers_expand": 235, "num_model": 235, "group": 235, "zeros_lik": 235, "result_td": 235, "ok": 235, "conflict": 235, "wire": 235, "tensordictsequentialand": 235, "block": 235, "demonstr": [235, 237], "architectur": 235, "vaswani": 235, "2017": 235, "asid": 235, "tokenstoqkv": 235, "to_dim": 235, "from_dim": 235, "latent_dim": 235, "x_to": 235, "x_from": 235, "splithead": 235, "num_head": 235, "to_num": 235, "from_num": 235, "d_tensor": 235, "transpos": 235, "softmax": 235, "n_head": 235, "d_in": 235, "attn": 235, "skiplayernorm": 235, "to_len": 235, "layer_norm": 235, "layernorm": 235, "x_0": 235, "ffn": 235, "dropout_r": 235, "attentionblock": 235, "tokens_to_qkv": 235, "split_head": 235, "encodertransformerblock": 235, "attention_block": 235, "x_out": 235, "decodertransformerblock": 235, "encoder_block": 235, "transformerencod": 235, "num_block": 235, "transformerdecod": 235, "from_len": 235, "attentionblocktensordict": 235, "connect": 235, "moreov": 235, "complic": [235, 236, 237], "to_nam": 235, "from_nam": 235, "thank": 235, "transformerblockencodertensordict": 235, "transformerblockdecodertensordict": 235, "token": 235, "extract": 235, "transformerencodertensordict": 235, "transformerdecodertensordict": 235, "transformertensordict": 235, "x_encod": 235, "x_decod": 235, "ve": 235, "operar": 235, "td_token": 235, "tdtransform": 235, "t1": 235, "t2": 235, "010769367218017578": 235, "t3": 235, "t4": 235, "007353305816650391": 235, "margin": 235, "deal": 236, "furthermor": 236, "awai": 236, "organ": 236, "power": 236, "segment": 236, "get_data_a": 236, "get_data_b": 236, "reusabl": 236, "lot": 236, "rewriten": 236, "modal": 236, "get_data": 236, "reus": 236, "argu": 236, "dictdataset": 236, "collat": 236, "collate_dict_fn": 236, "dict_list": 236, "final_dict": 236, "single_dict": 236, "simpler": 236, "collate_tensordict_fn": 236, "furtherdown": 236, "_permutedtensordict": 236, "_unsqueezedtensordict": 236, "_viewedtensordict": 236, "datastructur": 236, "explicitli": 236, "caramba": 236, "algebra": 236, "foo": [236, 237], "multidimension": 236, "insid": [236, 237], "violat": 236, "err": 236, "resp": 236, "among": 236, "tensordict_clon": 236, "tensodict": 236, "tuple_index": 236, "new_tensordict": 236, "get_sub_tensordict": 236, "subtensordict": 236, "subtd": 236, "td2": 236, "booltensor": 236, "fashion": 236, "clonned_tensordict": 236, "staked_tensordict": 236, "isinst": 236, "unbind": 236, "list_tensordict": 236, "comeback": 236, "unsqueezed_tensordict": 236, "role": 237, "supervis": 237, "unsupervis": 237, "rom": 237, "licens": 237, "pygam": 237, "unifi": 237, "_build_env": 237, "sphinx_gallery_start_ignor": 237, "warn": 237, "filterwarn": 237, "sphinx_gallery_end_ignor": 237, "adventur": 237, "ram": 237, "airraid": 237, "alien": 237, "amidar": 237, "assault": 237, "continuousbox": [237, 238], "6458": 237, "pack": 237, "brief": 237, "exectut": 237, "reproduct": 237, "did": 237, "shortcut": 237, "tensordict_tprim": 237, "tensordict_rollout": [237, 238], "quickli": 237, "axesimag": 237, "0x7fcaa29b3df0": 237, "inconsist": 237, "supplementari": 237, "swingup": 237, "swingup_spars": 237, "ball_in_cup": 237, "catch": 237, "balance_spars": 237, "three_pol": 237, "two_pol": 237, "finger": 237, "turn_easi": 237, "turn_hard": 237, "fish": 237, "swim": 237, "hopper": 237, "hop": 237, "run_pure_st": 237, "bring_bal": 237, "bring_peg": 237, "insert_bal": 237, "insert_peg": 237, "point_mass": 237, "reacher": 237, "swimmer": 237, "swimmer6": 237, "swimmer15": 237, "walker": 237, "dog": 237, "trot": 237, "humanoid_cmu": 237, "lqr": 237, "lqr_2_1": 237, "lqr_6_2": 237, "quadrup": 237, "escap": 237, "stacker": 237, "stack_2": 237, "stack_4": 237, "240": [237, 238], "320": 237, "wrapper1": 237, "wrapper2": 237, "obviou": 237, "truth": 237, "extern": 237, "env0": 237, "env_transformed_bi": 237, "stanc": 237, "transformeddistribut": 237, "base_dist": 237, "concat": 237, "mofidi": 237, "_inv_apply_transform": 237, "_apply_transform": 237, "transformedenviron": 237, "moderet": 237, "computation": 237, "legitim": 237, "side": 237, "incom": 237, "amongst": 237, "has_cuda": 237, "simplest": 237, "wor": 237, "convention": 237, "scope": 237, "difficulti": 237, "markovian": 237, "3288080526": 237, "sometim": 237, "constain": 237, "uuid1": 237, "bar_": 237, "get_someth": 237, "bar_7c266b04": 237, "a289": 237, "11ed": 237, "b453": 237, "0242ac120002": 237, "aargh": 237, "ourselv": 237, "foo_list": 237, "vec_env": 237, "_dispatch_caller_parallel": 237, "0x7fca537cb4c0": 237, "bar_7f74e16": 237, "89bf": 237, "bar_7f7e2ddc": 237, "8e72": 237, "bar_7facfb80": 237, "897f": 237, "121": 237, "122": 237, "parallen": 237, "carefulli": 237, "commonli": 237, "approxim": 237, "particularili": 237, "evolv": 237, "caution": 237, "previous": 237, "steadi": 237, "approx": 237, "3920": 237, "1418": 237, "1421": 237, "9645": 237, "1720": 237, "1573": 237, "_extra_st": 237, "observation_ssq": 237, "observation_sum": 237, "0673": 237, "0531": 237, "1814": 237, "1956": 237, "1533": 237, "2087": 237, "dispach": 237, "small": 237, "absor": 237, "demo": 238, "icml": 238, "dai": 238, "overview": 238, "vmoen": 238, "fb": 238, "question": 238, "team": 238, "decid": 238, "invest": 238, "platform": 238, "media": 238, "truli": 238, "rest": 238, "predominantli": 238, "tensordict1": 238, "tensordict2": 238, "tensordict_sampl": 238, "_sampler": 238, "_sum_tre": 238, "06984968483448029": 238, "28791671991348267": 238, "gym_env": 238, "squash": 238, "lazyconv2d": 238, "6400": 238, "backbone_modul": 238, "value_modul": 238, "tensordict_exp": 238, "base_modul": 238, "0137": 238, "1524": 238, "0641": 238, "indexputbackward0": 238, "8728": 238, "1335": 238, "9833": 238, "3497": 238, "6889": 238, "6433": 238, "clampbackward1": 238, "1131": 238, "1761": 238, "3425": 238, "2665": 238, "2915": 238, "6207": 238, "1441": 238, "2375": 238, "1242": 238, "1372": 238, "3810": 238, "meanbackward1": 238, "tensordicts_prealloc": 238, "tensordicts_stack": 238, "disclaim": 238, "concatmodul": 238, "loss_td": 238, "loss_valu": 238, "pred_valu": 238, "pred_value_max": 238, "target_value_max": 238, "year": 238, "roadmap": 238, "compris": 238, "hierarch": 238, "contributor": 238, "curiou": 238, "feedback": 238, "nascent": 238, "pypi": 238}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "RandomPolicy"], [14, 0, 1, "", "SyncDataCollector"], [15, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[14, 1, 1, "", "iterator"], [14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "rollout"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[16, 2, 1, "", "split_trajectories"]], "torchrl.data": [[17, 0, 1, "", "BinaryDiscreteTensorSpec"], [18, 0, 1, "", "BoundedTensorSpec"], [19, 0, 1, "", "CompositeSpec"], [20, 0, 1, "", "DiscreteTensorSpec"], [21, 0, 1, "", "MultiDiscreteTensorSpec"], [22, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [23, 0, 1, "", "MultiStep"], [24, 0, 1, "", "OneHotDiscreteTensorSpec"], [25, 0, 1, "", "PrioritizedReplayBuffer"], [26, 0, 1, "", "ReplayBuffer"], [27, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [28, 0, 1, "", "TensorDictReplayBuffer"], [29, 0, 1, "", "TensorSpec"], [30, 0, 1, "", "UnboundedContinuousTensorSpec"], [31, 0, 1, "", "UnboundedDiscreteTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "expand"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "expand"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "expand"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "keys"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "expand"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "expand"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "expand"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[23, 1, 1, "", "add_module"], [23, 1, 1, "", "apply"], [23, 1, 1, "", "bfloat16"], [23, 1, 1, "", "buffers"], [23, 1, 1, "", "children"], [23, 1, 1, "", "cpu"], [23, 1, 1, "", "cuda"], [23, 1, 1, "", "double"], [23, 1, 1, "", "eval"], [23, 1, 1, "", "extra_repr"], [23, 1, 1, "", "float"], [23, 1, 1, "", "forward"], [23, 1, 1, "", "get_buffer"], [23, 1, 1, "", "get_extra_state"], [23, 1, 1, "", "get_parameter"], [23, 1, 1, "", "get_submodule"], [23, 1, 1, "", "half"], [23, 1, 1, "", "ipu"], [23, 1, 1, "", "load_state_dict"], [23, 1, 1, "", "modules"], [23, 1, 1, "", "named_buffers"], [23, 1, 1, "", "named_children"], [23, 1, 1, "", "named_modules"], [23, 1, 1, "", "named_parameters"], [23, 1, 1, "", "parameters"], [23, 1, 1, "", "register_backward_hook"], [23, 1, 1, "", "register_buffer"], [23, 1, 1, "", "register_forward_hook"], [23, 1, 1, "", "register_forward_pre_hook"], [23, 1, 1, "", "register_full_backward_hook"], [23, 1, 1, "", "register_load_state_dict_post_hook"], [23, 1, 1, "", "register_module"], [23, 1, 1, "", "register_parameter"], [23, 1, 1, "", "requires_grad_"], [23, 1, 1, "", "set_extra_state"], [23, 1, 1, "", "share_memory"], [23, 1, 1, "", "state_dict"], [23, 1, 1, "", "to"], [23, 1, 1, "", "to_empty"], [23, 1, 1, "", "train"], [23, 1, 1, "", "type"], [23, 1, 1, "", "xpu"], [23, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "append_transform"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "insert_transform"], [25, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "append_transform"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "insert_transform"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "append_transform"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "insert_transform"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "append_transform"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "insert_transform"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.samplers": [[32, 0, 1, "", "PrioritizedSampler"], [33, 0, 1, "", "RandomSampler"], [34, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[32, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[35, 0, 1, "", "LazyMemmapStorage"], [36, 0, 1, "", "LazyTensorStorage"], [37, 0, 1, "", "ListStorage"], [38, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[35, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[39, 0, 1, "", "RoundRobinWriter"], [40, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[39, 1, 1, "", "add"], [39, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.envs": [[41, 0, 1, "", "EnvBase"], [42, 0, 1, "", "EnvCreator"], [43, 0, 1, "", "EnvMetaData"], [44, 0, 1, "", "GymLikeEnv"], [45, 2, 1, "", "ModelBasedEnvBase"], [46, 0, 1, "", "MultiThreadedEnv"], [47, 0, 1, "", "ParallelEnv"], [48, 0, 1, "", "SerialEnv"], [49, 0, 1, "", "Specs"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[41, 1, 1, "", "add_module"], [41, 1, 1, "", "apply"], [41, 3, 1, "", "batch_locked"], [41, 1, 1, "", "bfloat16"], [41, 1, 1, "", "buffers"], [41, 1, 1, "", "children"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 1, 1, "", "double"], [41, 1, 1, "", "eval"], [41, 1, 1, "", "extra_repr"], [41, 1, 1, "", "fake_tensordict"], [41, 1, 1, "", "float"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "get_buffer"], [41, 1, 1, "", "get_extra_state"], [41, 1, 1, "", "get_parameter"], [41, 1, 1, "", "get_submodule"], [41, 1, 1, "", "half"], [41, 1, 1, "", "ipu"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "modules"], [41, 1, 1, "", "named_buffers"], [41, 1, 1, "", "named_children"], [41, 1, 1, "", "named_modules"], [41, 1, 1, "", "named_parameters"], [41, 1, 1, "", "parameters"], [41, 1, 1, "id0", "rand_step"], [41, 1, 1, "", "register_backward_hook"], [41, 1, 1, "", "register_buffer"], [41, 1, 1, "", "register_forward_hook"], [41, 1, 1, "", "register_forward_pre_hook"], [41, 1, 1, "", "register_full_backward_hook"], [41, 1, 1, "", "register_load_state_dict_post_hook"], [41, 1, 1, "", "register_module"], [41, 1, 1, "", "register_parameter"], [41, 1, 1, "", "requires_grad_"], [41, 1, 1, "id1", "reset"], [41, 1, 1, "id2", "rollout"], [41, 1, 1, "", "set_extra_state"], [41, 1, 1, "id3", "set_seed"], [41, 1, 1, "", "share_memory"], [41, 3, 1, "", "specs"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "id4", "step"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_empty"], [41, 1, 1, "", "train"], [41, 1, 1, "", "type"], [41, 1, 1, "", "xpu"], [41, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "close"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "read_action"], [44, 1, 1, "", "read_done"], [44, 1, 1, "", "read_obs"], [44, 1, 1, "", "read_reward"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_info_dict_reader"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "close"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "update_kwargs"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 3, 1, "", "batch_locked"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "fake_tensordict"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "rand_step"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "reset"], [48, 1, 1, "", "rollout"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_seed"], [48, 1, 1, "", "share_memory"], [48, 3, 1, "", "specs"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "step"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "update_kwargs"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.envs.Specs": [[49, 1, 1, "", "build_tensordict"]], "torchrl.envs.libs.brax": [[50, 2, 1, "", "BraxEnv"], [51, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[52, 2, 1, "", "DMControlEnv"], [53, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[54, 2, 1, "", "GymEnv"], [55, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[56, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[57, 2, 1, "", "JumanjiEnv"], [58, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.vmas": [[59, 2, 1, "", "VmasEnv"], [60, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[61, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[62, 0, 1, "", "BinarizeReward"], [63, 0, 1, "", "CatFrames"], [64, 0, 1, "", "CatTensors"], [65, 0, 1, "", "CenterCrop"], [66, 0, 1, "", "Compose"], [67, 0, 1, "", "DiscreteActionProjection"], [68, 0, 1, "", "DoubleToFloat"], [69, 0, 1, "", "ExcludeTransform"], [70, 0, 1, "", "FiniteTensorDictCheck"], [71, 0, 1, "", "FlattenObservation"], [72, 0, 1, "", "FrameSkipTransform"], [73, 0, 1, "", "GrayScale"], [74, 0, 1, "", "NoopResetEnv"], [75, 0, 1, "", "ObservationNorm"], [76, 0, 1, "", "ObservationTransform"], [77, 0, 1, "", "PinMemoryTransform"], [78, 0, 1, "", "R3MTransform"], [79, 0, 1, "", "Resize"], [80, 0, 1, "", "RewardClipping"], [81, 0, 1, "", "RewardScaling"], [82, 0, 1, "", "RewardSum"], [83, 0, 1, "", "SelectTransform"], [84, 0, 1, "", "SqueezeTransform"], [85, 0, 1, "", "StepCounter"], [86, 0, 1, "", "TensorDictPrimer"], [87, 0, 1, "", "TimeMaxPool"], [88, 0, 1, "", "ToTensorImage"], [89, 0, 1, "", "Transform"], [90, 0, 1, "", "TransformedEnv"], [91, 0, 1, "", "UnsqueezeTransform"], [92, 0, 1, "", "VIPRewardTransform"], [93, 0, 1, "", "VIPTransform"], [94, 0, 1, "", "VecNorm"], [95, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[62, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[63, 1, 1, "", "reset"], [63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[66, 1, 1, "", "forward"], [66, 1, 1, "", "reset"], [66, 1, 1, "", "to"], [66, 1, 1, "", "transform_input_spec"], [66, 1, 1, "", "transform_observation_spec"], [66, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[68, 1, 1, "", "transform_input_spec"], [68, 1, 1, "", "transform_observation_spec"], [68, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[69, 1, 1, "", "reset"], [69, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FlattenObservation": [[71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[74, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[75, 1, 1, "", "init_stats"], [75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[78, 1, 1, "", "to"]], "torchrl.envs.transforms.Resize": [[79, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[80, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[81, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[82, 1, 1, "", "reset"], [82, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[83, 1, 1, "", "reset"], [83, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SqueezeTransform": [[84, 1, 1, "", "forward"]], "torchrl.envs.transforms.StepCounter": [[85, 1, 1, "", "reset"], [85, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[86, 1, 1, "", "reset"], [86, 1, 1, "", "to"], [86, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[87, 1, 1, "", "reset"], [87, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[88, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[89, 1, 1, "", "forward"], [89, 1, 1, "", "reset"], [89, 1, 1, "", "transform_input_spec"], [89, 1, 1, "", "transform_observation_spec"], [89, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[90, 3, 1, "", "action_spec"], [90, 3, 1, "", "batch_locked"], [90, 1, 1, "", "eval"], [90, 3, 1, "", "input_spec"], [90, 1, 1, "", "load_state_dict"], [90, 3, 1, "", "observation_spec"], [90, 3, 1, "", "reward_spec"], [90, 1, 1, "", "set_seed"], [90, 1, 1, "", "state_dict"], [90, 1, 1, "", "to"], [90, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[91, 1, 1, "", "forward"], [91, 1, 1, "", "transform_input_spec"], [91, 1, 1, "", "transform_observation_spec"], [91, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[93, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[94, 1, 1, "", "build_td_for_shared_vecnorm"], [94, 1, 1, "", "get_extra_state"], [94, 1, 1, "", "set_extra_state"], [94, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[95, 1, 1, "", "reset"]], "torchrl.envs.utils": [[96, 2, 1, "", "check_env_specs"], [97, 2, 1, "", "exploration_mode"], [98, 2, 1, "", "get_available_libraries"], [99, 2, 1, "", "set_exploration_mode"], [100, 2, 1, "", "step_mdp"]], "torchrl.modules": [[101, 0, 1, "", "CEMPlanner"], [102, 0, 1, "", "ConvNet"], [103, 0, 1, "", "DdpgCnnActor"], [104, 0, 1, "", "DdpgCnnQNet"], [105, 0, 1, "", "DdpgMlpActor"], [106, 0, 1, "", "DdpgMlpQNet"], [107, 0, 1, "", "Delta"], [108, 0, 1, "", "DistributionalDQNnet"], [109, 0, 1, "", "DreamerActor"], [110, 0, 1, "", "DuelingCnnDQNet"], [111, 0, 1, "", "IndependentNormal"], [112, 0, 1, "", "LSTMNet"], [113, 0, 1, "", "MLP"], [114, 0, 1, "", "MPCPlannerBase"], [115, 0, 1, "", "MPPIPlanner"], [116, 0, 1, "", "NoisyLazyLinear"], [117, 0, 1, "", "NoisyLinear"], [118, 0, 1, "", "NormalParamWrapper"], [119, 0, 1, "", "ObsDecoder"], [120, 0, 1, "", "ObsEncoder"], [121, 0, 1, "", "OneHotCategorical"], [122, 0, 1, "", "RSSMPosterior"], [123, 0, 1, "", "RSSMPrior"], [124, 0, 1, "", "TanhDelta"], [125, 0, 1, "", "TanhNormal"], [126, 0, 1, "", "TruncatedNormal"], [127, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[101, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[102, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[103, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[104, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[105, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[106, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[107, 1, 1, "", "log_prob"], [107, 3, 1, "", "mean"], [107, 3, 1, "", "mode"], [107, 1, 1, "", "rsample"], [107, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[108, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[109, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[110, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[111, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[112, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[113, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[115, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[116, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[118, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[119, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[120, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[121, 1, 1, "", "log_prob"], [121, 3, 1, "", "mode"], [121, 1, 1, "", "rsample"], [121, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[122, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[123, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[124, 3, 1, "", "mean"], [124, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[125, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[126, 1, 1, "", "log_prob"], [126, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[128, 0, 1, "", "Actor"], [129, 0, 1, "", "ActorCriticOperator"], [130, 0, 1, "", "ActorCriticWrapper"], [131, 0, 1, "", "ActorValueOperator"], [132, 0, 1, "", "AdditiveGaussianWrapper"], [133, 0, 1, "", "DistributionalQValueActor"], [134, 0, 1, "", "EGreedyWrapper"], [135, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [136, 0, 1, "", "ProbabilisticActor"], [137, 0, 1, "", "QValueActor"], [138, 0, 1, "", "SafeModule"], [139, 0, 1, "", "SafeProbabilisticModule"], [140, 0, 1, "", "SafeProbabilisticSequential"], [141, 0, 1, "", "SafeSequential"], [142, 0, 1, "", "ValueOperator"], [143, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[129, 1, 1, "", "get_critic_operator"], [129, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[130, 1, 1, "", "get_policy_operator"], [130, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[131, 1, 1, "", "get_policy_operator"], [131, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[138, 1, 1, "", "random"], [138, 1, 1, "", "random_sample"], [138, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[139, 1, 1, "", "random"], [139, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[143, 1, 1, "", "get_reward_operator"], [143, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[144, 0, 1, "", "DistributionalQValueHook"], [145, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[146, 0, 1, "", "ensure_tensordict_compatible"], [147, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[148, 0, 1, "", "biased_softplus"], [149, 0, 1, "", "inv_softplus"], [150, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[148, 1, 1, "", "forward"]], "torchrl.objectives": [[151, 0, 1, "", "A2CLoss"], [152, 0, 1, "", "ClipPPOLoss"], [153, 0, 1, "", "DDPGLoss"], [154, 0, 1, "", "DQNLoss"], [155, 0, 1, "", "DistributionalDQNLoss"], [156, 0, 1, "", "DreamerActorLoss"], [157, 0, 1, "", "DreamerModelLoss"], [158, 0, 1, "", "DreamerValueLoss"], [159, 0, 1, "", "HardUpdate"], [160, 0, 1, "", "KLPENPPOLoss"], [161, 0, 1, "", "PPOLoss"], [162, 0, 1, "", "REDQLoss"], [163, 0, 1, "", "ReinforceLoss"], [164, 0, 1, "", "SACLoss"], [165, 0, 1, "", "SoftUpdate"], [166, 0, 1, "", "distance_loss"], [167, 0, 1, "", "hold_out_net"], [168, 0, 1, "", "hold_out_params"], [169, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[151, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[152, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[153, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[154, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[155, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[156, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[157, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[158, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[160, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[161, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[162, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[163, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[164, 1, 1, "", "forward"]], "torchrl.objectives.value": [[170, 0, 1, "", "GAE"], [171, 0, 1, "", "TDEstimate"], [172, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[170, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[171, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[172, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[173, 0, 1, "", "generalized_advantage_estimate"], [174, 0, 1, "", "td_advantage_estimate"], [175, 0, 1, "", "td_lambda_advantage_estimate"], [176, 0, 1, "", "td_lambda_return_estimate"], [177, 0, 1, "", "vec_generalized_advantage_estimate"], [178, 0, 1, "", "vec_td_lambda_advantage_estimate"], [179, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[180, 2, 1, "", "TensorDictRecorder"], [181, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[182, 2, 1, "", "CSVLogger"], [183, 2, 1, "", "Logger"], [184, 2, 1, "", "MLFlowLogger"], [185, 2, 1, "", "TensorboardLogger"], [186, 2, 1, "", "WandbLogger"], [187, 2, 1, "", "generate_exp_name"], [188, 2, 1, "", "get_logger"]], "torchrl.trainers": [[189, 0, 1, "", "BatchSubSampler"], [190, 0, 1, "", "ClearCudaCache"], [191, 0, 1, "", "CountFramesLog"], [192, 0, 1, "", "LogReward"], [193, 0, 1, "", "OptimizerHook"], [194, 0, 1, "", "Recorder"], [195, 0, 1, "", "RewardNormalizer"], [196, 0, 1, "", "SelectKeys"], [197, 0, 1, "", "Trainer"], [198, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[199, 2, 1, "", "correct_for_frame_skip"], [200, 2, 1, "", "get_stats_random_rollout"], [201, 2, 1, "", "make_a2c_loss"], [202, 2, 1, "", "make_a2c_model"], [203, 2, 1, "", "make_collector_offpolicy"], [204, 2, 1, "", "make_collector_onpolicy"], [205, 2, 1, "", "make_ddpg_actor"], [206, 2, 1, "", "make_ddpg_loss"], [207, 2, 1, "", "make_dqn_actor"], [208, 2, 1, "", "make_dqn_loss"], [209, 2, 1, "", "make_ppo_loss"], [210, 2, 1, "", "make_ppo_model"], [211, 2, 1, "", "make_redq_loss"], [212, 2, 1, "", "make_redq_model"], [213, 2, 1, "", "make_replay_buffer"], [214, 2, 1, "", "make_sac_loss"], [215, 2, 1, "", "make_sac_model"], [216, 2, 1, "", "make_target_updater"], [217, 2, 1, "", "make_trainer"], [218, 2, 1, "", "parallel_env_constructor"], [219, 2, 1, "", "sync_async_collector"], [220, 2, 1, "", "sync_sync_collector"], [221, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 225, 226, 227, 228, 229, 230, 237, 238], "document": [0, 8], "tutori": 0, "refer": [0, 223], "knowledg": [0, 224], "base": [0, 224, 230], "indic": 0, "tabl": 0, "collector": [1, 229], "packag": [1, 2, 3, 225, 226, 227, 228], "data": [1, 2, 229, 238], "helper": [1, 3], "function": [1, 238], "replai": [2, 229, 238], "buffer": [2, 229, 238], "compos": [2, 66], "tensorspec": [2, 29], "util": [2, 225, 226, 227], "env": [3, 237, 238], "vector": [3, 238], "transform": [3, 89, 229, 235, 237, 238], "record": [3, 194, 229], "domain": 3, "specif": [3, 232], "librari": [3, 238], "work": [4, 5], "gym": [4, 237], "what": 4, "i": [4, 7, 236], "openai": 4, "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 236], "up": 5, "your": [5, 229], "environ": [5, 6, 229, 230, 232, 237, 238], "instal": [5, 6, 238], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 229, 230, 233, 235, 238], "common": [5, 6, 7], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 237], "all": 6, "new": 6, "bindindg": 6, "2": [6, 235], "1": [6, 235], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "debug": 7, "gradient": 7, "relat": 7, "error": 7, "newcom": 7, "my": 7, "train": [7, 229, 230], "too": 7, "slow": 7, "intermedi": 7, "bug": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 235], "rl": [8, 238], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "randompolici": 13, "syncdatacollector": 14, "asyncdatacollector": 15, "split_trajectori": 16, "binarydiscretetensorspec": 17, "boundedtensorspec": 18, "compositespec": 19, "discretetensorspec": 20, "multidiscretetensorspec": 21, "multionehotdiscretetensorspec": 22, "multistep": 23, "onehotdiscretetensorspec": 24, "prioritizedreplaybuff": 25, "replaybuff": 26, "tensordictprioritizedreplaybuff": 27, "tensordictreplaybuff": 28, "unboundedcontinuoustensorspec": 30, "unboundeddiscretetensorspec": 31, "prioritizedsampl": 32, "randomsampl": 33, "sampler": 34, "lazymemmapstorag": 35, "lazytensorstorag": 36, "liststorag": 37, "storag": 38, "roundrobinwrit": 39, "writer": 40, "envbas": 41, "envcreat": 42, "envmetadata": 43, "gymlikeenv": 44, "modelbasedenvbas": 45, "multithreadedenv": 46, "parallelenv": 47, "serialenv": 48, "spec": [49, 237], "braxenv": 50, "braxwrapp": 51, "dmcontrolenv": 52, "dmcontrolwrapp": 53, "gymenv": 54, "gymwrapp": 55, "habitatenv": 56, "jumanjienv": 57, "jumanjiwrapp": 58, "vmasenv": 59, "vmaswrapp": 60, "dreamerenv": 61, "binarizereward": 62, "catfram": 63, "cattensor": 64, "centercrop": 65, "discreteactionproject": 67, "doubletofloat": 68, "excludetransform": 69, "finitetensordictcheck": 70, "flattenobserv": 71, "frameskiptransform": 72, "grayscal": 73, "noopresetenv": 74, "observationnorm": 75, "observationtransform": 76, "pinmemorytransform": 77, "r3mtransform": 78, "resiz": 79, "rewardclip": 80, "rewardsc": 81, "rewardsum": 82, "selecttransform": 83, "squeezetransform": 84, "stepcount": 85, "tensordictprim": 86, "timemaxpool": 87, "totensorimag": 88, "transformedenv": 90, "unsqueezetransform": 91, "viprewardtransform": 92, "viptransform": 93, "vecnorm": [94, 237], "gsdenois": 95, "check_env_spec": 96, "exploration_mod": 97, "get_available_librari": 98, "set_exploration_mod": 99, "step_mdp": 100, "cemplann": 101, "convnet": 102, "ddpgcnnactor": 103, "ddpgcnnqnet": 104, "ddpgmlpactor": 105, "ddpgmlpqnet": 106, "delta": 107, "distributionaldqnnet": 108, "dreameractor": 109, "duelingcnndqnet": 110, "independentnorm": 111, "lstmnet": 112, "mlp": 113, "mpcplannerbas": 114, "mppiplann": 115, "noisylazylinear": 116, "noisylinear": 117, "normalparamwrapp": 118, "obsdecod": 119, "obsencod": 120, "onehotcategor": 121, "rssmposterior": 122, "rssmprior": 123, "tanhdelta": 124, "tanhnorm": 125, "truncatednorm": 126, "reset_nois": 127, "actor": [128, 235], "actorcriticoper": [129, 235], "actorcriticwrapp": 130, "actorvalueoper": 131, "additivegaussianwrapp": 132, "distributionalqvalueactor": 133, "egreedywrapp": 134, "ornsteinuhlenbeckprocesswrapp": 135, "probabilisticactor": [136, 235], "qvalueactor": 137, "safemodul": 138, "safeprobabilisticmodul": 139, "safeprobabilisticsequenti": 140, "safesequenti": 141, "valueoper": 142, "worldmodelwrapp": 143, "distributionalqvaluehook": 144, "qvaluehook": 145, "ensure_tensordict_compat": 146, "is_tensordict_compat": 147, "biased_softplu": 148, "inv_softplu": 149, "map": 150, "a2closs": 151, "clipppoloss": 152, "ddpgloss": 153, "dqnloss": 154, "distributionaldqnloss": 155, "dreameractorloss": 156, "dreamermodelloss": 157, "dreamervalueloss": 158, "hardupd": 159, "klpenppoloss": 160, "ppoloss": 161, "redqloss": 162, "reinforceloss": 163, "sacloss": 164, "softupd": 165, "distance_loss": 166, "hold_out_net": 167, "hold_out_param": 168, "next_state_valu": 169, "gae": 170, "tdestim": 171, "tdlambdaestim": 172, "generalized_advantage_estim": 173, "td_advantage_estim": 174, "td_lambda_advantage_estim": 175, "td_lambda_return_estim": 176, "vec_generalized_advantage_estim": 177, "vec_td_lambda_advantage_estim": 178, "vec_td_lambda_return_estim": 179, "tensordictrecord": 180, "videorecord": 181, "csvlogger": 182, "logger": [183, 227], "mlflowlogg": 184, "tensorboardlogg": 185, "wandblogg": 186, "generate_exp_nam": 187, "get_logg": 188, "batchsubsampl": 189, "clearcudacach": 190, "countframeslog": 191, "logreward": 192, "optimizerhook": 193, "rewardnorm": 195, "selectkei": 196, "trainer": [197, 227], "updateweight": 198, "correct_for_frame_skip": 199, "get_stats_random_rollout": 200, "make_a2c_loss": 201, "make_a2c_model": 202, "make_collector_offpolici": 203, "make_collector_onpolici": 204, "make_ddpg_actor": 205, "make_ddpg_loss": 206, "make_dqn_actor": 207, "make_dqn_loss": 208, "make_ppo_loss": 209, "make_ppo_model": 210, "make_redq_loss": 211, "make_redq_model": 212, "make_replay_buff": 213, "make_sac_loss": 214, "make_sac_model": 215, "make_target_updat": 216, "make_train": 217, "parallel_env_constructor": 218, "sync_async_collector": 219, "sync_sync_collector": 220, "transformed_env_constructor": 221, "readm": [222, 231], "tuto": [222, 231], "api": 223, "contribut": [224, 238], "content": 224, "modul": [225, 238], "tensordict": [225, 236, 238], "hook": [225, 227], "model": [225, 229, 230, 233, 238], "explor": 225, "planner": 225, "distribut": 225, "object": [226, 229, 238], "dqn": [226, 230], "ddpg": [226, 229], "sac": 226, "redq": 226, "ppo": 226, "a2c": 226, "reinforc": 226, "dreamer": 226, "return": 226, "checkpoint": 227, "builder": 227, "_util": 228, "code": [229, 230, 236], "parallel": [229, 232, 237], "execut": [229, 232], "normal": 229, "observ": 229, "build": [229, 230], "evalu": 229, "hyperparamet": [229, 230], "initi": 229, "time": [229, 234], "polici": [229, 232], "experi": 229, "result": 229, "sampl": 229, "trajectori": 229, "td": [229, 230], "lambda": [229, 230], "pixel": 230, "The": 230, "problem": 230, "deep": 230, "q": 230, "network": 230, "regular": 230, "loop": 230, "conclus": 230, "possibl": 230, "improv": [230, 236], "task": 232, "multi": 232, "divers": 232, "rollout": [232, 237], "pretrain": 233, "comput": 234, "tensordictmodul": [235, 238], "exampl": 235, "simpl": 235, "usag": [235, 236], "multipl": 235, "input": 235, "3": 235, "output": 235, "4": 235, "combin": 235, "tensordictsequenti": 235, "5": 235, "compat": 235, "do": [235, 236], "": 235, "don": 235, "t": [235, 236], "probabilistictensordictmodul": 235, "showcas": 235, "implement": 235, "benchmark": 235, "modular": 236, "can": 236, "thi": 236, "python": 236, "dict": 236, "structur": 236, "dictionari": 236, "featur": 236, "get": 236, "kei": 236, "valu": 236, "updat": 236, "tensordict_or_dict": 236, "del": 236, "tensor": 236, "batch": 236, "size": 236, "devic": [236, 237], "memori": 236, "share": 236, "via": 236, "physic": 236, "oper": 236, "seed": 237, "reset": 237, "step": 237, "frame_skip": 237, "deepmind": 237, "control": 237, "run": 237, "close": 237, "access": 237, "attribut": 237, "kwarg": 237, "introduct": 238, "chang": 238, "config": 238, "sequenc": 238, "program": 238, "ensembl": 238, "meta": 238, "special": 238, "class": 238, "state": 238}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [224, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "TensorSpec": [[2, "tensorspec"], [29, "tensorspec"]], "Utils": [[2, "utils"], [225, "utils"], [226, "utils"], [227, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [229, "transforms"], [238, "transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "What is OpenAI Gym?": [[4, "what-is-openai-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips and Debugging": [[7, "pro-tips-and-debugging"]], "Gradient-related errors [Newcomers]": [[7, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[7, "my-training-is-too-slow-newcomers-intermediate"]], "Common bugs": [[7, "common-bugs"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "RandomPolicy": [[13, "randompolicy"]], "SyncDataCollector": [[14, "syncdatacollector"]], "aSyncDataCollector": [[15, "asyncdatacollector"]], "split_trajectories": [[16, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[17, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[18, "boundedtensorspec"]], "CompositeSpec": [[19, "compositespec"]], "DiscreteTensorSpec": [[20, "discretetensorspec"]], "MultiDiscreteTensorSpec": [[21, "multidiscretetensorspec"]], "MultiOneHotDiscreteTensorSpec": [[22, "multionehotdiscretetensorspec"]], "MultiStep": [[23, "multistep"]], "OneHotDiscreteTensorSpec": [[24, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[25, "prioritizedreplaybuffer"]], "ReplayBuffer": [[26, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[27, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[28, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[30, "unboundedcontinuoustensorspec"]], "UnboundedDiscreteTensorSpec": [[31, "unboundeddiscretetensorspec"]], "PrioritizedSampler": [[32, "prioritizedsampler"]], "RandomSampler": [[33, "randomsampler"]], "Sampler": [[34, "sampler"]], "LazyMemmapStorage": [[35, "lazymemmapstorage"]], "LazyTensorStorage": [[36, "lazytensorstorage"]], "ListStorage": [[37, "liststorage"]], "Storage": [[38, "storage"]], "RoundRobinWriter": [[39, "roundrobinwriter"]], "Writer": [[40, "writer"]], "EnvBase": [[41, "envbase"]], "EnvCreator": [[42, "envcreator"]], "EnvMetaData": [[43, "envmetadata"]], "GymLikeEnv": [[44, "gymlikeenv"]], "ModelBasedEnvBase": [[45, "modelbasedenvbase"]], "MultiThreadedEnv": [[46, "multithreadedenv"]], "ParallelEnv": [[47, "parallelenv"]], "SerialEnv": [[48, "serialenv"]], "Specs": [[49, "specs"]], "BraxEnv": [[50, "braxenv"]], "BraxWrapper": [[51, "braxwrapper"]], "DMControlEnv": [[52, "dmcontrolenv"]], "DMControlWrapper": [[53, "dmcontrolwrapper"]], "GymEnv": [[54, "gymenv"]], "GymWrapper": [[55, "gymwrapper"]], "HabitatEnv": [[56, "habitatenv"]], "JumanjiEnv": [[57, "jumanjienv"]], "JumanjiWrapper": [[58, "jumanjiwrapper"]], "VmasEnv": [[59, "vmasenv"]], "VmasWrapper": [[60, "vmaswrapper"]], "DreamerEnv": [[61, "dreamerenv"]], "BinarizeReward": [[62, "binarizereward"]], "CatFrames": [[63, "catframes"]], "CatTensors": [[64, "cattensors"]], "CenterCrop": [[65, "centercrop"]], "Compose": [[66, "compose"]], "DiscreteActionProjection": [[67, "discreteactionprojection"]], "DoubleToFloat": [[68, "doubletofloat"]], "ExcludeTransform": [[69, "excludetransform"]], "FiniteTensorDictCheck": [[70, "finitetensordictcheck"]], "FlattenObservation": [[71, "flattenobservation"]], "FrameSkipTransform": [[72, "frameskiptransform"]], "GrayScale": [[73, "grayscale"]], "NoopResetEnv": [[74, "noopresetenv"]], "ObservationNorm": [[75, "observationnorm"]], "ObservationTransform": [[76, "observationtransform"]], "PinMemoryTransform": [[77, "pinmemorytransform"]], "R3MTransform": [[78, "r3mtransform"]], "Resize": [[79, "resize"]], "RewardClipping": [[80, "rewardclipping"]], "RewardScaling": [[81, "rewardscaling"]], "RewardSum": [[82, "rewardsum"]], "SelectTransform": [[83, "selecttransform"]], "SqueezeTransform": [[84, "squeezetransform"]], "StepCounter": [[85, "stepcounter"]], "TensorDictPrimer": [[86, "tensordictprimer"]], "TimeMaxPool": [[87, "timemaxpool"]], "ToTensorImage": [[88, "totensorimage"]], "Transform": [[89, "transform"]], "TransformedEnv": [[90, "transformedenv"]], "UnsqueezeTransform": [[91, "unsqueezetransform"]], "VIPRewardTransform": [[92, "viprewardtransform"]], "VIPTransform": [[93, "viptransform"]], "VecNorm": [[94, "vecnorm"], [237, "vecnorm"]], "gSDENoise": [[95, "gsdenoise"]], "check_env_specs": [[96, "check-env-specs"]], "exploration_mode": [[97, "exploration-mode"]], "get_available_libraries": [[98, "get-available-libraries"]], "set_exploration_mode": [[99, "set-exploration-mode"]], "step_mdp": [[100, "step-mdp"]], "CEMPlanner": [[101, "cemplanner"]], "ConvNet": [[102, "convnet"]], "DdpgCnnActor": [[103, "ddpgcnnactor"]], "DdpgCnnQNet": [[104, "ddpgcnnqnet"]], "DdpgMlpActor": [[105, "ddpgmlpactor"]], "DdpgMlpQNet": [[106, "ddpgmlpqnet"]], "Delta": [[107, "delta"]], "DistributionalDQNnet": [[108, "distributionaldqnnet"]], "DreamerActor": [[109, "dreameractor"]], "DuelingCnnDQNet": [[110, "duelingcnndqnet"]], "IndependentNormal": [[111, "independentnormal"]], "LSTMNet": [[112, "lstmnet"]], "MLP": [[113, "mlp"]], "MPCPlannerBase": [[114, "mpcplannerbase"]], "MPPIPlanner": [[115, "mppiplanner"]], "NoisyLazyLinear": [[116, "noisylazylinear"]], "NoisyLinear": [[117, "noisylinear"]], "NormalParamWrapper": [[118, "normalparamwrapper"]], "ObsDecoder": [[119, "obsdecoder"]], "ObsEncoder": [[120, "obsencoder"]], "OneHotCategorical": [[121, "onehotcategorical"]], "RSSMPosterior": [[122, "rssmposterior"]], "RSSMPrior": [[123, "rssmprior"]], "TanhDelta": [[124, "tanhdelta"]], "TanhNormal": [[125, "tanhnormal"]], "TruncatedNormal": [[126, "truncatednormal"]], "reset_noise": [[127, "reset-noise"]], "Actor": [[128, "actor"], [235, "actor"]], "ActorCriticOperator": [[129, "actorcriticoperator"], [235, "actorcriticoperator"]], "ActorCriticWrapper": [[130, "actorcriticwrapper"]], "ActorValueOperator": [[131, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[132, "additivegaussianwrapper"]], "DistributionalQValueActor": [[133, "distributionalqvalueactor"]], "EGreedyWrapper": [[134, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[135, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[136, "probabilisticactor"], [235, "probabilisticactor"]], "QValueActor": [[137, "qvalueactor"]], "SafeModule": [[138, "safemodule"]], "SafeProbabilisticModule": [[139, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[140, "safeprobabilisticsequential"]], "SafeSequential": [[141, "safesequential"]], "ValueOperator": [[142, "valueoperator"]], "WorldModelWrapper": [[143, "worldmodelwrapper"]], "DistributionalQValueHook": [[144, "distributionalqvaluehook"]], "QValueHook": [[145, "qvaluehook"]], "ensure_tensordict_compatible": [[146, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[147, "is-tensordict-compatible"]], "biased_softplus": [[148, "biased-softplus"]], "inv_softplus": [[149, "inv-softplus"]], "mappings": [[150, "mappings"]], "A2CLoss": [[151, "a2closs"]], "ClipPPOLoss": [[152, "clipppoloss"]], "DDPGLoss": [[153, "ddpgloss"]], "DQNLoss": [[154, "dqnloss"]], "DistributionalDQNLoss": [[155, "distributionaldqnloss"]], "DreamerActorLoss": [[156, "dreameractorloss"]], "DreamerModelLoss": [[157, "dreamermodelloss"]], "DreamerValueLoss": [[158, "dreamervalueloss"]], "HardUpdate": [[159, "hardupdate"]], "KLPENPPOLoss": [[160, "klpenppoloss"]], "PPOLoss": [[161, "ppoloss"]], "REDQLoss": [[162, "redqloss"]], "ReinforceLoss": [[163, "reinforceloss"]], "SACLoss": [[164, "sacloss"]], "SoftUpdate": [[165, "softupdate"]], "distance_loss": [[166, "distance-loss"]], "hold_out_net": [[167, "hold-out-net"]], "hold_out_params": [[168, "hold-out-params"]], "next_state_value": [[169, "next-state-value"]], "GAE": [[170, "gae"]], "TDEstimate": [[171, "tdestimate"]], "TDLambdaEstimate": [[172, "tdlambdaestimate"]], "generalized_advantage_estimate": [[173, "generalized-advantage-estimate"]], "td_advantage_estimate": [[174, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[175, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[176, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[177, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[178, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[179, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[180, "tensordictrecorder"]], "VideoRecorder": [[181, "videorecorder"]], "CSVLogger": [[182, "csvlogger"]], "Logger": [[183, "logger"]], "MLFlowLogger": [[184, "mlflowlogger"]], "TensorboardLogger": [[185, "tensorboardlogger"]], "WandbLogger": [[186, "wandblogger"]], "generate_exp_name": [[187, "generate-exp-name"]], "get_logger": [[188, "get-logger"]], "BatchSubSampler": [[189, "batchsubsampler"]], "ClearCudaCache": [[190, "clearcudacache"]], "CountFramesLog": [[191, "countframeslog"]], "LogReward": [[192, "logreward"]], "OptimizerHook": [[193, "optimizerhook"]], "Recorder": [[194, "recorder"]], "RewardNormalizer": [[195, "rewardnormalizer"]], "SelectKeys": [[196, "selectkeys"]], "Trainer": [[197, "trainer"]], "UpdateWeights": [[198, "updateweights"]], "correct_for_frame_skip": [[199, "correct-for-frame-skip"]], "get_stats_random_rollout": [[200, "get-stats-random-rollout"]], "make_a2c_loss": [[201, "make-a2c-loss"]], "make_a2c_model": [[202, "make-a2c-model"]], "make_collector_offpolicy": [[203, "make-collector-offpolicy"]], "make_collector_onpolicy": [[204, "make-collector-onpolicy"]], "make_ddpg_actor": [[205, "make-ddpg-actor"]], "make_ddpg_loss": [[206, "make-ddpg-loss"]], "make_dqn_actor": [[207, "make-dqn-actor"]], "make_dqn_loss": [[208, "make-dqn-loss"]], "make_ppo_loss": [[209, "make-ppo-loss"]], "make_ppo_model": [[210, "make-ppo-model"]], "make_redq_loss": [[211, "make-redq-loss"]], "make_redq_model": [[212, "make-redq-model"]], "make_replay_buffer": [[213, "make-replay-buffer"]], "make_sac_loss": [[214, "make-sac-loss"]], "make_sac_model": [[215, "make-sac-model"]], "make_target_updater": [[216, "make-target-updater"]], "make_trainer": [[217, "make-trainer"]], "parallel_env_constructor": [[218, "parallel-env-constructor"]], "sync_async_collector": [[219, "sync-async-collector"]], "sync_sync_collector": [[220, "sync-sync-collector"]], "transformed_env_constructor": [[221, "transformed-env-constructor"]], "README Tutos": [[222, "readme-tutos"], [231, "readme-tutos"]], "API Reference": [[223, "api-reference"]], "Contributing": [[224, "contributing"], [238, "contributing"]], "Contents:": [[224, null]], "torchrl.modules package": [[225, "torchrl-modules-package"]], "TensorDict modules": [[225, "tensordict-modules"]], "Hooks": [[225, "hooks"]], "Models": [[225, "models"], [238, "models"]], "Exploration": [[225, "exploration"]], "Planners": [[225, "planners"]], "Distributions": [[225, "distributions"]], "torchrl.objectives package": [[226, "torchrl-objectives-package"]], "DQN": [[226, "dqn"]], "DDPG": [[226, "ddpg"]], "SAC": [[226, "sac"]], "REDQ": [[226, "redq"]], "PPO": [[226, "ppo"]], "A2C": [[226, "a2c"]], "Reinforce": [[226, "reinforce"]], "Dreamer": [[226, "dreamer"]], "Returns": [[226, "returns"]], "torchrl.trainers package": [[227, "torchrl-trainers-package"]], "Checkpointing": [[227, "checkpointing"]], "Trainer and hooks": [[227, "trainer-and-hooks"]], "Builders": [[227, "builders"]], "Loggers": [[227, "loggers"]], "torchrl._utils package": [[228, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[229, "coding-ddpg-using-torchrl"]], "Environment": [[229, "environment"]], "Parallel execution": [[229, "parallel-execution"]], "Normalization of the observations": [[229, "normalization-of-the-observations"]], "Building the model": [[229, "building-the-model"]], "Evaluator: building your recorder object": [[229, "evaluator-building-your-recorder-object"]], "Replay buffer": [[229, "replay-buffer"]], "Hyperparameters": [[229, "hyperparameters"], [230, "hyperparameters"]], "Initialization": [[229, "initialization"]], "Data collector": [[229, "data-collector"]], "Time to train the policy!": [[229, "time-to-train-the-policy"]], "Experiment results": [[229, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[229, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[230, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[230, "building-the-environment"]], "The problem": [[230, "the-problem"]], "Building the model (Deep Q-network)": [[230, "building-the-model-deep-q-network"]], "Regular DQN": [[230, "regular-dqn"]], "Training loop": [[230, "training-loop"], [230, "id1"]], "TD-lambda": [[230, "td-lambda"]], "Conclusion and possible improvements": [[230, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[232, "task-specific-policy-in-multi-task-environments"]], "Policy": [[232, "policy"]], "Executing diverse tasks in parallel": [[232, "executing-diverse-tasks-in-parallel"]], "Rollout": [[232, "rollout"]], "Using pretrained models": [[233, "using-pretrained-models"]], "Computation times": [[234, "computation-times"]], "TensorDictModule": [[235, "tensordictmodule"]], "TensorDictModule by examples": [[235, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[235, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[235, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[235, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[235, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[235, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[235, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[235, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[235, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[235, "benchmarking"]], "TensorDict": [[236, "tensordict"], [238, "tensordict"]], "Improving the modularity of codes": [[236, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[236, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[236, "tensordict-structure"]], "TensorDict Dictionary Features": [[236, "tensordict-dictionary-features"]], "get(key)": [[236, "get-key"]], "set(key, value)": [[236, "set-key-value"]], "keys()": [[236, "keys"]], "values()": [[236, "values"]], "update(tensordict_or_dict)": [[236, "update-tensordict-or-dict"]], "del": [[236, "del"]], "TensorDict tensor features": [[236, "tensordict-tensor-features"]], "Batch size": [[236, "batch-size"]], "Devices": [[236, "devices"]], "Memory sharing via physical memory usage": [[236, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[236, "tensor-operations"]], "TorchRL envs": [[237, "torchrl-envs"]], "Gym environments": [[237, "gym-environments"]], "Env Specs": [[237, "env-specs"]], "Seeding, resetting and steps": [[237, "seeding-resetting-and-steps"]], "Rollouts": [[237, "rollouts"]], "frame_skip": [[237, "frame-skip"]], "Rendering": [[237, "rendering"]], "DeepMind Control environments": [[237, "deepmind-control-environments"]], "Transforming envs": [[237, "transforming-envs"]], "Environment device": [[237, "environment-device"]], "Running environments in parallel": [[237, "running-environments-in-parallel"]], "Closing parallel environments": [[237, "closing-parallel-environments"]], "Seeding": [[237, "seeding"]], "Accessing environment attributes": [[237, "accessing-environment-attributes"]], "kwargs for parallel environments": [[237, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[237, "transforming-parallel-environments"]], "Introduction to TorchRL": [[238, "introduction-to-torchrl"]], "Data": [[238, "data"]], "Replay buffers": [[238, "replay-buffers"]], "Envs": [[238, "envs"]], "Changing environments config": [[238, "changing-environments-config"]], "Vectorized Environments": [[238, "vectorized-environments"]], "Modules": [[238, "modules"]], "TensorDictModules": [[238, "tensordictmodules"]], "Sequences of Modules": [[238, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[238, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[238, "specialized-classes"]], "Using Environments and Modules": [[238, "using-environments-and-modules"]], "Objectives": [[238, "objectives"]], "State of the Library": [[238, "state-of-the-library"]], "Installing the Library": [[238, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[16, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[17, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "expand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.expand"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[18, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.encode"]], "expand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.expand"]], "index() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[19, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.encode"]], "expand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.expand"]], "index() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[20, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.encode"]], "expand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.expand"]], "index() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.zero"]], "multidiscretetensorspec (class in torchrl.data)": [[21, "torchrl.data.MultiDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.expand"]], "index() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.project"]], "rand() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.zero"]], "multionehotdiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[23, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[24, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[26, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[29, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.encode"]], "expand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.expand"]], "index() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[30, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "expand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.expand"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "unboundeddiscretetensorspec (class in torchrl.data)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.encode"]], "expand() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.expand"]], "index() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.index"]], "is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.is_in"]], "project() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.project"]], "rand() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.zero"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[37, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[38, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[41, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[41, "id0"], [41, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[41, "id1"], [41, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[41, "id2"], [41, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[41, "id3"], [41, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[41, "id4"], [41, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[42, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[43, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[44, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[45, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[45, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[45, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[45, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[45, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[45, "torchrl.envs.step"]], "multithreadedenv (class in torchrl.envs)": [[46, "torchrl.envs.MultiThreadedEnv"]], "add_module() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.add_module"]], "apply() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.apply"]], "batch_locked (torchrl.envs.multithreadedenv property)": [[46, "torchrl.envs.MultiThreadedEnv.batch_locked"]], "bfloat16() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.bfloat16"]], "buffers() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.buffers"]], "children() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.children"]], "close() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.close"]], "cpu() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.cpu"]], "cuda() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.cuda"]], "double() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.double"]], "eval() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.eval"]], "extra_repr() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.fake_tensordict"]], "float() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.float"]], "forward() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.forward"]], "get_buffer() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_buffer"]], "get_extra_state() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_extra_state"]], "get_parameter() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_parameter"]], "get_submodule() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.get_submodule"]], "half() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.half"]], "ipu() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.ipu"]], "load_state_dict() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.load_state_dict"]], "modules() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.modules"]], "named_buffers() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_buffers"]], "named_children() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_children"]], "named_modules() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_modules"]], "named_parameters() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.named_parameters"]], "parameters() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.parameters"]], "rand_step() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.rand_step"]], "register_backward_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_module"]], "register_parameter() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.register_parameter"]], "requires_grad_() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.requires_grad_"]], "reset() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.reset"]], "rollout() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.rollout"]], "set_extra_state() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.set_extra_state"]], "set_seed() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.set_seed"]], "share_memory() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.share_memory"]], "specs (torchrl.envs.multithreadedenv property)": [[46, "torchrl.envs.MultiThreadedEnv.specs"]], "state_dict() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.state_dict"]], "step() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.step"]], "to() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.to"]], "to_empty() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.to_empty"]], "train() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.train"]], "type() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.type"]], "xpu() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.xpu"]], "zero_grad() (torchrl.envs.multithreadedenv method)": [[46, "torchrl.envs.MultiThreadedEnv.zero_grad"]], "parallelenv (class in torchrl.envs)": [[47, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[47, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[47, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[47, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[48, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[48, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[48, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[48, "torchrl.envs.SerialEnv.zero_grad"]], "specs (class in torchrl.envs)": [[49, "torchrl.envs.Specs"]], "build_tensordict() (torchrl.envs.specs method)": [[49, "torchrl.envs.Specs.build_tensordict"]], "braxenv() (in module torchrl.envs.libs.brax)": [[50, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[51, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[52, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[53, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[54, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[55, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[56, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[57, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[58, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[59, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[60, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[61, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[62, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[63, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[64, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[65, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[66, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.DiscreteActionProjection"]], "doubletofloat (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[68, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.ExcludeTransform"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[69, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[71, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.FrameSkipTransform"]], "grayscale (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[73, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[74, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[75, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[78, "torchrl.envs.transforms.R3MTransform.to"]], "resize (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[79, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[80, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[81, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[82, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[82, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.SelectTransform"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[83, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[83, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.SqueezeTransform"]], "forward() (torchrl.envs.transforms.squeezetransform method)": [[84, "torchrl.envs.transforms.SqueezeTransform.forward"]], "stepcounter (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.StepCounter"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[85, "torchrl.envs.transforms.StepCounter.reset"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[85, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[86, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[86, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[86, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "timemaxpool (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.TimeMaxPool"]], "reset() (torchrl.envs.transforms.timemaxpool method)": [[87, "torchrl.envs.transforms.TimeMaxPool.reset"]], "transform_observation_spec() (torchrl.envs.transforms.timemaxpool method)": [[87, "torchrl.envs.transforms.TimeMaxPool.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[88, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[89, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[89, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[89, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[89, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[89, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[90, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[90, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[90, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[90, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[90, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[90, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[91, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[91, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[91, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[91, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[92, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[92, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[92, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[93, "torchrl.envs.transforms.VIPTransform"]], "to() (torchrl.envs.transforms.viptransform method)": [[93, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[94, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[94, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[94, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[94, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[94, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[95, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[95, "torchrl.envs.transforms.gSDENoise.reset"]], "check_env_specs() (in module torchrl.envs.utils)": [[96, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[97, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[98, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[99, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[100, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[101, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[101, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[102, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[102, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[103, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[103, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[104, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[104, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[105, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[105, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[106, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[106, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[107, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[107, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[107, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[107, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[107, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[107, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[108, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[108, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[109, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[109, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[110, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[110, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[111, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[111, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[112, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[112, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[113, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[113, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[114, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[114, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[114, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[115, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[115, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[116, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[116, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[117, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[118, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[118, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[119, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[119, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[120, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[120, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[121, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[121, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[121, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[121, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[121, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[122, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[122, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[123, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[123, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[124, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[124, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[124, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[125, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[125, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[126, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[126, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[126, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[127, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[128, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[129, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[129, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[129, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[130, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[130, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[130, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[131, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[131, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[131, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[132, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[132, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[132, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[133, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[134, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[134, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[134, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[135, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[135, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[137, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[138, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[138, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[138, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[138, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[139, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[139, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[139, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[140, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[141, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[142, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[143, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[143, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[143, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[144, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[145, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[146, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[147, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[148, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[148, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[149, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[150, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[151, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[151, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[152, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[152, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[153, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[153, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[154, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[154, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[155, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[155, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[156, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[156, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[157, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[157, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[158, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[158, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[159, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[160, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[160, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[161, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[161, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[162, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[162, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[163, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[163, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[164, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[164, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[165, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[166, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[167, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[168, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[169, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[170, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[170, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[171, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[171, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[172, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[172, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[173, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[174, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[175, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[176, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[177, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[178, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[179, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[180, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[181, "torchrl.record.VideoRecorder"]], "csvlogger() (in module torchrl.record.loggers)": [[182, "torchrl.record.loggers.CSVLogger"]], "logger() (in module torchrl.record.loggers)": [[183, "torchrl.record.loggers.Logger"]], "mlflowlogger() (in module torchrl.record.loggers)": [[184, "torchrl.record.loggers.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.record.loggers)": [[185, "torchrl.record.loggers.TensorboardLogger"]], "wandblogger() (in module torchrl.record.loggers)": [[186, "torchrl.record.loggers.WandbLogger"]], "generate_exp_name() (in module torchrl.record.loggers)": [[187, "torchrl.record.loggers.generate_exp_name"]], "get_logger() (in module torchrl.record.loggers)": [[188, "torchrl.record.loggers.get_logger"]], "batchsubsampler (class in torchrl.trainers)": [[189, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[190, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[191, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[192, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[193, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[194, "torchrl.trainers.Recorder"]], "rewardnormalizer (class in torchrl.trainers)": [[195, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[196, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[197, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[198, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[199, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[200, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[201, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[202, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[203, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[204, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[205, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[206, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[207, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[208, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[209, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[210, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[211, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[212, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[213, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[214, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[215, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[216, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[217, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[218, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[219, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[220, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[221, "torchrl.trainers.helpers.transformed_env_constructor"]]}})